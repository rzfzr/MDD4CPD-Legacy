{"version":3,"sources":["history.tsx","components/NavigationBar.tsx","components/Code.tsx","components/Diagram.tsx","pages/Editor.tsx","assets/master.svg","pages/Home.tsx","App.tsx","index.tsx"],"names":["createHashHistory","SimpleBottomNavigation","useState","value","setValue","currentPath","history","location","pathname","AppBar","position","color","style","top","bottom","BottomNavigation","onChange","event","newValue","push","showLabels","BottomNavigationAction","label","icon","Code","props","useEffect","Prism","highlightAll","className","language","code","engine","createEngine","node1","DefaultNodeModel","name","setPosition","port1","addOutPort","node2","port2","link","addLabel","model","DiagramModel","addAll","setModel","width","height","EditorPage","HomePage","src","masterDiagram","alt","backgroundColor","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySACeA,cAAkB,I,OCOlB,SAASC,IACpB,MAA0BC,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAcC,EAAQC,SAASC,SAGnC,OAFIL,IAAUE,GACVD,EAASC,GAET,cAACI,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAAUC,MAAO,CAAEC,IAAK,OAAQC,OAAQ,GAAvE,SACI,eAACC,EAAA,EAAD,CACIZ,MAAOA,EACPa,SAAU,SAACC,EAAOC,GACdd,EAASc,GACTZ,EAAQa,KAAKD,IAEjBE,YAAU,EANd,8BASI,cAACC,EAAA,EAAD,CAAwBC,MAAM,OAAOnB,MAAM,IAAIoB,KAAM,cAAC,IAAD,MACrD,cAACF,EAAA,EAAD,CAAwBC,MAAM,SAASnB,MAAM,UAAUoB,KAAM,cAAC,IAAD,W,qCCrB9D,SAASC,EAAKC,GAIzB,OAHAC,qBAAU,WACNC,IAAMC,iBACP,IAEC,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAMA,UAAS,mBAAcJ,EAAMK,UAAnC,SAAgDL,EAAMM,W,6BCAvD,SAAS9B,IAIpB,IAAM+B,EAASC,MAETC,EAAQ,IAAIC,mBAAiB,CAC/BC,KAAM,SACNzB,MAAO,mBAEXuB,EAAMG,YAAY,IAAK,KACvB,IAAIC,EAAQJ,EAAMK,WAAW,OAGvBC,EAAQ,IAAIL,mBAAiB,CAC/BC,KAAM,SACNzB,MAAO,mBAEX6B,EAAMH,YAAY,IAAK,KACvB,IAAII,EAAQD,EAAMD,WAAW,OAEvBG,EAAOJ,EAAMI,KAAuBD,GAC1CC,EAAKC,SAAS,gBACd,IAAMC,EAAQ,IAAIC,eAIlB,OAHAD,EAAME,OAAOZ,EAAOM,EAAOE,GAC3BV,EAAOe,SAASH,GAGZ,qBAAKhC,MAAO,CAAEoC,MAAO,OAAQC,OAAQ,QAArC,SACI,cAAC,eAAD,CAAcpB,UAAU,SAASG,OAAQA,MCrCtC,SAASkB,IActB,OAAO,sBAAKrB,UAAU,kBAAf,UACL,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAAf,SACE,cAACL,EAAD,CAAMO,KAlBA,qRAkBYD,SAAS,eCtBlB,UAA0B,mCCC1B,SAASqB,IACpB,OAAO,gCACH,qDAGA,8BACI,qBAAKC,IAAKC,EAAeC,IAAI,uBAAuB1C,MAAO,CAAE2C,gBAAiB,gBCE3E,SAASC,IACtB,OACE,qBAAK3B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,eAAC,IAAD,CAAQvB,QAASA,EAAjB,UACE,cAAC,IAAD,CAAOmD,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,cAAC,IAAD,CAAOM,KAAK,UAAUE,UAAWT,OAEnC,cAAC,EAAD,S,aCZRU,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e1a9163.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\nexport default createHashHistory({\r\n})","import { useState } from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { AppBar } from '@material-ui/core';\r\nimport history from '../history';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const [value, setValue] = useState('/');\r\n    let currentPath = history.location.pathname\r\n    if (value !== currentPath)\r\n        setValue(currentPath)\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{ top: \"auto\", bottom: 0 }}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={(event, newValue) => {\r\n                    setValue(newValue);\r\n                    history.push(newValue)\r\n                }}\r\n                showLabels\r\n            >\r\n                location.pathname\r\n                <BottomNavigationAction label=\"Home\" value=\"/\" icon={<HomeIcon />} />\r\n                <BottomNavigationAction label=\"Editor\" value=\"/editor\" icon={<EditIcon />} />\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    );\r\n}","import { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\n// import \"prismjs/themes/prism-tomorrow.css\";\r\nimport \"./prism.css\";\r\nexport default function Code(props: { code: string, language: string }) {\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, []);\r\n    return (\r\n        <div className=\"Code\">\r\n            <pre className=\"line-numbers\">\r\n                <code className={`language-${props.language}`}>{props.code}</code>\r\n            </pre>\r\n        </div>\r\n    );\r\n}","import createEngine, {\r\n    DefaultLinkModel,\r\n    DefaultNodeModel,\r\n    DiagramModel\r\n} from '@projectstorm/react-diagrams';\r\n\r\nimport {\r\n    CanvasWidget\r\n} from '@projectstorm/react-canvas-core';\r\n\r\n\r\nexport default function SimpleBottomNavigation() {\r\n\r\n\r\n    // create an instance of the engine with all the defaults\r\n    const engine = createEngine();\r\n    // node 1\r\n    const node1 = new DefaultNodeModel({\r\n        name: 'Node 1',\r\n        color: 'rgb(0,192,255)',\r\n    });\r\n    node1.setPosition(100, 100);\r\n    let port1 = node1.addOutPort('Out');\r\n\r\n    // node 2\r\n    const node2 = new DefaultNodeModel({\r\n        name: 'Node 1',\r\n        color: 'rgb(0,192,255)',\r\n    });\r\n    node2.setPosition(100, 100);\r\n    let port2 = node2.addOutPort('Out');\r\n    // link them and add a label to the link\r\n    const link = port1.link<DefaultLinkModel>(port2);\r\n    link.addLabel('Hello World!');\r\n    const model = new DiagramModel();\r\n    model.addAll(node1, node2, link);\r\n    engine.setModel(model);\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%' }}>\r\n            <CanvasWidget className='canvas' engine={engine} />\r\n        </div>\r\n    );\r\n}","import Code from \"../components/Code\"\r\nimport Diagram from \"../components/Diagram\";\r\n\r\nexport default function EditorPage() {\r\n  const code = `\r\nvoid setup() {\r\n  // initialize digital pin LED_BUILTIN as an output.\r\n  pinMode(LED_BUILTIN, OUTPUT);\r\n}\r\n\r\nvoid loop() {\r\n  digitalWrite(LED_BUILTIN, HIGH);\r\n  delay(1000);                       \r\n  digitalWrite(LED_BUILTIN, LOW);\r\n  delay(1000);                   \r\n}\r\n`;\r\n  return <div className=\"float-container\" >\r\n    <div className=\"float-child-left\">\r\n      <Diagram />\r\n    </div>\r\n    <div className=\"float-child-right\">\r\n      <Code code={code} language=\"clike\" />\r\n    </div>\r\n  </div>\r\n}","export default __webpack_public_path__ + \"static/media/master.ed79098a.svg\";","import masterDiagram from '../assets/master.svg'\r\nexport default function HomePage() {\r\n    return <div>\r\n        <h2>\r\n            Welcome to MDD4IoT!\r\n        </h2>\r\n        <div>\r\n            <img src={masterDiagram} alt=\"Architecture Diagram\" style={{ backgroundColor: \"white\" }} />\r\n        </div>\r\n\r\n    </div>\r\n}","import './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Route, Router } from 'react-router-dom'\r\n\r\nimport history from './history'\r\n\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Router history={history}>\r\n          <Route path='/' exact component={HomePage} />\r\n          <Route path='/editor' component={EditorPage} />\r\n        </Router>\r\n        <NavigationBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}