{"version":3,"sources":["components/NavigationBar.tsx","components/GoClass.tsx","components/react-diagrams/TrayItemWidget.tsx","components/react-diagrams/MyCanvasWidget.tsx","components/react-diagrams/myNode/MyRightAngleLinkModel.ts","components/react-diagrams/myNode/MyPortModel.ts","components/react-diagrams/editableNode/MyEditableNodeModel.ts","paletteNodes.js","components/goBuilder.ts","components/Code.tsx","components/react-diagrams/BodyWidget.tsx","components/react-diagrams/custom-port/MyPortLabelWidget.tsx","components/react-diagrams/custom-node/custom_components/EditableSingleField.tsx","components/react-diagrams/custom-node/custom_components/SelectableField.tsx","components/react-diagrams/editableNode/MyEditableNodeWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeFactory.tsx","components/react-diagrams/Application.ts","pages/Editor.tsx","assets/flow.svg","assets/cym_s.svg","pages/Home.tsx","pages/Models.tsx","assets/transformations.png","pages/Transformations.tsx","pages/Settings.tsx","App.tsx","index.tsx"],"names":["SimpleBottomNavigation","pathname","window","location","useState","value","setValue","AppBar","position","color","style","top","bottom","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","label","to","icon","initDiagram","arrangement","$","go","make","actualArrangement","ArrangementVertical","ArrangementHorizontal","myDiagram","layout","angle","path","PathSource","setsPortSpot","setsChildPortSpot","convertVisibility","v","propertyTemplate","isMultiline","editable","width","makeTwoWay","s","t","methodTemplate","convertIsTreeLink","r","convertIsStateLink","convertFromArrow","convertToArrow","nodeTemplate","locationSpot","Center","fromSpot","AllSides","toSpot","fill","defaultRowSeparatorStroke","row","columnSpan","margin","alignment","font","ofObject","name","stretch","Fill","defaultAlignment","Left","background","itemTemplate","column","TopRight","visible","arr","length","nodeTemplateMap","add","desiredSize","parse","stringify","stroke","strokeWidth","linkTemplate","routing","Orthogonal","scale","textAlign","model","linkKeyProperty","copiesArrays","copiesArrayObjects","GoClass","props","divClassName","nodeDataArray","nodedata","linkDataArray","linkdata","S","styled","div","p","TrayItemWidget","methods","this","node","forEach","method","push","visibility","ins","outs","key","Tray","draggable","onDragStart","dataTransfer","setData","JSON","setDragImage","Image","className","float","marginRight","fontSize","id","type","place","delayHide","effect","React","css","MyCanvasWidget","styles","Expand","Container","children","MyRightAngleLinkModel","options","RightAngleLinkFactory","NAME","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","points","getPoints","i","dx","Math","abs","getX","dy","getY","pointModel","index","setFirstAndLastPathsDirection","first","last","fireEvent","DefaultLinkModel","MyPortModel","in","PortModelAlignment","LEFT","RIGHT","extras","hasHiddenLabel","data","port","link","setWidth","setColor","h","l","a","min","f","n","k","max","hsl2rgb","random","PortModel","MyEditableNodeModel","hasUserValue","hasUserName","portsIn","portsOut","content","selectableOptions","addBiPort","addInPort","addOutPort","hasUsername","hasValue","hasUsages","Array","from","keys","map","x","toString","lookupTable","clone","getOptions","splice","indexOf","after","addPort","_","portsInOrder","getPortFromID","portsOutOrder","getID","NodeModel","analogPorts","digitalPorts","library","startDelta","endDelta","controllerDelta","transformAllIntoMethods","ports","processDynamic","nodes","links","relationship","category","methodIndex","text","generateCode","problems","code","message","m","addOnTop","getLink","linkID","find","getPort","nodeID","portID","error","getNode","getCoditionalValue","conditionNode","portName","source","sourcePort","parent","getParent","includes","instance","getOutcome","ifThis","target","targetPort","childNode","parentNode","removeTypes","functionName","substring","params","split","result","param","thisParam","String","slice","callWithParameters","contents","console","log","toPort","toNode","shift","warn","processLink","fromPort","fromNode","xValue","yValue","outcome2","toNode2","outcome3","toNode3","usedDigital","usedAnalog","processCall","Object","entries","layers","models","logics","components","controllers","libraries","constants","hasLink","toLowerCase","replace","filter","c","toUpperCase","controller","lib","comp","logic","constant","original","level","line","repeat","join","indentCode","Code","generated","cleanProblems","dirty","findIndex","sameNodes","Set","concat","useEffect","Prism","highlightAll","border","el","document","querySelector","setAttribute","problemId","display","justifyContent","start","end","height","overflow","ScrollArea","require","default","BodyWidget","setModel","rerender","setRerender","rawModel","app","getDiagramEngine","getModel","serialize","stringModel","groups","paletteNodes","Body","Content","speed","contentClassName","horizontal","smoothScrolling","verticalScrollbarStyle","backgroundColor","group","marginBottom","Layer","onDrop","getData","registerListener","linksUpdated","nodesUpdated","setPosition","getRelativeMousePoint","addNode","onDragOver","preventDefault","onClick","engine","MyPortLabel","isVoid","startsWith","FakePort","Port","labelR","LabelR","labelL","LabelL","PortLabel","Editor","onFocus","onBlurOrEnter","autoFocus","inputStyle","padding","borderStyle","borderWidth","borderColor","onBlur","onKeyDown","keyCode","EditableSingleField","state","beingEdited","editingKey","elementKey","setLocked","fontStyle","isAbstract","y","SelectableField","selected","MyEditableNodeWidget","divElement","generatePort","_editableObjectDoubleClick","editingSomething","setState","_contentOnChange","evt","nodeModel","currentTarget","_onBlurOrEnter","variableType","bind","Node","isSelected","Title","hasName","ref","onDoubleClick","TitleName","Button","next","nameIn","nameOut","repaintCanvas","found","portIn","portOut","removePort","Ports","PortsContainer","getInPorts","getOutPorts","MyEditableNodeFactory","AbstractReactFactory","Application","activeModel","diagramEngine","SRD","getNodeFactories","registerFactory","getLinkFactories","newModel","EditorPage","HomePage","src","flowDiagram","alt","maxHeight","maxWidth","cym_s","ModelsPage","nodesStatic","linksStatic","nodesDynamic","linksDynamic","TransformationsPage","transformations","PalettePage","App","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8a2d934.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AppBar } from '@material-ui/core';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n// import SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\n// import PaletteIcon from '@material-ui/icons/Palette';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TransformIcon from '@mui/icons-material/Transform';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n    const [value, setValue] = useState(pathname);\r\n    const handleChange = (event: any, newValue: any) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{ top: \"auto\", bottom: 0 }}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={handleChange}\r\n                showLabels\r\n            >\r\n                location.pathname\r\n                <BottomNavigationAction component={Link} label=\"Home\" to=\"/mdd4/\" icon={<HomeIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Models\" to=\"/mdd4/models\" icon={<MapIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Transformations\" to=\"/mdd4/transformations\" icon={<TransformIcon />} />\r\n                {/* <BottomNavigationAction component={Link} label=\"Palette\" to=\"/mdd4/palette\" icon={<PaletteIcon />} /> */}\r\n                <BottomNavigationAction component={Link} label=\"Editor\" to=\"/mdd4/editor\" icon={<EditIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Settings\" to=\"/mdd4/settings\" icon={<SettingsIcon />} />\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    );\r\n}","import * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport './go.css';\r\n\r\nfunction initDiagram(arrangement: any = 'horizontal') {\r\n    const $ = go.GraphObject.make;\r\n\r\n    const actualArrangement = arrangement === 'vertical' ? go.TreeLayout.ArrangementVertical : go.TreeLayout.ArrangementHorizontal\r\n\r\n\r\n    const myDiagram = $(go.Diagram,\r\n        {\r\n            layout: $(go.TreeLayout,\r\n                { // this only lays out in trees nodes connected by \"generalization\" links\r\n                    angle: 180,\r\n                    path: go.TreeLayout.PathSource,  // links go from child to parent\r\n                    setsPortSpot: false,  // keep Spot.AllSides for link connection spot\r\n                    setsChildPortSpot: false,  // keep Spot.AllSides\r\n                    arrangement: actualArrangement,\r\n                })\r\n        });\r\n\r\n    function convertVisibility(v: any) {\r\n        switch (v) {\r\n            case \"public\": return \"+\";\r\n            case \"private\": return \"-\";\r\n            case \"protected\": return \"#\";\r\n            case \"package\": return \"~\";\r\n            default: return v;\r\n        }\r\n    }\r\n\r\n    var propertyTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // property visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // property name, underlined if scope==\"class\" to indicate static property\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // property type, if known\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay()),\r\n            // property default value, if any\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false },\r\n                new go.Binding(\"text\", \"default\", s => s ? \" = \" + s : \"\"))\r\n        );\r\n    var methodTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // method visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // method name, underlined if scope==\"class\" to indicate static method\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay())\r\n        );\r\n\r\n    myDiagram.nodeTemplate =\r\n        $(go.Node, \"Auto\",\r\n            {\r\n                locationSpot: go.Spot.Center,\r\n                fromSpot: go.Spot.AllSides,\r\n                toSpot: go.Spot.AllSides\r\n            },\r\n            $(go.Shape, { fill: \"lightyellow\" }),\r\n            $(go.Panel, \"Table\",\r\n                { defaultRowSeparatorStroke: \"black\" },\r\n                // header\r\n                $(go.TextBlock,\r\n                    {\r\n                        row: 0, columnSpan: 2, margin: 3, alignment: go.Spot.Center,\r\n                        font: \"bold 12pt sans-serif\",\r\n                        isMultiline: false, editable: true\r\n                    },\r\n                    new go.Binding(\"text\", \"name\").makeTwoWay()),\r\n                // properties\r\n                $(go.TextBlock, \"Properties\",\r\n                    { row: 1, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"PROPERTIES\")),\r\n                $(go.Panel, \"Vertical\", { name: \"PROPERTIES\" },\r\n                    new go.Binding(\"itemArray\", \"properties\"),\r\n                    {\r\n                        row: 1, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: propertyTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"PROPERTIES\",\r\n                    { row: 1, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"properties\", arr => arr.length > 0)),\r\n                // methods\r\n                $(go.TextBlock, \"Methods\",\r\n                    { row: 2, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"METHODS\")),\r\n                $(go.Panel, \"Vertical\", { name: \"METHODS\" },\r\n                    new go.Binding(\"itemArray\", \"methods\"),\r\n                    {\r\n                        row: 2, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: methodTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"METHODS\",\r\n                    { row: 2, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"methods\", arr => arr.length > 0))\r\n            )\r\n        );\r\n    myDiagram.nodeTemplateMap.add(\"Start\",\r\n        $(go.Node, \"Spot\", {\r\n            locationSpot: go.Spot.Center,\r\n            fromSpot: go.Spot.AllSides,\r\n            toSpot: go.Spot.AllSides,\r\n            desiredSize: new go.Size(75, 75)\r\n        },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"#52ce60\", /* green */\r\n                    stroke: null,\r\n                }),\r\n            $(go.TextBlock, \"Start\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\"End\",\r\n        $(go.Node, \"Spot\", { desiredSize: new go.Size(75, 75) },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"maroon\",\r\n                    stroke: null,\r\n                }),\r\n            $(go.Shape, \"Circle\", { fill: null, desiredSize: new go.Size(65, 65), strokeWidth: 2, stroke: \"whitesmoke\" }),\r\n            $(go.TextBlock, \"End\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n    function convertIsTreeLink(r: string) {\r\n        return r === \"generalization\";\r\n    }\r\n    function convertIsStateLink(r: string) {\r\n        return r === \"state\";\r\n    }\r\n\r\n    function convertFromArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    function convertToArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"Triangle\";\r\n            case \"state\": return \"Triangle\";\r\n            case \"aggregation\": return \"StretchedDiamond\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    myDiagram.linkTemplate =\r\n        $(go.Link,\r\n            { routing: go.Link.Orthogonal },\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsTreeLink),\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsStateLink),\r\n            $(go.Shape),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"fromArrow\", \"relationship\", convertFromArrow)),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"toArrow\", \"relationship\", convertToArrow)),\r\n            $(go.TextBlock, \"\",  // the label text\r\n                {\r\n                    textAlign: \"center\",\r\n                    font: \"9pt helvetica, arial, sans-serif\",\r\n                    margin: 4,\r\n                    editable: true  // enable in-place editing\r\n                },\r\n                // editing the text automatically updates the model data\r\n                new go.Binding(\"text\").makeTwoWay())\r\n        );\r\n\r\n    myDiagram.model = new go.GraphLinksModel(\r\n        {\r\n            linkKeyProperty: 'key',\r\n            copiesArrays: true,\r\n            copiesArrayObjects: true,\r\n        });\r\n\r\n    return myDiagram;\r\n}\r\n\r\n\r\nexport default function GoClass(props: { nodedata: any, linkdata: any, arrangement: string }) {\r\n    return (\r\n        <ReactDiagram\r\n            initDiagram={initDiagram}\r\n            divClassName='diagram-component'\r\n            nodeDataArray={props.nodedata}\r\n            linkDataArray={props.linkdata}\r\n        />\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GoClass from '../GoClass';\r\n\r\nexport interface TrayItemWidgetProps {\r\n\tnode: any;\r\n}\r\n\r\nnamespace S {\r\n\texport const Tray = styled.div<{ color: string }>`\r\n\t\tcolor: white;\r\n\t\tfont-family: Helvetica, Arial;\r\n\t\tfont-size:0.6em;\r\n\t\tpadding: 2px 0px;\r\n\t\tmargin:\t 5px 10px ;\r\n\t\tborder: solid 1px ${(p) => p.color};\r\n\t\tborder-radius: 100px;\r\n\t\tmargin-bottom: 2px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: rgb(20, 20, 20);\r\n\t`;\r\n}\r\n\r\nexport class TrayItemWidget extends React.Component<TrayItemWidgetProps> {\r\n\trender() {\r\n\t\tlet methods: any[] = []\r\n\t\tthis.props.node.methods?.forEach((method: any) => {\r\n\t\t\tmethods.push({ name: method, visibility: 'public' })\r\n\t\t});\r\n\t\tthis.props.node.ins?.forEach((method: any) => {\r\n\t\t\tmethods.push({ name: method, visibility: 'public' })\r\n\t\t});\r\n\t\tthis.props.node.outs?.forEach((method: any) => {\r\n\t\t\tmethods.push({ name: method, visibility: 'public' })\r\n\t\t});\r\n\t\tconst node = {\r\n\t\t\tkey: 0,\r\n\t\t\tname: this.props.node.name,\r\n\t\t\tmethods: methods,\r\n\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<S.Tray\r\n\t\t\t\tcolor={this.props.node.color || 'red'}\r\n\t\t\t\tdraggable={true}\r\n\t\t\t\tonDragStart={(event) => {\r\n\t\t\t\t\tevent.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.node));\r\n\t\t\t\t\tevent.dataTransfer.setDragImage(new Image(), 10, 10);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"tray-item\">\r\n\r\n\t\t\t\t{this.props.node.name}\r\n\r\n\t\t\t\t<a data-tip data-for={'tip-' + this.props.node.name} style={{ float: 'right', marginRight: '6px' }} >\r\n\t\t\t\t\t<OpenInNewIcon style={{ fontSize: '1rem' }} />\r\n\t\t\t\t</a>\r\n\t\t\t\t<ReactTooltip\r\n\t\t\t\t\tclassName=\"interactableTooltip\"\r\n\t\t\t\t\tid={'tip-' + this.props.node.name}\r\n\t\t\t\t\ttype='light' place=\"right\"\r\n\t\t\t\t\tdelayHide={500}\r\n\t\t\t\t\teffect=\"solid\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className='miniGoHolder'>\r\n\t\t\t\t\t\t<GoClass\r\n\t\t\t\t\t\t\tlinkdata={[]} nodedata={[node]} arrangement='horizontal' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ReactTooltip>\r\n\t\t\t</S.Tray>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css, Global } from '@emotion/react';\r\n\r\nexport interface MyCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nnamespace S {\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\t\theight: 100%;\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\tdisplay: flex;\r\n\r\n\t\t> * {\r\n\t\t\theight: 100%;\r\n\t\t\tmin-height: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\texport const Expand = css`\r\n\t\thtml,\r\n\t\tbody,\r\n\t\t#root {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport class MyCanvasWidget extends React.Component<MyCanvasWidgetProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Global styles={S.Expand} />\r\n\t\t\t\t<S.Container\r\n\t\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</S.Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\r\nimport { PointModel } from '@projectstorm/react-diagrams-core';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { RightAngleLinkFactory } from '@projectstorm/react-diagrams';\r\n\r\nexport class MyRightAngleLinkModel extends DefaultLinkModel {\r\n\tlastHoverIndexOfPath: number;\r\n\tprivate _lastPathXdirection: boolean;\r\n\tprivate _firstPathXdirection: boolean;\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: RightAngleLinkFactory.NAME,\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.lastHoverIndexOfPath = 0;\r\n\t\tthis._lastPathXdirection = false;\r\n\t\tthis._firstPathXdirection = false;\r\n\t}\r\n\r\n\tsetFirstAndLastPathsDirection() {\r\n\t\tlet points = this.getPoints();\r\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\r\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\r\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\r\n\t\t\tif (i - 1 === 0) {\r\n\t\t\t\tthis._firstPathXdirection = dx > dy;\r\n\t\t\t} else {\r\n\t\t\t\tthis._lastPathXdirection = dx > dy;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// @ts-ignore\r\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\r\n\t\t// @ts-ignore\r\n\t\tsuper.addPoint(pointModel, index);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t\treturn pointModel;\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t}\r\n\r\n\tsetManuallyFirstAndLastPathsDirection(first: boolean, last: boolean) {\r\n\t\tthis._firstPathXdirection = first;\r\n\t\tthis._lastPathXdirection = last;\r\n\t}\r\n\r\n\tgetLastPathXdirection(): boolean {\r\n\t\treturn this._lastPathXdirection;\r\n\t}\r\n\tgetFirstPathXdirection(): boolean {\r\n\t\treturn this._firstPathXdirection;\r\n\t}\r\n\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}","import {\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { MyRightAngleLinkModel } from './MyRightAngleLinkModel';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\n\r\nexport interface MyPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n\thasHiddenLabel?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: MyPortModelOptions;\r\n}\r\n\r\nexport class MyPortModel extends PortModel<DefaultPortModelGenerics> {\r\n\textras: any;\r\n\tconstructor(options: MyPortModelOptions) {\r\n\t\tsuper({\r\n\t\t\tin: options.in,\r\n\t\t\tname: options.name,\r\n\t\t\tlabel: options.label || options.name,\r\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\r\n\t\t\ttype: 'default',\r\n\t\t\textras: { hasHiddenLabel: options.hasHiddenLabel }\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.extras = event.data.extras;\r\n\t\tthis.options.in = event.data.in;\r\n\t\tthis.options.label = event.data.label;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tin: this.options.in,\r\n\t\t\tlabel: this.options.label,\r\n\t\t\textras: this.options.extras,\r\n\t\t};\r\n\t}\r\n\r\n\tcanLinkToPort(port: PortModel): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tcreateLinkModel(): MyRightAngleLinkModel {\r\n\r\n\t\tfunction hsl2rgb(h: any, s: any, l: any) {\r\n\t\t\tlet a = s * Math.min(l, 1 - l);\r\n\t\t\tlet f = (n: any, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n\t\t\treturn [f(0), f(8), f(4)];\r\n\t\t}\r\n\t\tlet link = new MyRightAngleLinkModel()\r\n\t\tlink.setWidth(5)\r\n\t\tlink.setColor('rgb(' + hsl2rgb(Math.random() * 360, 100, 100) +\r\n\t\t\t')')\r\n\t\treturn link\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyEditableNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    portsIn: MyPortModel[] = [];\r\n    portsOut: MyPortModel[] = [];\r\n    content: Object;\r\n    extras: any;\r\n    selectableOptions: string[];\r\n    constructor(data: any, hasUserValue: boolean, hasUserName: boolean) {\r\n        super({\r\n            type: 'MyEditable',\r\n            name: data.name,\r\n            color: data.color,\r\n        });\r\n        this.extras = data.extras;\r\n\r\n        data.methods?.forEach((method: string) => {\r\n            this.addBiPort(method)\r\n        });\r\n        data.ins?.forEach((method: string) => {\r\n            this.addInPort(method)\r\n        });\r\n        data.outs?.forEach((method: string) => {\r\n            this.addOutPort(method)\r\n        });\r\n\r\n        //Custom settup for diffent types\r\n        const content = { name: 'userName', hasUsername: hasUserName, value: '', hasValue: hasUserValue, hasUsages: false }\r\n        this.selectableOptions = ['something', 'went wrong'];\r\n\r\n\r\n        switch (data.name) {\r\n            case 'bool':\r\n                content.value = 'true'\r\n                this.selectableOptions = ['true', 'false'];\r\n                break;\r\n            case 'port':\r\n                content.value = '0'\r\n                this.selectableOptions = Array.from(Array(10).keys()).map(x => x.toString())\r\n                break;\r\n            case 'int':\r\n                content.value = '0'\r\n                break;\r\n            case 'Parameter(s)':\r\n                content.value = '0'\r\n                content.hasUsages = true\r\n                break;\r\n            case 'Function':\r\n                content.value = 'foo'\r\n                content.hasUsages = true\r\n                break;\r\n            case 'Condition':\r\n                content.value = '=='\r\n                this.selectableOptions = ['==', '!=', '<', '>', '<=', '>=', '<=>']\r\n                break;\r\n            default:\r\n                content.value = 'value'\r\n                break;\r\n        }\r\n        this.content = content\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true, hasHiddenLabel = false): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: hasHiddenLabel ? label + ' ' : label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT,\r\n            hasHiddenLabel: hasHiddenLabel\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT,\r\n            hasHiddenLabel: false\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addBiPort(label: string, after = true): MyPortModel {\r\n        this.addOutPort(label, after)\r\n        return this.addInPort(label, after, true)\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n        this.content = event.data.content\r\n        this.selectableOptions = event.data.selectableOptions\r\n    }\r\n\r\n    serialize(): any {\r\n        const re = {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras,\r\n            content: this.content,\r\n            selectableOptions: this.selectableOptions\r\n        }\r\n\r\n        // console.log('re', re)\r\n\r\n        return re;\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n        name: 'Arduino Uno',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 14,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    }, {\r\n        name: 'Arduino Nano',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 22,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Mega',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 16,\r\n            digitalPorts: 54,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Leonardo',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 12,\r\n            digitalPorts: 20,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Flora',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 4,\r\n            digitalPorts: 8,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void digitalWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'int digitalRead(int pin)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Analog I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void analoglWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'void analogReference(int type)',\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'Time',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'void delayMicroseconds(int us)',\r\n            'unsigned long micros()',\r\n            'unsigned long millis()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Math',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'int abs(int x)',\r\n            'int constrain(int x, int a, int b)',\r\n            'int map(int value, int fromLow, int fromHigh, int toLow, int toHigh)',\r\n            'any? max(any x, any y)',\r\n            'any? min(any x, any y)',\r\n            'double pow(float base, float exponent)',\r\n            'double sq(any x)',\r\n            'double sqrt(any x)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Trigonometry',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'double cos(float rad)',\r\n            'double sin(float rad)',\r\n            'double tan(float rad)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Random Numbers',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void randomSeed(long seed)',\r\n            'long random(? max)',\r\n            'long random(? min, ? max)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'true',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'false',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'HIGH',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'LOW',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        outs: [\r\n            'port',\r\n        ]\r\n    }, {\r\n        name: 'Analog Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        outs: [\r\n            'port',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Function',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'call',\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n        ]\r\n    }, {\r\n        name: 'Condition',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n            'x',\r\n            'y'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Loop',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'startValue',\r\n            'stopValue'\r\n        ]\r\n    },\r\n\r\n    {\r\n        name: 'TwoWire Interface',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Wire.h'\r\n        },\r\n        methods: [\r\n            'void begin()',\r\n            'void beginTransmission()',\r\n            'void setClock()',\r\n            'void onReceive()',\r\n            'void onRequest()',\r\n            'byte requestFrom()',\r\n            'byte endTransmission()',\r\n            'byte write()',\r\n            'byte available()',\r\n            'byte read()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'PWM Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Adafruit_PWMServoDriver.h'\r\n        },\r\n        methods: [\r\n            'void begin(uint8_t prescale=0)',\r\n            'void sleep()',\r\n            'void wakeup()',\r\n            'void setExtClk(uint8_t prescale)',\r\n            'void setPWMFreq(float freq)',\r\n            'void setOutputMode(bool totempole)',\r\n            'void setPWM(uint8_t num, uint16_t on, uint16_t off)',\r\n            'void setPin(uint8_t num, uint16_t val, bool invert=false)',\r\n            'void writeMicroseconds(uint8_t num, uint16_t Microseconds)',\r\n            'void setOscillatorFrequency(uint32_t freq)',\r\n            'uint8_t getPWM(uint8_t num)',\r\n            'uint8_t readPrescale()',\r\n            'uint32_t getOscillatorFrequency()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Servo.h'\r\n        },\r\n        methods: [\r\n            'void detach()',\r\n            'void write(int)',\r\n            'void writeMicroseconds(int)',\r\n            'uint8_t attach(int)',\r\n            'uint8_t attach(int, int, int)',\r\n            'int read()',\r\n            'int readMicroseconds()',\r\n            'bool attached()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Stepper',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Stepper.h'\r\n        },\r\n        methods: [\r\n            'Stepper(int, int, int)',\r\n            'Stepper(int, int, int, int, int)',\r\n            'Stepper(int, int, int, int, int, int)',\r\n            'void setSpeed(long whatSpeed)',\r\n            'void step(int number_of_steps)',\r\n            'int version(void)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Parameter(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'parameter'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(int)',\r\n        ],\r\n        outs: [\r\n            'int getValue()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(bool)',\r\n        ],\r\n        outs: [\r\n            'bool',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Constant Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'Constant Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n]","\r\nconst startDelta = 1000\r\nconst endDelta = 2000\r\nconst controllerDelta = 3000\r\nconst methodDelta = 4000\r\n\r\n\r\n\r\n\r\nexport function transformAllIntoMethods(node: any) {\r\n    let methods: any[] = []\r\n    node.ports?.forEach((method: any) => {\r\n        methods.push({ name: method.label, visibility: 'public' })\r\n    });\r\n\r\n    node.methods?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    node.ins?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    node.outs?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    return methods\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function processDynamic(node: any, index: number) {\r\n    let nodes: any[] = []\r\n    let links: any[] = []\r\n\r\n\r\n    nodes.push({ key: index + controllerDelta, name: 'MicroController' })\r\n    links.push({\r\n        key: index + controllerDelta,\r\n        from: index + startDelta,\r\n        to: index + controllerDelta,\r\n        relationship: \"state\"\r\n    })\r\n    nodes.push({ key: index + startDelta, category: \"Start\" })\r\n\r\n    transformAllIntoMethods(node).forEach((method, methodIndex) => {\r\n        links.push({\r\n            key: index + startDelta + methodIndex * methodDelta,\r\n            from: index + controllerDelta,\r\n            to: index, text: method.name,\r\n            relationship: \"state\"\r\n        })\r\n    });\r\n    nodes.push({\r\n        key: index,\r\n        name: node.name,\r\n    })\r\n    links.push({\r\n        key: index + endDelta,\r\n        from: index,\r\n        to: index + endDelta,\r\n        relationship: \"state\"\r\n    })\r\n    nodes.push({ key: index + endDelta, category: \"End\" })\r\n\r\n    return { nodes, links }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport Prism from \"prismjs\";\r\nimport { useEffect } from \"react\";\r\nimport \"./prism.css\";\r\n// import PrismEdit from \"./PrismEdit\";\r\nimport Xarrow from \"react-xarrows\";\r\n\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GoClass from './GoClass';\r\n\r\nimport { processDynamic } from \"../components/goBuilder\"\r\n\r\nfunction generateCode(model: any): { code: string, problems: any[] } {\r\n    let problems: any[] = []\r\n    let code = ''\r\n    const add = (...message: string[]) => {\r\n        message.forEach((m) => {\r\n            code += m;\r\n        });\r\n        code += \"\\n\";\r\n        return code;\r\n    };\r\n    const addOnTop = (...message: string[]) => {\r\n        let top = ''\r\n        message.forEach((m) => {\r\n            top += m;\r\n        });\r\n        code = top + \"\\n\" + code\r\n    };\r\n    const getLink = (linkID: string) => {\r\n        return links.find(l => l.id === linkID)\r\n    }\r\n    const getPort = (nodeID: string, portID: string) => {\r\n        try {\r\n            return nodes.find((n: any) => n.id === nodeID).ports\r\n                .find((p: any) => p.id === portID);\r\n        } catch (error) {\r\n            return \"// Loose end\"\r\n        }\r\n    }\r\n    const getNode = (nodeID: string) => {\r\n        return nodes.find((n: any) => n.id === nodeID)\r\n    }\r\n    const getCoditionalValue = (conditionNode: any, portName: any): string => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === portName).links[0]\r\n            let link = getLink(linkID)\r\n            let port = getPort(link.source, link.sourcePort)\r\n            let parent = getParent(port)\r\n\r\n            if (['variable', 'port'].includes(parent.extras.type)) {\r\n                return parent.content.value\r\n            }\r\n            else if (['component'].includes(parent.extras.type)) {\r\n                return parent.instance + '.' + port.name\r\n            } else {\r\n                return add('Unknown extras.type')\r\n            }\r\n        } catch (error) {\r\n            return '/* Lacking Value */'\r\n        }\r\n    }\r\n    const getOutcome = (conditionNode: any, ifThis = 'True') => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === ifThis).links[0]\r\n            let link = getLink(linkID)\r\n            return getPort(link.target, link.targetPort)\r\n        } catch (error) {\r\n            return { label: '// Lacking Outcome' }\r\n        }\r\n    }\r\n    const getParent = (childNode: any) => {\r\n        return nodes.find((n: any) => n.id === childNode.parentNode)\r\n    }\r\n    const removeTypes = (name: string): string => {\r\n        const functionName = name.substring(name.indexOf(' ') + 1, name.indexOf('(') !== -1 ? name.indexOf('(') : name.length)\r\n        const params = name.substring(name.indexOf('('), name.indexOf(')') - 1).split(',')\r\n        let result = functionName\r\n        params.forEach(param => {\r\n            if (!param.includes('=')) {\r\n                let thisParam = String(param.split(' ').slice(-1))\r\n                result += thisParam\r\n            }\r\n        });\r\n        // console.log('removing types from', name, 'params ', params, ' returning', result)\r\n        return result;\r\n    }\r\n    const callWithParameters = (node: any, ...contents: any) => {\r\n        try {\r\n            if (node.extras.type === 'constant') {\r\n                contents.push(node.content.name)\r\n            } else {\r\n                contents.push(node.content.value)\r\n            }\r\n        } catch (error) {\r\n            console.log('error, no parameter?')\r\n        }\r\n        node.ports.forEach((port: any) => {\r\n            port.links.forEach((l: any) => {\r\n                const link = getLink(l);\r\n                const toPort = getPort(link.target, link.targetPort)\r\n                const toNode = getNode(toPort.parentNode)\r\n                if (!toNode) {\r\n                    warn('Loose link', [node])\r\n                } else if (toNode?.id === node?.id) {//skip as it is the previous link\r\n                    if (toNode.instance) {\r\n                        add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                    }\r\n                } else if (toNode?.extras?.type === 'built-in') {\r\n                    add(removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                } else if (!toNode?.instance) {//points to another variable/port\r\n                    callWithParameters(toNode, ...contents)\r\n                } else {//points to a class instance, we hope it is a method call\r\n                    //todo: check for parameter type and numbers\r\n                    add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                }\r\n            })\r\n        })\r\n    }\r\n    const processCall = (fromNode: any, fromPort: any, toNode: any, toPort: any) => {\r\n        if (['variable', 'constant', 'parameter'].includes(toNode?.extras?.type)) {\r\n            callWithParameters(toNode)\r\n        } else if (['port'].includes(toNode?.extras?.type)) {\r\n            if (toNode.name.includes('Digital')) {\r\n                usedDigital.push(toNode.content.value)\r\n            } else {\r\n                usedAnalog.push(toNode.content.value)\r\n            }\r\n            callWithParameters(toNode)\r\n        } else {\r\n            if (toNode?.instance) {\r\n                add(toNode.instance + '.' + removeTypes(toPort.name) + '();')\r\n            } else if (fromNode?.instance) {\r\n                add(fromNode.instance + '.' + removeTypes(fromPort.name) + '();')\r\n            } else {\r\n                warn('Loose connection', [fromNode])\r\n            }\r\n        }\r\n    }\r\n    const processLink = (l: any) => {\r\n        const link = getLink(l);\r\n        const toPort = getPort(link.target, link.targetPort)\r\n        if (!toPort) return\r\n        const toNode = getNode(toPort.parentNode)\r\n        const fromPort = getPort(link.source, link.sourcePort)\r\n        const fromNode = getNode(fromPort.parentNode)\r\n\r\n        if (toNode?.extras?.type === 'built-in') {\r\n            add(removeTypes(toPort.name) + '()')\r\n        } else if (toNode?.name === \"Function\") {\r\n            add(toNode.content.value, '(', ');')\r\n        } else if (toNode?.name === \"Condition\") {\r\n            const xValue = getCoditionalValue(toNode, 'x')\r\n            const yValue = getCoditionalValue(toNode, 'y')\r\n\r\n            const outcome2 = getOutcome(toNode)\r\n            const toNode2 = getParent(outcome2)\r\n\r\n            const outcome3 = getOutcome(toNode, 'False')\r\n            const toNode3 = getParent(outcome3)\r\n\r\n            add('if (', xValue, ' ' + toNode.content.value + ' ', yValue, ') {')\r\n            if (toNode2) {\r\n                callWithParameters(toNode2)\r\n            } else {\r\n                add('/* Lacking code to be executed if conditional is true */')\r\n            }\r\n            if (toNode3) {\r\n                add('} else {')\r\n                callWithParameters(toNode3)\r\n            }\r\n            add(\"}\\n\");\r\n\r\n        } else {\r\n            processCall(fromNode, fromPort, toNode, toPort)\r\n        }\r\n    }\r\n\r\n    const warn = (message: string, nodes: any[] = [], type: any = 'not used') => {\r\n        problems.push({ message, nodes: nodes });\r\n        return problems\r\n    };\r\n\r\n    if (Object.keys(model).length === 0) {\r\n        return { code: '// Empty Diagram!', problems: [] };\r\n    }\r\n    const links: any[] = []\r\n    Object.entries(model.layers[0].models).forEach((x: any) => {\r\n        links.push(x[1])\r\n    })\r\n    const nodes: any[] = []\r\n    const logics: any[] = []\r\n    const components: any[] = []\r\n    const controllers: any[] = []\r\n    const libraries: any[] = []\r\n    const constants: any[] = []\r\n\r\n    const usedDigital: number[] = []\r\n    const usedAnalog: number[] = []\r\n\r\n    Object.entries(model.layers[1].models).forEach((x: any) => {\r\n        const n = x[1]\r\n        nodes.push(n)\r\n\r\n        let hasLink = false\r\n        n.ports.forEach((port: any) => {\r\n            if (port.links.length > 0) {\r\n                hasLink = true\r\n            }\r\n        });\r\n        if (!hasLink) {\r\n            warn('This component has no links', [n])\r\n        }\r\n        switch (n.extras.type) {\r\n            case 'component':\r\n                n.instance = n.name.toLowerCase().replace(' ', '') + components.filter(c => c.extras.library === n.extras.library).length\r\n                components.push(n)\r\n                if (!libraries.includes(n.extras.library))\r\n                    libraries.push(n.extras.library)\r\n                break\r\n            case 'controller':\r\n                controllers.push(n)\r\n                break\r\n            case 'logic':\r\n                logics.push(n)\r\n                break\r\n            case 'variable':\r\n            case 'parameter':\r\n                if (hasLink) {\r\n                    n.ports.forEach((port: any) => {\r\n                        if (port.links.length > 1) {\r\n                            warn(`This ${n.name.toLowerCase()} has more than one link in the same ${port.label} port.`, [n])\r\n                        } else {\r\n                            if (port.links.length === 0) {\r\n                                // console.log('nodel', model.layers[1].models)\r\n                                warn(`This ${n.name.toLowerCase()} is not being used.`, [n])\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                break\r\n            case 'constant':\r\n                n.content.name = n.content.name.toUpperCase()\r\n                constants.push(n)\r\n                break\r\n        }\r\n    })\r\n\r\n    if (controllers.length === 0) {\r\n        return { code: '', problems: warn('No micro-controller') }\r\n    }\r\n    if (controllers.length > 1) {\r\n        return {\r\n            code: '// Only one Arduino allowed!',\r\n            problems: warn('More than one micro-controller', controllers)\r\n        }\r\n    }\r\n\r\n    let controller = controllers[0]\r\n\r\n    if (libraries.length > 0) {\r\n        add('// Libraries')\r\n        libraries.forEach(lib => {\r\n            add('#include <' + lib + '>')\r\n        });\r\n        add('')\r\n        add('// Objects')\r\n        libraries.forEach(lib => {\r\n            components.forEach(comp => {\r\n                if (comp.extras.library === lib)\r\n                    add(comp.name + ' ' + comp.instance)\r\n            });\r\n        });\r\n    }\r\n\r\n    if (logics.filter(l => l.name === 'Function').length > 0) {\r\n        add('// Functions')\r\n        logics.forEach(logic => {\r\n            if (logic.name === \"Function\") {\r\n                add('void ', logic.content.value, '() {')\r\n                const callPort = logic.ports.find((x: any) => x.alignment === 'right')\r\n                callPort.links.forEach((l: any) => {\r\n                    processLink(l)\r\n                });\r\n                add('}')\r\n            }\r\n        });\r\n    }\r\n\r\n    if (constants.length > 0) {\r\n        add('// Constants')\r\n        constants.forEach(constant => {\r\n            add(`#define ${constant.content.name} ${constant.content.value} //${constant.name}`)\r\n        });\r\n        add('')\r\n    }\r\n\r\n    add(`// Micro-controller's Lifecycle`)\r\n    // let content.value: string | null = null\r\n    controller.ports.forEach((port: any) => {\r\n        add('void ', port.label, \"{\");\r\n        port.links.forEach((l: any) => {\r\n            processLink(l)\r\n        })\r\n        add(\"}\\n\");\r\n    })\r\n\r\n    addOnTop(\"\")\r\n    addOnTop(`Digital ports ${usedDigital.length}/${controller.extras.digitalPorts} ${usedDigital.length > 0 ? `(${usedDigital})` : \"\"}`, \"*/\")\r\n    addOnTop(`Analog ports ${usedAnalog.length}/${controller.extras.analogPorts} ${usedAnalog.length > 0 ? `(${usedAnalog})` : \"\"} `)\r\n    addOnTop(\"/* Code generated for \", controller.name);\r\n\r\n    function indentCode(original: string) {\r\n        let code: any[] = [];\r\n        let level = 0;\r\n        let tab = \"    \";\r\n        original.split(\"\\n\").forEach((line) => {\r\n            if (line.includes(\"}\")) {\r\n                level--;\r\n            }\r\n            code.push(tab.repeat(level) + line);\r\n            if (line.includes(\"{\")) {\r\n                level++;\r\n            }\r\n        });\r\n        return code.join(\"\\n\");\r\n    }\r\n    return { code: indentCode(code), problems };\r\n}\r\nexport default function Code(props: { model: string }) {\r\n    // console.log('CodeComponent render')\r\n    const model = props.model\r\n    let code = ''\r\n    let problems: any[] = []\r\n\r\n    if (model === \"{}\" || model === \"\") {\r\n    } else {\r\n        const generated = generateCode(JSON.parse(model))\r\n        code = generated.code\r\n        let cleanProblems: any[] = []\r\n        generated.problems.forEach(dirty => {\r\n            if (cleanProblems.findIndex(p => p.message === dirty.message) === -1) {\r\n                const sameNodes = Array.from(new Set([].concat(...generated.problems.filter(p => p.message === dirty.message).map(p => p.nodes))))\r\n                cleanProblems.push({ message: dirty.message, nodes: sameNodes })\r\n            }\r\n        });\r\n        problems = cleanProblems\r\n    }\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, [props])\r\n    return (\r\n        <div className=\"Code\">\r\n            <div style={{ border: problems.length !== 0 ? 'solid yellow 2px' : 'dotted black 2px' }}>\r\n                <div style={{ border: problems.length !== 0 ? 'solid yellow 1px' : 'dotted white 1px', fontSize: '1em' }}>\r\n                    {problems.length} Problems!\r\n                </div>\r\n                {\r\n                    problems.map((p: any, index: any) => {\r\n                        if (p.nodes.length > 0) {\r\n                            p.nodes.forEach((node: any) => {\r\n                                const el = document.querySelector(`[data-nodeid='${node.id}']`)\r\n                                if (el) el.setAttribute('id', node.id)\r\n                            });\r\n                        }\r\n                        const problemId = p.nodes.length > 0 ? 'problem-' + p.nodes[0].id + index : 'problem-nodeless' + index\r\n\r\n                        let nodedata: any[] = []\r\n                        let linkdata: any[] = []\r\n                        p.nodes.forEach((node: any, index: number) => {\r\n                            const { nodes, links } = processDynamic(node, index)\r\n                            nodedata.push(...nodes)\r\n                            linkdata.push(...links)\r\n                        });\r\n\r\n                        return <div id={problemId} key={problemId} style={{ fontSize: '0.6em', border: 'solid white 1px' }}>\r\n\r\n                            Model violation: {p.message}\r\n                            <a data-tip data-for={'tip-' + problemId} style={{ float: 'left', marginRight: '6px' }} >\r\n                                <OpenInNewIcon style={{ fontSize: '1rem' }} />\r\n                            </a>\r\n                            <ReactTooltip\r\n                                className=\"interactableTooltip\"\r\n                                id={'tip-' + problemId}\r\n                                type='light' place=\"bottom\"\r\n                                delayHide={500}\r\n                                effect=\"solid\"\r\n                            >\r\n                                <div className='miniGoHolder'>\r\n\r\n\r\n                                    <GoClass\r\n                                        linkdata={linkdata} nodedata={nodedata} arrangement='horizontal' />\r\n                                </div>\r\n                            </ReactTooltip>\r\n\r\n\r\n                            {p.nodes.map((node: any, index: any) => {\r\n                                return <div key={index} style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"100%\" }}>\r\n                                    <Xarrow\r\n                                        strokeWidth={2}\r\n                                        start={problemId}\r\n                                        end={node.id}\r\n                                        color='yellow'\r\n                                    />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            <pre style={{\r\n                height: '100%', overflow: 'auto'\r\n            }}>\r\n                <code className=\"language-clike\">{code}</code>\r\n            </pre >\r\n        </div >\r\n    );\r\n}","import * as React from 'react';\r\nimport { Application } from './Application';\r\nimport { TrayItemWidget } from './TrayItemWidget';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { MyCanvasWidget } from './MyCanvasWidget';\r\nimport styled from '@emotion/styled';\r\nimport { MyEditableNodeModel } from './editableNode/MyEditableNodeModel';\r\nimport paletteNodes from '../../paletteNodes';\r\nimport { useState, useEffect } from 'react';\r\nimport Code from '../Code';\r\nvar ScrollArea = require('react-scrollbar').default;\r\nexport interface BodyWidgetProps {\r\n\tapp: Application;\r\n}\r\n\r\nnamespace S {\r\n\texport const Body = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100%;\r\n\t\twidth: 100%;\r\n\t\tgrid-template-columns: 55% 1fr;\r\n\t`;\r\n\r\n\texport const Content = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Layer = styled.div`\r\n\t\tposition: relative;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Code = styled.div`\r\n\t\tposition: absolute;\r\n\t\tbackground-color: #2d2d2d ;\r\n\t\tleft:50%;\r\n\t\ttop:0;\r\n\t\tright:0;\r\n\t\tbottom:0;\r\n\t\tmargin:0;\r\n\t\tpadding:0;\r\n\t\t`;\r\n\r\n}\r\n\r\nfunction BodyWidget(props: BodyWidgetProps) {\r\n\tconst [model, setModel] = useState(\"{}\")\r\n\tconst [rerender, setRerender] = React.useState(false);\r\n\r\n\tconst rawModel = props.app.getDiagramEngine().getModel().serialize()\r\n\tconst stringModel = JSON.stringify(rawModel, null, 2)\r\n\r\n\tconst groups = [...new Set(paletteNodes.map(x => x.extras.type))]\r\n\tuseEffect(() => {\r\n\t\tif (stringModel !== model) {\r\n\t\t\tsetModel(stringModel);\r\n\t\t}\r\n\t}, [stringModel, model]);\r\n\r\n\treturn (\r\n\t\t<S.Body>\r\n\t\t\t<S.Content >\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ScrollArea\r\n\t\t\t\t\t\tspeed={1}\r\n\t\t\t\t\t\tclassName=\"area\"\r\n\t\t\t\t\t\tcontentClassName=\"content\"\r\n\t\t\t\t\t\thorizontal={false}\r\n\t\t\t\t\t\tstyle={{ height: '95vh' }}\r\n\t\t\t\t\t\tsmoothScrolling={true}\r\n\t\t\t\t\t\tverticalScrollbarStyle={{ backgroundColor: 'white' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgroups.map((group) => {\r\n\t\t\t\t\t\t\t\treturn <div key={group} style={{ border: 'dashed white 1px', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t<h6 style={{ margin: '0px 0px 0px 0px' }}>{group[0].toUpperCase() + group.slice(1) + 's'}:</h6>\r\n\t\t\t\t\t\t\t\t\t{paletteNodes.filter(n => n.extras.type === group).map((node) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <TrayItemWidget key={node.name} node={node} />\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ScrollArea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<S.Layer\r\n\t\t\t\t\tonDrop={(event) => {\r\n\t\t\t\t\t\tlet data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\tlet node: any = {};\r\n\r\n\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().registerListener({\r\n\t\t\t\t\t\t\t\tlinksUpdated: (l: any) => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t// console.log(\"link\\n\");\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tnodesUpdated: (n: any) => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t// console.log(\"node\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tswitch (data.extras.type) {\r\n\t\t\t\t\t\t\t\tcase \"variable\":\r\n\t\t\t\t\t\t\t\tcase \"constant\":\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, true, true);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"parameter\":\r\n\t\t\t\t\t\t\t\tcase \"port\":\r\n\t\t\t\t\t\t\t\tcase \"logic\":\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, true, false);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"controller\":\r\n\t\t\t\t\t\t\t\tcase \"built-in\":\r\n\t\t\t\t\t\t\t\tcase \"built-in-constant\":\r\n\t\t\t\t\t\t\t\tcase \"component\":\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, false, false);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnode.setPosition(props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonDragOver={(event: any) => {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={(event: any) => {\r\n\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t\t<MyCanvasWidget >\r\n\t\t\t\t\t\t\t<CanvasWidget engine={props.app.getDiagramEngine()} />\r\n\t\t\t\t\t\t</MyCanvasWidget>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</S.Layer>\r\n\t\t\t</S.Content>\r\n\t\t\t<S.Code>\r\n\t\t\t\t<Code model={model} />\r\n\t\t\t</S.Code>\r\n\t\t</S.Body >\r\n\t)\r\n\r\n}\r\nexport default React.memo(BodyWidget)","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport styled from '@emotion/styled';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface MyPortLabelProps {\r\n    port: MyPortModel;\r\n    engine: DiagramEngine;\r\n}\r\n\r\nnamespace S {\r\n    export const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t`;\r\n\r\n    export const LabelR = styled.div`\r\n\t\tpadding: 0 4px 0 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const LabelL = styled.div`\r\n\t\tpadding: 0 0 0px 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const Port = styled.div((props: any) => ({\r\n        border: 'solid 1px white',\r\n        width: '14px',\r\n        height: '14px',\r\n        background: (props.hasLink ? 'rgba(255, 192, 0, 0.7)' : 'rgba(255, 255, 255, 0.3)'),\r\n        '&:hover': {\r\n            background: 'rgb(192, 255, 0)',\r\n        }\r\n    }))\r\n\r\n\r\n    export const FakePort = styled.div`\r\n        width: 16px;\r\n\t\theight: 16px;\r\n\t`;\r\n}\r\n\r\nexport class MyPortLabel extends React.Component<MyPortLabelProps> {\r\n    render() {\r\n        const hasLink = Object.keys(this.props?.port?.links).length !== 0\r\n        const hasHiddenLabel = this.props?.port?.getOptions().extras.hasHiddenLabel\r\n        let isVoid = false\r\n        if (this.props?.port?.getOptions().label?.startsWith('void')) {\r\n            if (this.props?.port?.getOptions().alignment === \"right\") {\r\n                isVoid = true\r\n            }\r\n        }\r\n        const port = isVoid ? (<S.FakePort />) : (\r\n            <PortWidget engine={this.props.engine\r\n            } port={this.props.port} >\r\n                <S.Port hasLink={hasLink} />\r\n            </PortWidget>\r\n        );\r\n\r\n        const labelR = <S.LabelR>{this.props.port.getOptions().label}</S.LabelR>;\r\n        const labelL = <S.LabelL>{this.props.port.getOptions().label}</S.LabelL>;\r\n\r\n        return (\r\n            <S.PortLabel>\r\n                {this.props.port.getOptions().in ? port : !hasHiddenLabel && labelR}\r\n                {this.props.port.getOptions().in ? !hasHiddenLabel && labelL : port}\r\n            </S.PortLabel>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport AutosizeInput from 'react-input-autosize';\r\n\r\nexport interface IEditableSingleFieldProps {\r\n  node: any;\r\n  beingEdited: boolean;\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\nconst Editor = ({\r\n  content,\r\n  onFocus,\r\n  onChange,\r\n  onBlurOrEnter,\r\n}: {\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n}) => {\r\n  return (\r\n    <AutosizeInput\r\n      autoFocus\r\n      inputStyle={{\r\n        padding: 1,\r\n        borderStyle: \"dotted\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n      }}\r\n      type=\"text\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      onBlur={onBlurOrEnter}\r\n      onKeyDown={(event: any) => {\r\n        if (event.keyCode === 13) onBlurOrEnter();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class EditableSingleField extends React.Component<\r\n  IEditableSingleFieldProps\r\n> {\r\n  constructor(props: IEditableSingleFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n    // console.log('node', this.props.node)\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onFocus={() => this.props.node.setLocked(true)}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={() => {\r\n              this.props.node.setLocked(false)\r\n              this.props.onBlurOrEnter()\r\n            }}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface ISelectableFieldProps {\r\n  beingEdited: boolean;\r\n  options: Array<string>\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface ISelectableFieldState { }\r\n\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n  options\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  options: Array<string>;\r\n}) => {\r\n  return (\r\n    <select name=\"values\" id=\"values\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n    >\r\n      {\r\n        options.map((x, y) =>\r\n          <option key={y}>{x}</option>)\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default class SelectableField extends React.Component<\r\n  ISelectableFieldProps,\r\n  ISelectableFieldState\r\n> {\r\n  constructor(props: ISelectableFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n            options={this.props.options}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport \"./MyEditableNodeWidgedStyle.css\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\nimport { MyPortLabel } from \"../custom-port/MyPortLabelWidget\"\r\nimport styled from '@emotion/styled';\r\n\r\nimport EditableSingleField from \"../custom-node/custom_components/EditableSingleField\";\r\nimport SelectableField from \"../custom-node/custom_components/SelectableField\";\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nnamespace S {\r\n  export const Node = styled.div<{ background: string; selected: boolean }>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: sans-serif;\r\n\t\tcolor: white;\r\n\t\tborder: solid 2px black;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 11px;\r\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\r\n\t`;\r\n\r\n  export const Title = styled.div`\r\n\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\tdisplay: flex;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n  export const TitleName = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 5px 5px;\r\n\t`;\r\n\r\n  export const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\r\n\t`;\r\n\r\n  export const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport interface MyEditableWidgetProps {\r\n  nodeModel: MyEditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface MyEditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\nexport class MyEditableNodeWidget extends React.Component<\r\n  MyEditableWidgetProps,\r\n  MyEditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: MyEditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: { name: '', value: '' },\r\n      variableType: '',\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n  generatePort = (port) => {\r\n    return <MyPortLabel engine={this.props.engine} port={port} key={port.getID()} />\r\n  };\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n\r\n    this.props.nodeModel.content[this.state.editingKey] = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({\r\n      content: this.props.nodeModel.content\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <S.Node\r\n        data-default-node-name={this.props.nodeModel.getOptions().name}\r\n        selected={this.props.nodeModel.isSelected()}\r\n        background={this.props.nodeModel.getOptions().color}>\r\n        <S.Title>\r\n          {this.props.nodeModel.content.hasName && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"name\");\r\n                  }}\r\n                >\r\n                  <EditableSingleField\r\n                    node={this.props.nodeModel}\r\n                    elementKey=\"name\"\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.content.name}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n          <S.TitleName>\r\n            {this.props.nodeModel.getOptions().name}:\r\n            {this.props.nodeModel.content.hasUsages &&\r\n              (<a data-tip data-for={'tip-' + this.props.nodeModel.getOptions().id} >\r\n                <OpenInNewIcon style={{ fontSize: '1rem', marginBottom: '-5px' }} />\r\n              </a>)}\r\n            <ReactTooltip\r\n              className=\"interactableTooltip\"\r\n              id={'tip-' + this.props.nodeModel.getOptions().id}\r\n              type='light'\r\n              place=\"top\"\r\n              delayHide={500}\r\n              effect=\"solid\"\r\n            >\r\n              Usages:\r\n              <Button onClick={() => {\r\n                const next = this.props.nodeModel.portsIn.length\r\n                let nameIn = this.props.nodeModel.portsIn[0].getOptions().label\r\n                let nameOut = this.props.nodeModel.portsIn[0].getOptions().label\r\n\r\n                // console.log('sup', this.props.nodeModel)\r\n                this.props.nodeModel.addInPort(nameIn + '-' + next, true)\r\n                this.props.nodeModel.addOutPort(nameOut + '-' + next, true)\r\n                this.props.engine.repaintCanvas();\r\n              }}> + </Button>\r\n\r\n              <Button onClick={() => {\r\n                if (this.props.nodeModel.portsIn.length > 1) {\r\n                  let found = false\r\n                  let index = this.props.nodeModel.portsIn.length - 1;\r\n                  for (; index >= 0; index--) {\r\n                    const portIn = this.props.nodeModel.portsIn[index]\r\n                    const portOut = this.props.nodeModel.portsOut[index]\r\n                    if (!found &&\r\n                      (Object.keys(portIn.links).length === 0 ||\r\n                        Object.keys(portOut.links).length === 0)) {\r\n                      this.props.nodeModel.removePort(portIn)\r\n                      this.props.nodeModel.removePort(portOut)\r\n                      found = true\r\n                    }\r\n                  }\r\n                }\r\n                this.props.engine.repaintCanvas();\r\n              }}> - </Button>\r\n            </ReactTooltip>\r\n\r\n          </S.TitleName>\r\n          {this.props.nodeModel.content.hasValue && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"value\");\r\n                  }}\r\n                >\r\n                  {(this.props.nodeModel.portsOut[0].options.name === 'bool' ||\r\n                    this.props.nodeModel.portsOut[0].options.name === 'port' ||\r\n                    this.props.nodeModel.getOptions().name === 'Condition'\r\n                  ) ?\r\n                    <SelectableField\r\n                      elementKey=\"value\"\r\n                      options={this.props.nodeModel.selectableOptions}\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                    :\r\n                    <EditableSingleField\r\n                      node={this.props.nodeModel}\r\n                      elementKey=\"value\"\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        </S.Title>\r\n        <S.Ports>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getInPorts(), this.generatePort)}</S.PortsContainer>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getOutPorts(), this.generatePort)}</S.PortsContainer>\r\n        </S.Ports>\r\n      </S.Node>\r\n    );\r\n  }\r\n}\r\n","import { MyEditableNodeWidget } from \"./MyEditableNodeWidget\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core'\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\n\r\nexport class MyEditableNodeFactory extends AbstractReactFactory<MyEditableNodeModel, DiagramEngine> {\r\n\tgenerateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): MyEditableNodeModel {\r\n\t\treturn new MyEditableNodeModel({}, false, false);\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(\"MyEditable\");\r\n\t}\r\n\r\n\tgenerateReactWidget(event: { model: MyEditableNodeModel }): JSX.Element {\r\n\t\treturn <MyEditableNodeWidget nodeModel={event.model} engine={this.engine} />;\r\n\t}\r\n}\r\n","import * as SRD from '@projectstorm/react-diagrams';\r\nimport { MyEditableNodeFactory } from './editableNode/MyEditableNodeFactory';\r\n\r\nimport {\r\n\tRightAngleLinkFactory,\r\n} from '@projectstorm/react-diagrams';\r\n\r\nexport class Application {\r\n\tprotected activeModel: any;//SRD.DiagramModel\r\n\tprotected diagramEngine: SRD.DiagramEngine;\r\n\r\n\tconstructor() {\r\n\t\tthis.diagramEngine = SRD.default();\r\n\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new MyEditableNodeFactory());\r\n\t\tthis.diagramEngine.getLinkFactories().registerFactory(new RightAngleLinkFactory());\r\n\r\n\t\tthis.newModel();\r\n\t}\r\n\r\n\tpublic newModel() {\r\n\t\tthis.activeModel = new SRD.DiagramModel();\r\n\t\tthis.diagramEngine.setModel(this.activeModel);\r\n\t}\r\n\r\n\tpublic getActiveDiagram(): SRD.DiagramModel {\r\n\t\treturn this.activeModel;\r\n\t}\r\n\r\n\tpublic getDiagramEngine(): SRD.DiagramEngine {\r\n\t\treturn this.diagramEngine;\r\n\t}\r\n}\r\n","import BodyWidget from '../components/react-diagrams/BodyWidget';\r\nimport { Application } from '../components/react-diagrams/Application';\r\n\r\nexport default function EditorPage() {\r\n  var app = new Application();\r\n  return <BodyWidget app={app} />\r\n}","export default __webpack_public_path__ + \"static/media/flow.43bedc99.svg\";","export default __webpack_public_path__ + \"static/media/cym_s.cbee123b.svg\";","import flowDiagram from '../assets/flow.svg'\r\nimport cym_s from '../assets/cym_s.svg'\r\nexport default function HomePage() {\r\n    return <div>\r\n        <h2>\r\n            Welcome to MDD4CPS!\r\n        </h2>\r\n        <img src={flowDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n        <img src={cym_s} alt=\"CYM-S\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n    </div>\r\n}","import GoClass from \"../components/GoClass\";\r\nimport paletteNodes from \"../paletteNodes\";\r\nimport { processDynamic, transformAllIntoMethods } from \"../components/goBuilder\"\r\n\r\n\r\nexport default function ModelsPage() {\r\n    let nodesStatic: any[] = [\r\n        { key: -1, name: 'MicroController' },\r\n        { key: -2, name: 'Arduino' },\r\n        { key: -3, name: 'Component' },\r\n    ]\r\n    let linksStatic: any[] = [\r\n        { key: -2, from: -2, to: -1, relationship: \"generalization\" },\r\n        { key: -3, from: -3, to: -1, relationship: \"aggregation\" },\r\n        { key: -4, from: -3, to: -3, relationship: \"aggregation\" },\r\n    ]\r\n    let nodesDynamic: any[] = []\r\n    let linksDynamic: any[] = []\r\n\r\n    paletteNodes.forEach((node, index) => {\r\n\r\n        nodesStatic.push({\r\n            key: index,\r\n            name: node.name,\r\n            methods: transformAllIntoMethods(node),\r\n        })\r\n\r\n\r\n        if (node.extras.type === 'controller') {\r\n            linksStatic.push({ key: index, from: index, to: -2, relationship: \"generalization\" })\r\n        } else {\r\n            const { nodes, links } = processDynamic(node, index)\r\n            nodesDynamic.push(...nodes)\r\n            linksDynamic.push(...links)\r\n        }\r\n\r\n    });\r\n\r\n    return <>\r\n        <GoClass linkdata={linksStatic} nodedata={nodesStatic} arrangement='horizontal' />\r\n        <GoClass linkdata={linksDynamic} nodedata={nodesDynamic} arrangement='vertical' />\r\n    </>\r\n}","export default __webpack_public_path__ + \"static/media/transformations.40b625af.png\";","import transformations from '../assets/transformations.png'\r\nexport default function TransformationsPage() {\r\n    return <div>\r\n        <img src={transformations} alt=\"Transformations\" style={{ maxHeight: '80vh', maxWidth: '90%' }} />\r\n    </div>\r\n}","\r\nexport default function PalettePage() {\r\n    return <>\r\n        <h3>Planned Settings</h3>\r\n        <ul>\r\n            <li>Show/Hide copy button on code panel</li>\r\n            <li>Show/Hide all comments</li>\r\n            <li>Show/Hide all warnings</li>\r\n            <li>Show/Hide all arrows</li>\r\n            <li>Show/Hide diagram overlay</li>\r\n            <li>Show/Hide palette expansion panels</li>\r\n            <li></li>\r\n            <li>Enable/Disables constant capitalization</li>\r\n            <li></li>\r\n            <li>Enable code editing (breaks diagram to code relation)</li>\r\n            <li></li>\r\n            <li>Enforce typings</li>\r\n            <li>Enforce lose ends</li>\r\n            <li>Enforce sequencial port usage</li>\r\n            <li>Remove link restrictions</li>\r\n            <li></li>\r\n            <li>Reset all settings on this page</li>\r\n            <li>Reset custom palette</li>\r\n            <li>Erase all localStorage data</li>\r\n            <li></li>\r\n            <li>Contact info</li>\r\n        </ul>\r\n\r\n    </>\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\nimport ModelsPage from './pages/Models';\r\nimport TransformationsPage from './pages/Transformations';\r\nimport SettingsPage from './pages/Settings';\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Routes >\r\n          <Route path='/mdd4/' element={<HomePage />} />\r\n          <Route path='/mdd4/models' element={<ModelsPage />} />\r\n          <Route path='/mdd4/transformations' element={<TransformationsPage />} />\r\n          <Route path='/mdd4/editor' element={<EditorPage />} />\r\n          <Route path='/mdd4/settings' element={<SettingsPage />} />\r\n        </Routes>\r\n        <NavigationBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}