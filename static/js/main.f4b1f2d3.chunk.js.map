{"version":3,"sources":["components/NavigationBar.tsx","components/NodeDiagram.tsx","components/react-diagrams/TrayItemWidget.tsx","components/react-diagrams/MyCanvasWidget.tsx","components/react-diagrams/myNode/MyRightAngleLinkModel.ts","components/react-diagrams/myNode/MyPortModel.ts","components/react-diagrams/editableNode/MyEditableNodeModel.ts","paletteNodes.js","components/Code.tsx","components/react-diagrams/BodyWidget.tsx","components/react-diagrams/custom-port/MyPortLabelWidget.tsx","components/react-diagrams/custom-node/custom_components/EditableSingleField.tsx","components/react-diagrams/custom-node/custom_components/SelectableField.tsx","components/react-diagrams/editableNode/MyEditableNodeWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeFactory.tsx","components/react-diagrams/Application.ts","pages/Editor.tsx","assets/flow.svg","assets/cym_s.svg","pages/Home.tsx","components/GoClass.tsx","pages/Models.tsx","assets/transformations.png","pages/Transformations.tsx","pages/Palette.tsx","pages/Settings.tsx","App.tsx","index.tsx"],"names":["SimpleBottomNavigation","pathname","window","location","useState","value","setValue","AppBar","position","color","style","top","bottom","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","label","to","icon","NodeDiagram","props","node","canEdit","myInput","all","type","id","name","maxWidth","border","fontSize","margin","backgroundColor","width","borderBottom","extras","library","ins","length","map","port","outs","S","styled","div","p","TrayItemWidget","Tray","this","draggable","onDragStart","dataTransfer","setData","JSON","stringify","setDragImage","Image","className","float","marginRight","place","delayHide","effect","React","background","css","MyCanvasWidget","styles","Expand","Container","children","MyRightAngleLinkModel","options","RightAngleLinkFactory","NAME","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","points","getPoints","i","dx","Math","abs","getX","dy","getY","pointModel","index","setFirstAndLastPathsDirection","first","last","fireEvent","DefaultLinkModel","MyPortModel","in","alignment","PortModelAlignment","LEFT","RIGHT","hasHiddenLabel","data","console","log","PortModel","MyEditableNodeModel","hasUserValue","hasUserName","portsIn","portsOut","content","selectableOptions","methods","forEach","method","addBiPort","addInPort","addOutPort","hasUsername","hasValue","hasUsages","Array","from","keys","x","toString","lookupTable","clone","getOptions","splice","indexOf","push","after","addPort","_","portsInOrder","getPortFromID","portsOutOrder","getID","NodeModel","analogPorts","digitalPorts","generateCode","model","problems","code","add","message","m","addOnTop","getLink","linkID","links","find","l","getPort","nodeID","portID","nodes","n","ports","error","getNode","getCoditionalValue","conditionNode","portName","link","source","sourcePort","parent","getParent","includes","instance","getOutcome","ifThis","target","targetPort","childNode","parentNode","removeTypes","functionName","substring","params","split","result","param","thisParam","String","slice","callWithParameters","contents","toPort","toNode","shift","warn","processLink","fromPort","fromNode","xValue","yValue","outcome2","toNode2","outcome3","toNode3","usedDigital","usedAnalog","processCall","Object","entries","layers","models","logics","components","controllers","libraries","constants","hasLink","toLowerCase","replace","filter","c","toUpperCase","controller","lib","comp","logic","constant","original","level","line","repeat","join","indentCode","Code","generated","parse","cleanProblems","dirty","findIndex","sameNodes","Set","concat","useEffect","Prism","highlightAll","el","document","querySelector","setAttribute","problemId","display","justifyContent","strokeWidth","start","end","height","overflow","ScrollArea","require","default","BodyWidget","setModel","rerender","setRerender","rawModel","app","getDiagramEngine","getModel","serialize","stringModel","groups","paletteNodes","Body","Content","speed","contentClassName","horizontal","smoothScrolling","verticalScrollbarStyle","group","marginBottom","Button","variant","size","onClick","localStorage","setItem","getActiveDiagram","deserializeModel","getItem","setTimeout","Layer","onDrop","getData","registerListener","linksUpdated","nodesUpdated","setPosition","getRelativeMousePoint","addNode","onDragOver","preventDefault","engine","MyPortLabel","isVoid","startsWith","FakePort","Port","labelR","LabelR","labelL","LabelL","PortLabel","Editor","onFocus","onBlurOrEnter","autoFocus","inputStyle","padding","borderStyle","borderWidth","borderColor","onBlur","onKeyDown","keyCode","EditableSingleField","state","beingEdited","editingKey","elementKey","setLocked","fontStyle","isAbstract","y","SelectableField","selected","MyEditableNodeWidget","divElement","generatePort","_editableObjectDoubleClick","editingSomething","setState","_contentOnChange","evt","nodeModel","currentTarget","_onBlurOrEnter","variableType","bind","Node","isSelected","Title","hasName","ref","onDoubleClick","TitleName","next","nameIn","nameOut","repaintCanvas","found","portIn","portOut","removePort","Ports","PortsContainer","getInPorts","getOutPorts","MyEditableNodeFactory","AbstractReactFactory","Application","activeModel","diagramEngine","SRD","getNodeFactories","registerFactory","getLinkFactories","newModel","EditorPage","HomePage","src","flowDiagram","alt","maxHeight","cym_s","initDiagram","$","go","make","myDiagram","layout","angle","path","PathSource","setsPortSpot","setsChildPortSpot","arrangement","ArrangementHorizontal","convertVisibility","v","propertyTemplate","isMultiline","editable","makeTwoWay","s","t","methodTemplate","parr","nodeTemplate","locationSpot","Center","fromSpot","AllSides","toSpot","fill","defaultRowSeparatorStroke","row","columnSpan","font","ofObject","stretch","Fill","defaultAlignment","Left","itemTemplate","column","TopRight","visible","arr","nodeTemplateMap","desiredSize","stroke","linkTemplate","routing","Orthogonal","r","scale","linkKeyProperty","copiesArrays","copiesArrayObjects","GoClass","divClassName","nodeDataArray","nodedata","linkDataArray","linkdata","ModelsPage","startDelta","endDelta","controllerDelta","nodesStatic","key","linksStatic","relationship","nodesDynamic","linksDynamic","visibility","parsedNode","text","category","TransformationsPage","transformations","PalettePage","gridTemplateColumns","gridGap","App","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f4b1f2d3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AppBar } from '@material-ui/core';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n// import SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TransformIcon from '@mui/icons-material/Transform';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n    const [value, setValue] = useState(pathname);\r\n    const handleChange = (event: any, newValue: any) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{ top: \"auto\", bottom: 0 }}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={handleChange}\r\n                showLabels\r\n            >\r\n                location.pathname\r\n                <BottomNavigationAction component={Link} label=\"Home\" to=\"/mdd4/\" icon={<HomeIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Models\" to=\"/mdd4/models\" icon={<MapIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Transformations\" to=\"/mdd4/transformations\" icon={<TransformIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Palette\" to=\"/mdd4/palette\" icon={<PaletteIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Editor\" to=\"/mdd4/editor\" icon={<EditIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Settings\" to=\"/mdd4/settings\" icon={<SettingsIcon />} />\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    );\r\n}","export default function NodeDiagram(props: { node: any, canEdit?: boolean }) {\r\n    const { node, canEdit } = props\r\n    const myInput = (all: string) => {\r\n        if (canEdit)\r\n            return <input type=\"text\" id={all} name={all} value={all} ></input>\r\n        return all\r\n    }\r\n\r\n    return <>\r\n        <div style={{ maxWidth: '400px', border: 'solid', fontSize: '.9em', color: 'black', margin: '60px 0px 25px 0', backgroundColor: 'lightgrey' }}>\r\n            <div style={{ width: '100%', borderBottom: 'solid 3px', fontSize: '1.2em' }}>\r\n                {myInput(node.name)}\r\n            </div>\r\n\r\n            {node.extras.library &&\r\n                <div style={{ width: '100%', borderBottom: 'solid 2px' }}>\r\n                    Library={node.extras.library}\r\n                </div>\r\n            }\r\n            {node.ins && node.ins.length > 0 &&\r\n                node.ins.map((port: any) => {\r\n                    return <div key={port}>\r\n                        <p>{myInput(port)}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            {node.outs && node.outs.length > 0 &&\r\n                node.outs.map((port: any) => {\r\n                    return <div key={port}>\r\n                        <p>{myInput(port)}</p>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    </>\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport NodeDiagram from '../../components/NodeDiagram'\r\nexport interface TrayItemWidgetProps {\r\n\tnode: any;\r\n}\r\n\r\nnamespace S {\r\n\texport const Tray = styled.div<{ color: string }>`\r\n\t\tcolor: white;\r\n\t\tfont-family: Helvetica, Arial;\r\n\t\tfont-size:0.6em;\r\n\t\tpadding: 2px 0px;\r\n\t\tmargin:\t 5px 10px ;\r\n\t\tborder: solid 1px ${(p) => p.color};\r\n\t\tborder-radius: 100px;\r\n\t\tmargin-bottom: 2px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: rgb(20, 20, 20);\r\n\t`;\r\n}\r\n\r\nexport class TrayItemWidget extends React.Component<TrayItemWidgetProps> {\r\n\trender() {\r\n\t\t// const label = this.props.node.name.includes(\" \") && this.props.node.name.length > 15 ? (<div>\r\n\t\t// \t{this.props.node.name.substr(0, this.props.node.name.indexOf(' '))}\r\n\t\t// \t<br />\r\n\t\t// \t{this.props.node.name.substr(this.props.node.name.indexOf(' ') + 1)}</div>) : this.props.node.name\r\n\t\treturn (\r\n\t\t\t<S.Tray\r\n\t\t\t\tcolor={this.props.node.color || 'red'}\r\n\t\t\t\tdraggable={true}\r\n\t\t\t\tonDragStart={(event) => {\r\n\t\t\t\t\tevent.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.node));\r\n\t\t\t\t\tevent.dataTransfer.setDragImage(new Image(), 10, 10);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"tray-item\">\r\n\r\n\t\t\t\t{this.props.node.name}\r\n\r\n\t\t\t\t<a data-tip data-for={'tip-' + this.props.node.name} style={{ float: 'right', marginRight: '6px' }} >\r\n\t\t\t\t\t<OpenInNewIcon style={{ fontSize: '1rem' }} />\r\n\t\t\t\t</a>\r\n\t\t\t\t<ReactTooltip\r\n\t\t\t\t\tclassName=\"interactableTooltip\"\r\n\t\t\t\t\tid={'tip-' + this.props.node.name}\r\n\t\t\t\t\ttype='light' place=\"right\"\r\n\t\t\t\t\tdelayHide={500}\r\n\t\t\t\t\teffect=\"solid\"\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<NodeDiagram node={this.props.node} />\r\n\t\t\t\t</ReactTooltip>\r\n\t\t\t</S.Tray>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css, Global } from '@emotion/react';\r\n\r\nexport interface MyCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nnamespace S {\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\t\theight: 100%;\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\tdisplay: flex;\r\n\r\n\t\t> * {\r\n\t\t\theight: 100%;\r\n\t\t\tmin-height: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\texport const Expand = css`\r\n\t\thtml,\r\n\t\tbody,\r\n\t\t#root {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport class MyCanvasWidget extends React.Component<MyCanvasWidgetProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Global styles={S.Expand} />\r\n\t\t\t\t<S.Container\r\n\t\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</S.Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\r\nimport { PointModel } from '@projectstorm/react-diagrams-core';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { RightAngleLinkFactory } from '@projectstorm/react-diagrams';\r\n\r\nexport class MyRightAngleLinkModel extends DefaultLinkModel {\r\n\tlastHoverIndexOfPath: number;\r\n\tprivate _lastPathXdirection: boolean;\r\n\tprivate _firstPathXdirection: boolean;\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: RightAngleLinkFactory.NAME,\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.lastHoverIndexOfPath = 0;\r\n\t\tthis._lastPathXdirection = false;\r\n\t\tthis._firstPathXdirection = false;\r\n\t}\r\n\r\n\tsetFirstAndLastPathsDirection() {\r\n\t\tlet points = this.getPoints();\r\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\r\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\r\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\r\n\t\t\tif (i - 1 === 0) {\r\n\t\t\t\tthis._firstPathXdirection = dx > dy;\r\n\t\t\t} else {\r\n\t\t\t\tthis._lastPathXdirection = dx > dy;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// @ts-ignore\r\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\r\n\t\t// @ts-ignore\r\n\t\tsuper.addPoint(pointModel, index);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t\treturn pointModel;\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t}\r\n\r\n\tsetManuallyFirstAndLastPathsDirection(first: boolean, last: boolean) {\r\n\t\tthis._firstPathXdirection = first;\r\n\t\tthis._lastPathXdirection = last;\r\n\t}\r\n\r\n\tgetLastPathXdirection(): boolean {\r\n\t\treturn this._lastPathXdirection;\r\n\t}\r\n\tgetFirstPathXdirection(): boolean {\r\n\t\treturn this._firstPathXdirection;\r\n\t}\r\n\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}","import {\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { MyRightAngleLinkModel } from './MyRightAngleLinkModel';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\n\r\nexport interface MyPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n\thasHiddenLabel?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: MyPortModelOptions;\r\n}\r\n\r\nexport class MyPortModel extends PortModel<DefaultPortModelGenerics> {\r\n\textras: any;\r\n\tconstructor(options: MyPortModelOptions) {\r\n\t\tsuper({\r\n\t\t\tin: options.in,\r\n\t\t\tname: options.name,\r\n\t\t\tlabel: options.label || options.name,\r\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\r\n\t\t\ttype: 'default',\r\n\t\t\textras: { hasHiddenLabel: options.hasHiddenLabel }\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.extras = event.data.extras;\r\n\t\tthis.options.in = event.data.in;\r\n\t\tthis.options.label = event.data.label;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tin: this.options.in,\r\n\t\t\tlabel: this.options.label,\r\n\t\t\textras: this.options.extras,\r\n\t\t};\r\n\t}\r\n\r\n\tcanLinkToPort(port: PortModel): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tcreateLinkModel(): MyRightAngleLinkModel {\r\n\t\tconsole.log('created', new MyRightAngleLinkModel())\r\n\t\treturn new MyRightAngleLinkModel()\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyEditableNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    portsIn: MyPortModel[] = [];\r\n    portsOut: MyPortModel[] = [];\r\n    content: Object;\r\n    extras: any;\r\n    selectableOptions: string[];\r\n    constructor(data: any, hasUserValue: boolean, hasUserName: boolean) {\r\n        super({\r\n            type: 'MyEditable',\r\n            name: data.name,\r\n            color: data.color,\r\n        });\r\n        this.extras = data.extras;\r\n\r\n        data.methods?.forEach((method: string) => {\r\n            this.addBiPort(method)\r\n        });\r\n        data.ins?.forEach((method: string) => {\r\n            this.addInPort(method)\r\n        });\r\n        data.outs?.forEach((method: string) => {\r\n            this.addOutPort(method)\r\n        });\r\n\r\n        //Custom settup for diffent types\r\n        const content = { name: 'userName', hasUsername: hasUserName, value: '', hasValue: hasUserValue, hasUsages: false }\r\n        this.selectableOptions = ['something', 'went wrong'];\r\n\r\n\r\n        switch (data.name) {\r\n            case 'bool':\r\n                content.value = 'true'\r\n                this.selectableOptions = ['true', 'false'];\r\n                break;\r\n            case 'port':\r\n                content.value = '0'\r\n                this.selectableOptions = Array.from(Array(10).keys()).map(x => x.toString())\r\n                break;\r\n            case 'int':\r\n                content.value = '0'\r\n                break;\r\n            case 'Parameter(s)':\r\n                content.value = '0'\r\n                content.hasUsages = true\r\n                break;\r\n            case 'Function':\r\n                content.value = 'foo'\r\n                content.hasUsages = true\r\n                break;\r\n            case 'Condition':\r\n                content.value = '=='\r\n                this.selectableOptions = ['==', '!=', '<', '>', '<=', '>=', '<=>']\r\n                break;\r\n            default:\r\n                content.value = 'value'\r\n                break;\r\n        }\r\n        this.content = content\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true, hasHiddenLabel = false): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: hasHiddenLabel ? label + ' ' : label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT,\r\n            hasHiddenLabel: hasHiddenLabel\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT,\r\n            hasHiddenLabel: false\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addBiPort(label: string, after = true): MyPortModel {\r\n        this.addOutPort(label, after)\r\n        return this.addInPort(label, after, true)\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n        this.content = event.data.content\r\n        this.selectableOptions = event.data.selectableOptions\r\n    }\r\n\r\n    serialize(): any {\r\n        const re = {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras,\r\n            content: this.content,\r\n            selectableOptions: this.selectableOptions\r\n        }\r\n\r\n        // console.log('re', re)\r\n\r\n        return re;\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n        name: 'Arduino Uno',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 14,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    }, {\r\n        name: 'Arduino Nano',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 22,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Mega',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 16,\r\n            digitalPorts: 54,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Leonardo',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 12,\r\n            digitalPorts: 20,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Flora',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 4,\r\n            digitalPorts: 8,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void digitalWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'int digitalRead(int pin)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Analog I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void analoglWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'void analogReference(int type)',\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'Time',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'void delayMicroseconds(int us)',\r\n            'unsigned long micros()',\r\n            'unsigned long millis()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Math',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'int abs(int x)',\r\n            'int constrain(int x, int a, int b)',\r\n            'int map(int value, int fromLow, int fromHigh, int toLow, int toHigh)',\r\n            'any? max(any x, any y)',\r\n            'any? min(any x, any y)',\r\n            'double pow(float base, float exponent)',\r\n            'double sq(any x)',\r\n            'double sqrt(any x)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Trigonometry',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'double cos(float rad)',\r\n            'double sin(float rad)',\r\n            'double tan(float rad)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Random Numbers',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void randomSeed(long seed)',\r\n            'long random(? max)',\r\n            'long random(? min, ? max)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'true',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'false',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'HIGH',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'LOW',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        outs: [\r\n            'port',\r\n        ]\r\n    }, {\r\n        name: 'Analog Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        outs: [\r\n            'port',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Function',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'call',\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n        ]\r\n    }, {\r\n        name: 'Condition',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n            'x',\r\n            'y'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Loop',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'startValue',\r\n            'stopValue'\r\n        ]\r\n    },\r\n\r\n    {\r\n        name: 'TwoWire Interface',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Wire.h'\r\n        },\r\n        methods: [\r\n            'void begin()',\r\n            'void beginTransmission()',\r\n            'void setClock()',\r\n            'void onReceive()',\r\n            'void onRequest()',\r\n            'byte requestFrom()',\r\n            'byte endTransmission()',\r\n            'byte write()',\r\n            'byte available()',\r\n            'byte read()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'PWM Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Adafruit_PWMServoDriver.h'\r\n        },\r\n        methods: [\r\n            'void begin(uint8_t prescale=0)',\r\n            'void sleep()',\r\n            'void wakeup()',\r\n            'void setExtClk(uint8_t prescale)',\r\n            'void setPWMFreq(float freq)',\r\n            'void setOutputMode(bool totempole)',\r\n            'void setPWM(uint8_t num, uint16_t on, uint16_t off)',\r\n            'void setPin(uint8_t num, uint16_t val, bool invert=false)',\r\n            'void writeMicroseconds(uint8_t num, uint16_t Microseconds)',\r\n            'void setOscillatorFrequency(uint32_t freq)',\r\n            'uint8_t getPWM(uint8_t num)',\r\n            'uint8_t readPrescale()',\r\n            'uint32_t getOscillatorFrequency()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Servo.h'\r\n        },\r\n        methods: [\r\n            'void detach()',\r\n            'void write(int)',\r\n            'void writeMicroseconds(int)',\r\n            'uint8_t attach(int)',\r\n            'uint8_t attach(int, int, int)',\r\n            'int read()',\r\n            'int readMicroseconds()',\r\n            'bool attached()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Stepper',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Stepper.h'\r\n        },\r\n        methods: [\r\n            'Stepper(int, int, int)',\r\n            'Stepper(int, int, int, int, int)',\r\n            'Stepper(int, int, int, int, int, int)',\r\n            'void setSpeed(long whatSpeed)',\r\n            'void step(int number_of_steps)',\r\n            'int version(void)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Parameter(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'parameter'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(int)',\r\n        ],\r\n        outs: [\r\n            'int getValue()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(bool)',\r\n        ],\r\n        outs: [\r\n            'bool',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Constant Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'Constant Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n]","import Prism from \"prismjs\";\r\nimport { useEffect } from \"react\";\r\nimport \"./prism.css\";\r\n// import PrismEdit from \"./PrismEdit\";\r\nimport Xarrow from \"react-xarrows\";\r\n\r\n\r\nfunction generateCode(model: any): { code: string, problems: any[] } {\r\n    let problems: any[] = []\r\n    let code = ''\r\n    const add = (...message: string[]) => {\r\n        message.forEach((m) => {\r\n            code += m;\r\n        });\r\n        code += \"\\n\";\r\n        return code;\r\n    };\r\n    const addOnTop = (...message: string[]) => {\r\n        let top = ''\r\n        message.forEach((m) => {\r\n            top += m;\r\n        });\r\n        code = top + \"\\n\" + code\r\n    };\r\n    const getLink = (linkID: string) => {\r\n        return links.find(l => l.id === linkID)\r\n    }\r\n    const getPort = (nodeID: string, portID: string) => {\r\n        try {\r\n            return nodes.find((n: any) => n.id === nodeID).ports\r\n                .find((p: any) => p.id === portID);\r\n        } catch (error) {\r\n            return \"// Loose end\"\r\n        }\r\n    }\r\n    const getNode = (nodeID: string) => {\r\n        return nodes.find((n: any) => n.id === nodeID)\r\n    }\r\n    const getCoditionalValue = (conditionNode: any, portName: any): string => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === portName).links[0]\r\n            let link = getLink(linkID)\r\n            let port = getPort(link.source, link.sourcePort)\r\n            let parent = getParent(port)\r\n\r\n            if (['variable', 'port'].includes(parent.extras.type)) {\r\n                return parent.content.value\r\n            }\r\n            else if (['component'].includes(parent.extras.type)) {\r\n                return parent.instance + '.' + port.name\r\n            } else {\r\n                return add('Unknown extras.type')\r\n            }\r\n        } catch (error) {\r\n            return '/* Lacking Value */'\r\n        }\r\n    }\r\n    const getOutcome = (conditionNode: any, ifThis = 'True') => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === ifThis).links[0]\r\n            let link = getLink(linkID)\r\n            return getPort(link.target, link.targetPort)\r\n        } catch (error) {\r\n            return { label: '// Lacking Outcome' }\r\n        }\r\n    }\r\n    const getParent = (childNode: any) => {\r\n        return nodes.find((n: any) => n.id === childNode.parentNode)\r\n    }\r\n    const removeTypes = (name: string): string => {\r\n        const functionName = name.substring(name.indexOf(' ') + 1, name.indexOf('(') !== -1 ? name.indexOf('(') : name.length)\r\n        const params = name.substring(name.indexOf('('), name.indexOf(')') - 1).split(',')\r\n        let result = functionName\r\n        params.forEach(param => {\r\n            if (!param.includes('=')) {\r\n                let thisParam = String(param.split(' ').slice(-1))\r\n                result += thisParam\r\n            }\r\n        });\r\n        // console.log('removing types from', name, 'params ', params, ' returning', result)\r\n        return result;\r\n    }\r\n    const callWithParameters = (node: any, ...contents: any) => {\r\n        try {\r\n            if (node.extras.type === 'constant') {\r\n                contents.push(node.content.name)\r\n            } else {\r\n                contents.push(node.content.value)\r\n            }\r\n        } catch (error) {\r\n            console.log('error, no parameter?')\r\n        }\r\n        node.ports.forEach((port: any) => {\r\n            port.links.forEach((l: any) => {\r\n                const link = getLink(l);\r\n                const toPort = getPort(link.target, link.targetPort)\r\n                const toNode = getNode(toPort.parentNode)\r\n                if (!toNode) {\r\n                    warn('Loose link', [node])\r\n                } else if (toNode?.id === node?.id) {//skip as it is the previous link\r\n                    if (toNode.instance) {\r\n                        add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                    }\r\n                } else if (toNode?.extras?.type === 'built-in') {\r\n                    add(removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                } else if (!toNode?.instance) {//points to another variable/port\r\n                    callWithParameters(toNode, ...contents)\r\n                } else {//points to a class instance, we hope it is a method call\r\n                    //todo: check for parameter type and numbers\r\n                    add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                }\r\n            })\r\n        })\r\n    }\r\n    const processCall = (fromNode: any, fromPort: any, toNode: any, toPort: any) => {\r\n        if (['variable', 'constant', 'parameter'].includes(toNode?.extras?.type)) {\r\n            callWithParameters(toNode)\r\n        } else if (['port'].includes(toNode?.extras?.type)) {\r\n            if (toNode.name.includes('Digital')) {\r\n                usedDigital.push(toNode.content.value)\r\n            } else {\r\n                usedAnalog.push(toNode.content.value)\r\n            }\r\n            callWithParameters(toNode)\r\n        } else {\r\n            if (toNode?.instance) {\r\n                add(toNode.instance + '.' + removeTypes(toPort.name) + '();')\r\n            } else if (fromNode.instance) {\r\n                add(fromNode.instance + '.' + removeTypes(fromPort.name) + '();')\r\n            } else {\r\n                warn('Loose connection', [fromNode])\r\n            }\r\n        }\r\n    }\r\n    const processLink = (l: any) => {\r\n        const link = getLink(l);\r\n        const toPort = getPort(link.target, link.targetPort)\r\n        if (!toPort) return\r\n        const toNode = getNode(toPort.parentNode)\r\n        const fromPort = getPort(link.source, link.sourcePort)\r\n        const fromNode = getNode(fromPort.parentNode)\r\n\r\n        if (toNode?.extras?.type === 'built-in') {\r\n            add(removeTypes(toPort.name) + '()')\r\n        } else if (toNode?.name === \"Function\") {\r\n            add(toNode.content.value, '(', ');')\r\n        } else if (toNode?.name === \"Condition\") {\r\n            const xValue = getCoditionalValue(toNode, 'x')\r\n            const yValue = getCoditionalValue(toNode, 'y')\r\n\r\n            const outcome2 = getOutcome(toNode)\r\n            const toNode2 = getParent(outcome2)\r\n\r\n            const outcome3 = getOutcome(toNode, 'False')\r\n            const toNode3 = getParent(outcome3)\r\n\r\n            add('if (', xValue, ' ' + toNode.content.value + ' ', yValue, ') {')\r\n            if (toNode2) {\r\n                callWithParameters(toNode2)\r\n            } else {\r\n                add('/* Lacking code to be executed if conditional is true */')\r\n            }\r\n            if (toNode3) {\r\n                add('} else {')\r\n                callWithParameters(toNode3)\r\n            }\r\n            add(\"}\\n\");\r\n\r\n        } else {\r\n            processCall(fromNode, fromPort, toNode, toPort)\r\n        }\r\n    }\r\n\r\n    const warn = (message: string, nodes: any[] = [], type: any = 'not used') => {\r\n        problems.push({ message, nodes: nodes });\r\n        return problems\r\n    };\r\n\r\n    if (Object.keys(model).length === 0) {\r\n        return { code: '// Empty Diagram!', problems: [] };\r\n    }\r\n    const links: any[] = []\r\n    Object.entries(model.layers[0].models).forEach((x: any) => {\r\n        links.push(x[1])\r\n    })\r\n    const nodes: any[] = []\r\n    const logics: any[] = []\r\n    const components: any[] = []\r\n    const controllers: any[] = []\r\n    const libraries: any[] = []\r\n    const constants: any[] = []\r\n\r\n    const usedDigital: number[] = []\r\n    const usedAnalog: number[] = []\r\n\r\n    Object.entries(model.layers[1].models).forEach((x: any) => {\r\n        const n = x[1]\r\n        nodes.push(n)\r\n\r\n        let hasLink = false\r\n        n.ports.forEach((port: any) => {\r\n            if (port.links.length > 0) {\r\n                hasLink = true\r\n            }\r\n        });\r\n        if (!hasLink) {\r\n            warn('This component has no links', [n])\r\n        }\r\n        switch (n.extras.type) {\r\n            case 'component':\r\n                n.instance = n.name.toLowerCase().replace(' ', '') + components.filter(c => c.extras.library === n.extras.library).length\r\n                components.push(n)\r\n                if (!libraries.includes(n.extras.library))\r\n                    libraries.push(n.extras.library)\r\n                break\r\n            case 'controller':\r\n                controllers.push(n)\r\n                break\r\n            case 'logic':\r\n                logics.push(n)\r\n                break\r\n            case 'variable':\r\n            case 'parameter':\r\n                if (hasLink) {\r\n                    n.ports.forEach((port: any) => {\r\n                        if (port.links.length > 1) {\r\n                            warn(`This ${n.name.toLowerCase()} has more than one link in the same ${port.label} port.`, [n])\r\n                        } else {\r\n                            if (port.links.length === 0) {\r\n                                // console.log('nodel', model.layers[1].models)\r\n                                warn(`This ${n.name.toLowerCase()} is not being used.`, [n])\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                break\r\n            case 'constant':\r\n                n.content.name = n.content.name.toUpperCase()\r\n                constants.push(n)\r\n                break\r\n        }\r\n    })\r\n\r\n    if (controllers.length === 0) {\r\n        return { code: '', problems: warn('No micro-controller') }\r\n    }\r\n    if (controllers.length > 1) {\r\n        return {\r\n            code: '// Only one Arduino allowed!',\r\n            problems: warn('More than one micro-controller', controllers)\r\n        }\r\n    }\r\n\r\n    let controller = controllers[0]\r\n\r\n    if (libraries.length > 0) {\r\n        add('// Libraries')\r\n        libraries.forEach(lib => {\r\n            add('#include <' + lib + '>')\r\n        });\r\n        add('')\r\n        add('// Objects')\r\n        libraries.forEach(lib => {\r\n            components.forEach(comp => {\r\n                if (comp.extras.library === lib)\r\n                    add(comp.name + ' ' + comp.instance)\r\n            });\r\n        });\r\n    }\r\n\r\n    if (logics.filter(l => l.name === 'Function').length > 0) {\r\n        add('// Functions')\r\n        logics.forEach(logic => {\r\n            if (logic.name === \"Function\") {\r\n                add('void ', logic.content.value, '() {')\r\n                const callPort = logic.ports.find((x: any) => x.alignment === 'right')\r\n                callPort.links.forEach((l: any) => {\r\n                    processLink(l)\r\n                });\r\n                add('}')\r\n            }\r\n        });\r\n    }\r\n\r\n    if (constants.length > 0) {\r\n        add('// Constants')\r\n        constants.forEach(constant => {\r\n            add(`#define ${constant.content.name} ${constant.content.value} //${constant.name}`)\r\n        });\r\n        add('')\r\n    }\r\n\r\n    add(`// Micro-controller's Lifecycle`)\r\n    // let content.value: string | null = null\r\n    controller.ports.forEach((port: any) => {\r\n        add('void ', port.label, \"{\");\r\n        port.links.forEach((l: any) => {\r\n            processLink(l)\r\n        })\r\n        add(\"}\\n\");\r\n    })\r\n\r\n    addOnTop(\"\")\r\n    addOnTop(`Digital ports ${usedDigital.length}/${controller.extras.digitalPorts} ${usedDigital.length > 0 ? `(${usedDigital})` : \"\"}`, \"*/\")\r\n    addOnTop(`Analog ports ${usedAnalog.length}/${controller.extras.analogPorts} ${usedAnalog.length > 0 ? `(${usedAnalog})` : \"\"} `)\r\n    addOnTop(\"/* Code generated for \", controller.name);\r\n\r\n    function indentCode(original: string) {\r\n        let code: any[] = [];\r\n        let level = 0;\r\n        let tab = \"    \";\r\n        original.split(\"\\n\").forEach((line) => {\r\n            if (line.includes(\"}\")) {\r\n                level--;\r\n            }\r\n            code.push(tab.repeat(level) + line);\r\n            if (line.includes(\"{\")) {\r\n                level++;\r\n            }\r\n        });\r\n        return code.join(\"\\n\");\r\n    }\r\n    return { code: indentCode(code), problems };\r\n}\r\nexport default function Code(props: { model: string }) {\r\n    // console.log('CodeComponent render')\r\n    const model = props.model\r\n    let code = ''\r\n    let problems: any[] = []\r\n\r\n    if (model === \"{}\" || model === \"\") {\r\n    } else {\r\n        const generated = generateCode(JSON.parse(model))\r\n        code = generated.code\r\n        let cleanProblems: any[] = []\r\n        generated.problems.forEach(dirty => {\r\n            if (cleanProblems.findIndex(p => p.message === dirty.message) === -1) {\r\n                const sameNodes = Array.from(new Set([].concat(...generated.problems.filter(p => p.message === dirty.message).map(p => p.nodes))))\r\n                cleanProblems.push({ message: dirty.message, nodes: sameNodes })\r\n            }\r\n        });\r\n        problems = cleanProblems\r\n    }\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, [props])\r\n    return (\r\n        <div className=\"Code\">\r\n            <div style={{ border: problems.length !== 0 ? 'solid yellow 2px' : 'dotted black 2px' }}>\r\n                <div style={{ border: problems.length !== 0 ? 'solid yellow 1px' : 'dotted white 1px', fontSize: '1em' }}>\r\n                    {problems.length} Problems!\r\n                </div>\r\n                {\r\n                    problems.map((p: any, index: any) => {\r\n                        if (p.nodes.length > 0) {\r\n                            p.nodes.forEach((node: any) => {\r\n                                const el = document.querySelector(`[data-nodeid='${node.id}']`)\r\n                                if (el) el.setAttribute('id', node.id)\r\n                            });\r\n                        }\r\n                        const problemId = p.nodes.length > 0 ? 'problem-' + p.nodes[0].id + index : 'problem-nodeless' + index\r\n                        return <div id={problemId} key={problemId} style={{ fontSize: '0.6em', border: 'solid white 1px' }}>\r\n                            Model violation: {p.message}\r\n                            {p.nodes.map((node: any, index: any) => {\r\n                                return <div key={index} style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"100%\" }}>\r\n                                    <Xarrow\r\n                                        strokeWidth={2}\r\n                                        start={problemId}\r\n                                        end={node.id}\r\n                                        color='yellow'\r\n                                    />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            <pre style={{\r\n                height: '100%', overflow: 'auto'\r\n            }}>\r\n                <code className=\"language-clike\">{code}</code>\r\n            </pre >\r\n        </div >\r\n    );\r\n}","import * as React from 'react';\r\nimport { Application } from './Application';\r\nimport { TrayItemWidget } from './TrayItemWidget';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { MyCanvasWidget } from './MyCanvasWidget';\r\nimport styled from '@emotion/styled';\r\nimport { MyEditableNodeModel } from './editableNode/MyEditableNodeModel';\r\nimport paletteNodes from '../../paletteNodes';\r\nimport { useState, useEffect } from 'react';\r\nimport Code from '../Code';\r\nimport { Button } from '@material-ui/core';\r\nvar ScrollArea = require('react-scrollbar').default;\r\nexport interface BodyWidgetProps {\r\n\tapp: Application;\r\n}\r\n\r\nnamespace S {\r\n\texport const Body = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100%;\r\n\t\twidth: 100%;\r\n\t\tgrid-template-columns: 55% 1fr;\r\n\t`;\r\n\r\n\texport const Content = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Layer = styled.div`\r\n\t\tposition: relative;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Code = styled.div`\r\n\t\tposition: absolute;\r\n\t\tbackground-color: #2d2d2d ;\r\n\t\tleft:50%;\r\n\t\ttop:0;\r\n\t\tright:0;\r\n\t\tbottom:0;\r\n\t\tmargin:0;\r\n\t\tpadding:0;\r\n\t\t`;\r\n\r\n}\r\n\r\nfunction BodyWidget(props: BodyWidgetProps) {\r\n\tconst [model, setModel] = useState(\"{}\")\r\n\tconst [rerender, setRerender] = React.useState(false);\r\n\r\n\tconst rawModel = props.app.getDiagramEngine().getModel().serialize()\r\n\tconst stringModel = JSON.stringify(rawModel, null, 2)\r\n\r\n\tconst groups = [...new Set(paletteNodes.map(x => x.extras.type))]\r\n\tuseEffect(() => {\r\n\t\tif (stringModel !== model) {\r\n\t\t\tsetModel(stringModel);\r\n\t\t}\r\n\t}, [stringModel, model]);\r\n\r\n\treturn (\r\n\t\t<S.Body>\r\n\t\t\t<S.Content >\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ScrollArea\r\n\t\t\t\t\t\tspeed={1}\r\n\t\t\t\t\t\tclassName=\"area\"\r\n\t\t\t\t\t\tcontentClassName=\"content\"\r\n\t\t\t\t\t\thorizontal={false}\r\n\t\t\t\t\t\tstyle={{ height: '88vh' }}\r\n\t\t\t\t\t\tsmoothScrolling={true}\r\n\t\t\t\t\t\tverticalScrollbarStyle={{ backgroundColor: 'white' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgroups.map((group) => {\r\n\t\t\t\t\t\t\t\treturn <div key={group} style={{ border: 'dashed white 1px', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t<h6 style={{ margin: '0px 0px 0px 0px' }}>{group[0].toUpperCase() + group.slice(1) + 's'}:</h6>\r\n\t\t\t\t\t\t\t\t\t{paletteNodes.filter(n => n.extras.type === group).map((node) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <TrayItemWidget key={node.name} node={node} />\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ScrollArea>\r\n\t\t\t\t\t<div style={{ marginBottom: '0px' }}>\r\n\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('model', JSON.stringify(rawModel));\r\n\t\t\t\t\t\t\t\tconsole.log('--- Saved ---')\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tprops.app.getActiveDiagram().deserializeModel(\r\n\t\t\t\t\t\t\t\t\tJSON.parse(localStorage.getItem('model') || '{}'),\r\n\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine());\r\n\t\t\t\t\t\t\t\tconsole.log('--- Loaded ---')\r\n\t\t\t\t\t\t\t\tsetModel(stringModel);\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tLoad\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tprops.app.getActiveDiagram().deserializeModel(\r\n\t\t\t\t\t\t\t\t\tJSON.parse('{\"id\":\"b61bb7d6-efee-4caf-8b8c-be7dfa140acd\",\"offsetX\":0,\"offsetY\":0,\"zoom\":100,\"gridSize\":0,\"layers\":[{\"id\":\"0df10e02-9519-4a32-9c90-cb48681c24cd\",\"type\":\"diagram-links\",\"isSvg\":true,\"transformed\":true,\"models\":{}},{\"id\":\"c18e36ab-c0ce-4def-8c51-0c09d00cfe0b\",\"type\":\"diagram-nodes\",\"isSvg\":false,\"transformed\":true,\"models\":{}}]}'),\r\n\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine());\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tClear\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<S.Layer\r\n\t\t\t\t\tonDrop={(event) => {\r\n\t\t\t\t\t\tlet data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\tlet node: any = {};\r\n\r\n\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().registerListener({\r\n\t\t\t\t\t\t\t\tlinksUpdated: (l: any) => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t// console.log(\"link\\n\");\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tnodesUpdated: (n: any) => {\r\n\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t// console.log(\"node\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tswitch (data.extras.type) {\r\n\t\t\t\t\t\t\t\tcase \"variable\":\r\n\t\t\t\t\t\t\t\tcase \"constant\":\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, true, true);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"parameter\":\r\n\t\t\t\t\t\t\t\tcase \"port\":\r\n\t\t\t\t\t\t\t\tcase \"logic\":\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, true, false);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"controller\":\r\n\t\t\t\t\t\t\t\tcase \"built-in\":\r\n\t\t\t\t\t\t\t\tcase \"built-in-constant\":\r\n\t\t\t\t\t\t\t\tcase \"component\":\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data, false, false);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnode.setPosition(props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonDragOver={(event: any) => {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={(event: any) => {\r\n\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t\t<MyCanvasWidget >\r\n\t\t\t\t\t\t\t<CanvasWidget engine={props.app.getDiagramEngine()} />\r\n\t\t\t\t\t\t</MyCanvasWidget>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</S.Layer>\r\n\t\t\t</S.Content>\r\n\t\t\t<S.Code>\r\n\t\t\t\t<Code model={model} />\r\n\t\t\t</S.Code>\r\n\t\t</S.Body >\r\n\t)\r\n\r\n}\r\nexport default React.memo(BodyWidget)","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport styled from '@emotion/styled';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface MyPortLabelProps {\r\n    port: MyPortModel;\r\n    engine: DiagramEngine;\r\n}\r\n\r\nnamespace S {\r\n    export const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t`;\r\n\r\n    export const LabelR = styled.div`\r\n\t\tpadding: 0 4px 0 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const LabelL = styled.div`\r\n\t\tpadding: 0 0 0px 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const Port = styled.div`\r\n        border:solid 1px white;\r\n\t\t\r\n        width: 14px;\r\n\t\theight: 14px;\r\n\t\tbackground: rgba(255, 255, 255, 0.3);\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n    export const FakePort = styled.div`\r\n        width: 16px;\r\n\t\theight: 16px;\r\n\t`;\r\n}\r\n\r\nexport class MyPortLabel extends React.Component<MyPortLabelProps> {\r\n    render() {\r\n        const hasHiddenLabel = this.props?.port?.getOptions().extras.hasHiddenLabel\r\n        let isVoid = false\r\n        if (this.props?.port?.getOptions().label?.startsWith('void')) {\r\n            if (this.props?.port?.getOptions().alignment === \"right\") {\r\n                isVoid = true\r\n            }\r\n        }\r\n        const port = isVoid ? (<S.FakePort />) : (\r\n            <PortWidget engine={this.props.engine\r\n            } port={this.props.port} >\r\n                <S.Port />\r\n            </PortWidget>\r\n        );\r\n\r\n        const labelR = <S.LabelR>{this.props.port.getOptions().label}</S.LabelR>;\r\n        const labelL = <S.LabelL>{this.props.port.getOptions().label}</S.LabelL>;\r\n\r\n        return (\r\n            <S.PortLabel>\r\n                {this.props.port.getOptions().in ? port : !hasHiddenLabel && labelR}\r\n                {this.props.port.getOptions().in ? !hasHiddenLabel && labelL : port}\r\n            </S.PortLabel>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport AutosizeInput from 'react-input-autosize';\r\n\r\nexport interface IEditableSingleFieldProps {\r\n  node: any;\r\n  beingEdited: boolean;\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\nconst Editor = ({\r\n  content,\r\n  onFocus,\r\n  onChange,\r\n  onBlurOrEnter,\r\n}: {\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n}) => {\r\n  return (\r\n    <AutosizeInput\r\n      autoFocus\r\n      inputStyle={{\r\n        padding: 1,\r\n        borderStyle: \"dotted\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n      }}\r\n      type=\"text\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      onBlur={onBlurOrEnter}\r\n      onKeyDown={(event: any) => {\r\n        if (event.keyCode === 13) onBlurOrEnter();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class EditableSingleField extends React.Component<\r\n  IEditableSingleFieldProps\r\n> {\r\n  constructor(props: IEditableSingleFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n    // console.log('node', this.props.node)\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onFocus={() => this.props.node.setLocked(true)}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={() => {\r\n              this.props.node.setLocked(false)\r\n              this.props.onBlurOrEnter()\r\n            }}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface ISelectableFieldProps {\r\n  beingEdited: boolean;\r\n  options: Array<string>\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface ISelectableFieldState { }\r\n\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n  options\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  options: Array<string>;\r\n}) => {\r\n  return (\r\n    <select name=\"values\" id=\"values\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n    >\r\n      {\r\n        options.map((x, y) =>\r\n          <option key={y}>{x}</option>)\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default class SelectableField extends React.Component<\r\n  ISelectableFieldProps,\r\n  ISelectableFieldState\r\n> {\r\n  constructor(props: ISelectableFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n            options={this.props.options}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport \"./MyEditableNodeWidgedStyle.css\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\nimport { MyPortLabel } from \"../custom-port/MyPortLabelWidget\"\r\nimport styled from '@emotion/styled';\r\n\r\nimport EditableSingleField from \"../custom-node/custom_components/EditableSingleField\";\r\nimport SelectableField from \"../custom-node/custom_components/SelectableField\";\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nnamespace S {\r\n  export const Node = styled.div<{ background: string; selected: boolean }>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: sans-serif;\r\n\t\tcolor: white;\r\n\t\tborder: solid 2px black;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 11px;\r\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\r\n\t`;\r\n\r\n  export const Title = styled.div`\r\n\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\tdisplay: flex;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n  export const TitleName = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 5px 5px;\r\n\t`;\r\n\r\n  export const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\r\n\t`;\r\n\r\n  export const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport interface MyEditableWidgetProps {\r\n  nodeModel: MyEditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface MyEditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\nexport class MyEditableNodeWidget extends React.Component<\r\n  MyEditableWidgetProps,\r\n  MyEditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: MyEditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: { name: '', value: '' },\r\n      variableType: '',\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n  generatePort = (port) => {\r\n    return <MyPortLabel engine={this.props.engine} port={port} key={port.getID()} />\r\n  };\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n\r\n    this.props.nodeModel.content[this.state.editingKey] = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({\r\n      content: this.props.nodeModel.content\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <S.Node\r\n        data-default-node-name={this.props.nodeModel.getOptions().name}\r\n        selected={this.props.nodeModel.isSelected()}\r\n        background={this.props.nodeModel.getOptions().color}>\r\n        <S.Title>\r\n          {this.props.nodeModel.content.hasName && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"name\");\r\n                  }}\r\n                >\r\n                  <EditableSingleField\r\n                    node={this.props.nodeModel}\r\n                    elementKey=\"name\"\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.content.name}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n          <S.TitleName>\r\n            {this.props.nodeModel.getOptions().name}:\r\n            {this.props.nodeModel.content.hasUsages &&\r\n              (<a data-tip data-for={'tip-' + this.props.nodeModel.getOptions().id} >\r\n                <OpenInNewIcon style={{ fontSize: '1rem', marginBottom: '-5px' }} />\r\n              </a>)}\r\n            <ReactTooltip\r\n              className=\"interactableTooltip\"\r\n              id={'tip-' + this.props.nodeModel.getOptions().id}\r\n              type='light'\r\n              place=\"top\"\r\n              delayHide={500}\r\n              effect=\"solid\"\r\n            >\r\n              Usages:\r\n              <Button onClick={() => {\r\n                const next = this.props.nodeModel.portsIn.length\r\n                let nameIn = this.props.nodeModel.portsIn[0].getOptions().label\r\n                let nameOut = this.props.nodeModel.portsIn[0].getOptions().label\r\n\r\n                // console.log('sup', this.props.nodeModel)\r\n                this.props.nodeModel.addInPort(nameIn + '-' + next, true)\r\n                this.props.nodeModel.addOutPort(nameOut + '-' + next, true)\r\n                this.props.engine.repaintCanvas();\r\n              }}> + </Button>\r\n\r\n              <Button onClick={() => {\r\n                if (this.props.nodeModel.portsIn.length > 1) {\r\n                  let found = false\r\n                  let index = this.props.nodeModel.portsIn.length - 1;\r\n                  for (; index >= 0; index--) {\r\n                    const portIn = this.props.nodeModel.portsIn[index]\r\n                    const portOut = this.props.nodeModel.portsOut[index]\r\n                    if (!found &&\r\n                      (Object.keys(portIn.links).length === 0 ||\r\n                        Object.keys(portOut.links).length === 0)) {\r\n                      this.props.nodeModel.removePort(portIn)\r\n                      this.props.nodeModel.removePort(portOut)\r\n                      found = true\r\n                    }\r\n                  }\r\n                }\r\n                this.props.engine.repaintCanvas();\r\n              }}> - </Button>\r\n            </ReactTooltip>\r\n\r\n          </S.TitleName>\r\n          {this.props.nodeModel.content.hasValue && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"value\");\r\n                  }}\r\n                >\r\n                  {(this.props.nodeModel.portsOut[0].options.name === 'bool' ||\r\n                    this.props.nodeModel.portsOut[0].options.name === 'port' ||\r\n                    this.props.nodeModel.getOptions().name === 'Condition'\r\n                  ) ?\r\n                    <SelectableField\r\n                      elementKey=\"value\"\r\n                      options={this.props.nodeModel.selectableOptions}\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                    :\r\n                    <EditableSingleField\r\n                      node={this.props.nodeModel}\r\n                      elementKey=\"value\"\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        </S.Title>\r\n        <S.Ports>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getInPorts(), this.generatePort)}</S.PortsContainer>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getOutPorts(), this.generatePort)}</S.PortsContainer>\r\n        </S.Ports>\r\n      </S.Node>\r\n    );\r\n  }\r\n}\r\n","import { MyEditableNodeWidget } from \"./MyEditableNodeWidget\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core'\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\n\r\nexport class MyEditableNodeFactory extends AbstractReactFactory<MyEditableNodeModel, DiagramEngine> {\r\n\tgenerateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): MyEditableNodeModel {\r\n\t\treturn new MyEditableNodeModel({}, false, false);\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(\"MyEditable\");\r\n\t}\r\n\r\n\tgenerateReactWidget(event: { model: MyEditableNodeModel }): JSX.Element {\r\n\t\treturn <MyEditableNodeWidget nodeModel={event.model} engine={this.engine} />;\r\n\t}\r\n}\r\n","import * as SRD from '@projectstorm/react-diagrams';\r\nimport { MyEditableNodeFactory } from './editableNode/MyEditableNodeFactory';\r\n\r\nimport {\r\n\tRightAngleLinkFactory,\r\n} from '@projectstorm/react-diagrams';\r\n\r\nexport class Application {\r\n\tprotected activeModel: any;//SRD.DiagramModel\r\n\tprotected diagramEngine: SRD.DiagramEngine;\r\n\r\n\tconstructor() {\r\n\t\tthis.diagramEngine = SRD.default();\r\n\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new MyEditableNodeFactory());\r\n\t\tthis.diagramEngine.getLinkFactories().registerFactory(new RightAngleLinkFactory());\r\n\r\n\t\tthis.newModel();\r\n\t}\r\n\r\n\tpublic newModel() {\r\n\t\tthis.activeModel = new SRD.DiagramModel();\r\n\t\tthis.diagramEngine.setModel(this.activeModel);\r\n\t}\r\n\r\n\tpublic getActiveDiagram(): SRD.DiagramModel {\r\n\t\treturn this.activeModel;\r\n\t}\r\n\r\n\tpublic getDiagramEngine(): SRD.DiagramEngine {\r\n\t\treturn this.diagramEngine;\r\n\t}\r\n}\r\n","import BodyWidget from '../components/react-diagrams/BodyWidget';\r\nimport { Application } from '../components/react-diagrams/Application';\r\n\r\nexport default function EditorPage() {\r\n  var app = new Application();\r\n  return <BodyWidget app={app} />\r\n}","export default __webpack_public_path__ + \"static/media/flow.43bedc99.svg\";","export default __webpack_public_path__ + \"static/media/cym_s.cbee123b.svg\";","import flowDiagram from '../assets/flow.svg'\r\nimport cym_s from '../assets/cym_s.svg'\r\nexport default function HomePage() {\r\n    return <div>\r\n        <h2>\r\n            Welcome to MDD4CPS!\r\n        </h2>\r\n        <img src={flowDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n        <img src={cym_s} alt=\"CYM-S\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n    </div>\r\n}","import * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport './go.css';\r\n\r\nfunction initDiagram() {\r\n    const $ = go.GraphObject.make;\r\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n    const myDiagram = $(go.Diagram,\r\n        {\r\n            \"undoManager.isEnabled\": true,\r\n            layout: $(go.TreeLayout,\r\n                { // this only lays out in trees nodes connected by \"generalization\" links\r\n                    angle: 90,\r\n                    path: go.TreeLayout.PathSource,  // links go from child to parent\r\n                    setsPortSpot: false,  // keep Spot.AllSides for link connection spot\r\n                    setsChildPortSpot: false,  // keep Spot.AllSides\r\n                    // nodes not connected by \"generalization\" links are laid out horizontally\r\n                    arrangement: go.TreeLayout.ArrangementHorizontal,\r\n\r\n\r\n                })\r\n        });\r\n\r\n    // show visibility or access as a single character at the beginning of each property or method\r\n    function convertVisibility(v: any) {\r\n        switch (v) {\r\n            case \"public\": return \"+\";\r\n            case \"private\": return \"-\";\r\n            case \"protected\": return \"#\";\r\n            case \"package\": return \"~\";\r\n            default: return v;\r\n        }\r\n    }\r\n\r\n    // the item template for properties\r\n    var propertyTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // property visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // property name, underlined if scope==\"class\" to indicate static property\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // property type, if known\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay()),\r\n            // property default value, if any\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false },\r\n                new go.Binding(\"text\", \"default\", s => s ? \" = \" + s : \"\"))\r\n        );\r\n\r\n    // the item template for methods\r\n    var methodTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // method visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // method name, underlined if scope==\"class\" to indicate static method\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // method parameters\r\n            $(go.TextBlock, \"()\",\r\n                // this does not permit adding/editing/removing of parameters via inplace edits\r\n                new go.Binding(\"text\", \"parameters\", function (parr) {\r\n                    var s = \"(\";\r\n                    for (var i = 0; i < parr.length; i++) {\r\n                        var param = parr[i];\r\n                        if (i > 0) s += \", \";\r\n                        s += param.name + \": \" + param.type;\r\n                    }\r\n                    return s + \")\";\r\n                })),\r\n            // method return type, if any\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay())\r\n        );\r\n\r\n    myDiagram.nodeTemplate =\r\n        $(go.Node, \"Auto\",\r\n            {\r\n                locationSpot: go.Spot.Center,\r\n                fromSpot: go.Spot.AllSides,\r\n                toSpot: go.Spot.AllSides\r\n            },\r\n            $(go.Shape, { fill: \"lightyellow\" }),\r\n            $(go.Panel, \"Table\",\r\n                { defaultRowSeparatorStroke: \"black\" },\r\n                // header\r\n                $(go.TextBlock,\r\n                    {\r\n                        row: 0, columnSpan: 2, margin: 3, alignment: go.Spot.Center,\r\n                        font: \"bold 12pt sans-serif\",\r\n                        isMultiline: false, editable: true\r\n                    },\r\n                    new go.Binding(\"text\", \"name\").makeTwoWay()),\r\n                // properties\r\n                $(go.TextBlock, \"Properties\",\r\n                    { row: 1, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"PROPERTIES\")),\r\n                $(go.Panel, \"Vertical\", { name: \"PROPERTIES\" },\r\n                    new go.Binding(\"itemArray\", \"properties\"),\r\n                    {\r\n                        row: 1, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: propertyTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"PROPERTIES\",\r\n                    { row: 1, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"properties\", arr => arr.length > 0)),\r\n                // methods\r\n                $(go.TextBlock, \"Methods\",\r\n                    { row: 2, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"METHODS\")),\r\n                $(go.Panel, \"Vertical\", { name: \"METHODS\" },\r\n                    new go.Binding(\"itemArray\", \"methods\"),\r\n                    {\r\n                        row: 2, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: methodTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"METHODS\",\r\n                    { row: 2, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"methods\", arr => arr.length > 0))\r\n            )\r\n        );\r\n    myDiagram.nodeTemplateMap.add(\"Start\",\r\n        $(go.Node, \"Spot\", {\r\n            locationSpot: go.Spot.Center,\r\n            fromSpot: go.Spot.AllSides,\r\n            toSpot: go.Spot.AllSides,\r\n            desiredSize: new go.Size(75, 75)\r\n        },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"#52ce60\", /* green */\r\n                    stroke: null,\r\n                }),\r\n            $(go.TextBlock, \"Start\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\"End\",\r\n        $(go.Node, \"Spot\", { desiredSize: new go.Size(75, 75) },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"maroon\",\r\n                    stroke: null,\r\n                }),\r\n            $(go.Shape, \"Circle\", { fill: null, desiredSize: new go.Size(65, 65), strokeWidth: 2, stroke: \"whitesmoke\" }),\r\n            $(go.TextBlock, \"End\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n    function convertIsTreeLink(r: string) {\r\n        return r === \"generalization\";\r\n    }\r\n\r\n    function convertFromArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    function convertToArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"Triangle\";\r\n            case \"aggregation\": return \"StretchedDiamond\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    myDiagram.linkTemplate =\r\n        $(go.Link,\r\n            { routing: go.Link.Orthogonal },\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsTreeLink),\r\n            $(go.Shape),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"fromArrow\", \"relationship\", convertFromArrow)),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"toArrow\", \"relationship\", convertToArrow))\r\n        );\r\n\r\n    myDiagram.model = new go.GraphLinksModel(\r\n        {\r\n            linkKeyProperty: 'key',\r\n            copiesArrays: true,\r\n            copiesArrayObjects: true,\r\n        });\r\n\r\n    return myDiagram;\r\n}\r\n\r\n\r\nexport default function GoClass(props: { nodedata: any, linkdata: any }) {\r\n    console.log(props);\r\n\r\n    return (\r\n        <ReactDiagram\r\n            initDiagram={initDiagram}\r\n            divClassName='diagram-component'\r\n            nodeDataArray={props.nodedata}\r\n            linkDataArray={props.linkdata}\r\n        />\r\n    );\r\n}","import GoClass from \"../components/GoClass\";\r\nimport paletteNodes from \"../paletteNodes\";\r\n\r\nexport default function ModelsPage() {\r\n    const startDelta = 1000\r\n    const endDelta = 2000\r\n    const controllerDelta = 3000\r\n\r\n    let nodesStatic: any[] = [\r\n        { key: -1, name: 'MicroController' },\r\n        { key: -2, name: 'Arduino' },\r\n        { key: -3, name: 'Component' },\r\n    ]\r\n    let linksStatic: any[] = [\r\n        { key: -2, from: -2, to: -1, relationship: \"generalization\" },\r\n        { key: -3, from: -3, to: -1, relationship: \"generalization\" },\r\n    ]\r\n    let nodesDynamic: any[] = []\r\n    let linksDynamic: any[] = []\r\n\r\n    paletteNodes.forEach((node, index) => {\r\n        let methods: any[] = []\r\n        node.methods?.forEach(method => {\r\n            methods.push({ name: method, visibility: 'public' })\r\n        });\r\n        node.ins?.forEach(method => {\r\n            methods.push({ name: method, visibility: 'public' })\r\n        });\r\n        node.outs?.forEach(method => {\r\n            methods.push({ name: method, visibility: 'public' })\r\n        });\r\n\r\n        let parsedNode = {\r\n            key: index,\r\n            name: node.name,\r\n            methods: methods\r\n        }\r\n\r\n\r\n        nodesStatic.push(parsedNode)\r\n\r\n\r\n        if (node.extras.type === 'controller') {\r\n            linksStatic.push({ key: index, from: index, to: -2, relationship: \"generalization\" })\r\n        } else {\r\n            nodesDynamic.push({ key: index + controllerDelta, name: 'MicroController' })\r\n            linksDynamic.push({ key: index + controllerDelta, from: index + startDelta, to: index + controllerDelta, text: \"relation\", relationship: \"generalization\" })\r\n            nodesDynamic.push({ key: index + startDelta, category: \"Start\" })\r\n            linksDynamic.push({ key: index + startDelta, from: index + controllerDelta, to: index, text: \"relation\", relationship: \"generalization\" })\r\n            nodesDynamic.push(parsedNode)\r\n            linksDynamic.push({ key: index + endDelta, from: index, to: index + endDelta, text: \"relation\", relationship: \"generalization\" })\r\n            nodesDynamic.push({ key: index + endDelta, category: \"End\" })\r\n        }\r\n\r\n    });\r\n\r\n    return <>\r\n        <GoClass linkdata={linksStatic} nodedata={nodesStatic} />\r\n        <GoClass linkdata={linksDynamic} nodedata={nodesDynamic} />\r\n    </>\r\n}","export default __webpack_public_path__ + \"static/media/transformations.40b625af.png\";","import transformations from '../assets/transformations.png'\r\nexport default function TransformationsPage() {\r\n    return <div>\r\n        <img src={transformations} alt=\"Transformations\" style={{ maxHeight: '80vh', maxWidth: '90%' }} />\r\n    </div>\r\n}","import { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport paletteNodes from \"../paletteNodes\";\r\nimport NodeDiagram from \"../components/NodeDiagram\";\r\n\r\nexport default function PalettePage() {\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, [])\r\n    return <div>\r\n        {\r\n            paletteNodes.map((node) => {\r\n                return <div key={node.name} className=\"grid-container\" style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: ' 1fr 1fr',\r\n                    gridGap: '20px'\r\n                }}>\r\n                    <pre >\r\n                        <code className=\"language-clike\">{JSON.stringify(node, null, \"\\t\")}</code>\r\n                    </pre>\r\n                    <NodeDiagram node={node} canEdit={true} />\r\n                </div>\r\n            }\r\n            )\r\n        }\r\n    </div>\r\n}","\r\nexport default function PalettePage() {\r\n    return <>\r\n        <h3>Planned Settings</h3>\r\n        <ul>\r\n            <li>Show/Hide copy button on code panel</li>\r\n            <li>Show/Hide all comments</li>\r\n            <li>Show/Hide all warnings</li>\r\n            <li>Show/Hide all arrows</li>\r\n            <li>Show/Hide diagram overlay</li>\r\n            <li>Show/Hide palette expansion panels</li>\r\n            <li></li>\r\n            <li>Enable/Disables constant capitalization</li>\r\n            <li></li>\r\n            <li>Enable code editing (breaks diagram to code relation)</li>\r\n            <li></li>\r\n            <li>Enforce typings</li>\r\n            <li>Enforce lose ends</li>\r\n            <li>Enforce sequencial port usage</li>\r\n            <li>Remove link restrictions</li>\r\n            <li></li>\r\n            <li>Reset all settings on this page</li>\r\n            <li>Reset custom palette</li>\r\n            <li>Erase all localStorage data</li>\r\n            <li></li>\r\n            <li>Contact info</li>\r\n        </ul>\r\n\r\n    </>\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\nimport ModelsPage from './pages/Models';\r\nimport TransformationsPage from './pages/Transformations';\r\nimport PalettePage from './pages/Palette';\r\nimport SettingsPage from './pages/Settings';\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Routes >\r\n          <Route path='/mdd4/' element={<HomePage />} />\r\n          <Route path='/mdd4/models' element={<ModelsPage />} />\r\n          <Route path='/mdd4/transformations' element={<TransformationsPage />} />\r\n          <Route path='/mdd4/palette' element={<PalettePage />} />\r\n          <Route path='/mdd4/editor' element={<EditorPage />} />\r\n          <Route path='/mdd4/settings' element={<SettingsPage />} />\r\n        </Routes>\r\n        <NavigationBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}