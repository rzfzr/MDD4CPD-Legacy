{"version":3,"sources":["components/NavigationBar.tsx","components/react-diagrams/custom-port/MyPortLabelWidget.tsx","components/react-diagrams/custom-node/custom_components/EditableSingleField.tsx","components/react-diagrams/custom-node/custom_components/SelectableField.tsx","components/react-diagrams/editableNode/MyEditableNodeWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeFactory.tsx","components/react-diagrams/Application.ts","components/GoClass.tsx","components/goBuilder.ts","components/react-diagrams/TrayItemWidget.tsx","components/react-diagrams/MyCanvasWidget.tsx","components/react-diagrams/myNode/MyRightAngleLinkModel.ts","components/react-diagrams/myNode/MyPortModel.ts","components/react-diagrams/editableNode/MyEditableNodeModel.ts","PaletteNodes.jsx","components/Code.tsx","pages/Editor.tsx","assets/flow.svg","assets/cym_s.svg","pages/Home.tsx","pages/Models.tsx","assets/transformations.png","pages/Transformations.tsx","pages/Manual.tsx","pages/Settings.tsx","App.tsx","index.tsx"],"names":["SimpleBottomNavigation","pathname","window","location","useState","value","setValue","AppBar","position","color","style","top","bottom","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","label","to","icon","S","styled","div","props","border","width","height","background","hasLink","MyPortLabel","Object","keys","this","port","links","length","hasHiddenLabel","getOptions","extras","isVoid","name","startsWith","alignment","FakePort","engine","Port","labelR","LabelR","labelL","LabelL","PortLabel","in","React","Editor","content","onFocus","onBlurOrEnter","autoFocus","inputStyle","padding","borderStyle","borderWidth","borderColor","type","onBlur","onKeyDown","keyCode","EditableSingleField","state","beingEdited","editingKey","elementKey","node","setLocked","margin","fontStyle","isAbstract","options","id","map","x","y","SelectableField","returnTypes","portTypes","p","selected","MyEditableNodeWidget","divElement","generatePort","getID","_editableObjectDoubleClick","editingSomething","setState","_contentOnChange","evt","nodeModel","currentTarget","_onBlurOrEnter","replaceAll","variableType","bind","console","log","Node","isSelected","Title","hasReturnType","className","ref","onDoubleClick","returnType","hasPortType","portType","hasUsername","TitleName","hasUsages","fontSize","marginBottom","place","delayHide","effect","Button","onClick","addInPort","addOutPort","repaintCanvas","isFound","index","portsIn","portIn","portOut","portsOut","removePort","portIndex","nameIn","nameOut","next","filter","hasValue","selectableOptions","Ports","PortsContainer","_","getInPorts","getOutPorts","MyEditableNodeFactory","Error","model","AbstractReactFactory","Application","activeModel","diagramEngine","SRD","getNodeFactories","registerFactory","getLinkFactories","RightAngleLinkFactory","newModel","setModel","GoClass","initDiagram","$","go","make","myDiagram","layout","angle","isTree","path","PathSource","setsPortSpot","setsChildPortSpot","arrangement","ArrangementHorizontal","undefined","nodeSpacing","layerSpacing","convertVisibility","v","propertyTemplate","isMultiline","editable","makeTwoWay","s","t","methodTemplate","nodeTemplate","locationSpot","Center","fromSpot","AllSides","toSpot","fill","minSize","hasMinSize","defaultRowSeparatorStroke","row","columnSpan","font","ofObject","stretch","Fill","defaultAlignment","Left","itemTemplate","column","TopRight","visible","arr","nodeTemplateMap","add","desiredSize","parse","stringify","stroke","strokeWidth","linkTemplate","routing","Orthogonal","r","scale","textAlign","linkKeyProperty","copiesArrays","copiesArrayObjects","diagramOptions","divClassName","nodeDataArray","nodedata","linkDataArray","linkdata","controllerDelta","methodDelta","getGoProperties","properties","entries","key","push","visibility","getGoMethods","methods","ports","forEach","method","ins","outs","processDynamic","badMethod","nodes","from","text","relationship","methodIndex","TrayItemWidget","Tray","draggable","onDragStart","dataTransfer","setData","JSON","setDragImage","Image","float","marginRight","description","href","link","target","rel","css","MyCanvasWidget","styles","Expand","Container","children","MyRightAngleLinkModel","NAME","lastHoverIndexOfPath","_lastPathXdirection","_firstPathXdirection","points","getPoints","i","dx","Math","abs","getX","dy","getY","pointModel","setFirstAndLastPathsDirection","first","last","fireEvent","DefaultLinkModel","MyPortModel","PortModelAlignment","LEFT","RIGHT","data","setWidth","setColor","h","l","a","min","f","n","k","max","hsl2rgb","random","PortModel","MyEditableNodeModel","biPort","inPort","outPort","lookupTable","clone","splice","indexOf","after","addPort","oldName","newName","portInIndex","findIndex","portsInOrder","getPortFromID","portsOutOrder","NodeModel","analogPorts","digitalPorts","group","Array","toString","library","ordinals","paramTypes","generateCode","declareFunction","logic","find","processLink","formattedParameters","params","par","message","m","code","getLink","linkID","getPort","nodeID","portID","error","getNode","getParent","childNode","parentNode","warn","problems","getCoditionalValue","conditionNode","portName","source","sourcePort","parent","includes","instance","getOutcome","ifThis","targetPort","fromPort","fromNode","toPort","resolveTarget","toNode","nextFromPort","portPosition","outPortId","getOutPort","nextLink","nextToPort","nextToNode","expected","split","received","expMin","e","expMax","count","warnAboutExpectedVersusReceived","ex","expectedType","rt","trim","re","receivedType","substring","variableParams","xValue","yValue","outcomePort2","toNode2","outcomePort3","toNode3","callWithParameters","functions","temp","layers","models","getLinksFromModel","getNodesFromModel","logics","components","toLowerCase","replace","getComponentsFromNodes","controller","constants","constant","toUpperCase","variables","usedDigital","Set","usedAnalog","uniqueDigitals","u","uniqueAnalogs","addHeaderComments","controllers","warnAboutNumberOfControllers","warnAboutNodesWithoutLinks","warnAboutMultipleUsePorts","warnAboutLooseLinks","libraries","lib","comp","addLibraries","isArray","addConstantDeclarations","variable","equals","addVariableDeclarations","original","level","line","repeat","join","indentCode","Code","useEffect","Prism","highlightAll","el","document","querySelector","setAttribute","problemId","display","justifyContent","start","end","overflow","ScrollArea","require","default","app","EditorPage","rerender","setRerender","rawModel","getDiagramEngine","getModel","serialize","stringModel","groups","PaletteNodes","Body","Content","speed","contentClassName","horizontal","smoothScrolling","verticalScrollbarStyle","backgroundColor","slice","Layer","onDrop","getData","registerListener","linksUpdated","nodesUpdated","setPosition","getRelativeMousePoint","addNode","onDragOver","preventDefault","HomePage","src","flowDiagram","alt","maxHeight","maxWidth","cym_s","ModelsPage","nodesStatic","linksStatic","nodesDynamic","linksDynamic","TransformationsPage","transformations","ManualPage","title","PalettePage","App","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.acb6ee6e.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AppBar } from '@material-ui/core';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n// import SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\n// import PaletteIcon from '@material-ui/icons/Palette';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TransformIcon from '@mui/icons-material/Transform';\r\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n    const [value, setValue] = useState(pathname);\r\n    const handleChange = (event: any, newValue: any) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{ top: \"auto\", bottom: 0 }}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={handleChange}\r\n                showLabels\r\n            >\r\n                location.pathname\r\n                <BottomNavigationAction component={Link} label=\"Home\" to=\"/mdd4/\" icon={<HomeIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Models\" to=\"/mdd4/models\" icon={<MapIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Transformations\" to=\"/mdd4/transformations\" icon={<TransformIcon />} />\r\n                {/* <BottomNavigationAction component={Link} label=\"Palette\" to=\"/mdd4/palette\" icon={<PaletteIcon />} /> */}\r\n                <BottomNavigationAction component={Link} label=\"Manual\" to=\"/mdd4/manual\" icon={<MenuBookIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Editor\" to=\"/mdd4/editor\" icon={<EditIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Settings\" to=\"/mdd4/settings\" icon={<SettingsIcon />} />\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    );\r\n}","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport styled from '@emotion/styled';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface MyPortLabelProps {\r\n    port: MyPortModel;\r\n    engine: DiagramEngine;\r\n}\r\n\r\nnamespace S {\r\n    export const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t`;\r\n\r\n    export const LabelR = styled.div`\r\n\t\tpadding: 0 4px 0 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const LabelL = styled.div`\r\n\t\tpadding: 0 0 0px 0;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n    export const Port = styled.div((props: any) => ({\r\n        border: 'solid 1px white',\r\n        width: '14px',\r\n        height: '14px',\r\n        background: (props.hasLink ? 'rgba(255, 192, 0, 0.7)' : 'rgba(255, 255, 255, 0.3)'),\r\n        '&:hover': {\r\n            background: 'rgb(192, 255, 0)',\r\n        }\r\n    }))\r\n\r\n\r\n    export const FakePort = styled.div`\r\n        width: 16px;\r\n\t\theight: 16px;\r\n\t`;\r\n}\r\nexport class MyPortLabel extends React.Component<MyPortLabelProps> {\r\n    render() {\r\n        const hasLink = Object.keys(this.props?.port?.links).length !== 0\r\n        const hasHiddenLabel = this.props?.port?.getOptions().extras.hasHiddenLabel\r\n        let isVoid = false\r\n        if (this.props?.port?.getOptions().name?.startsWith('void')) {\r\n            if (this.props?.port?.getOptions().alignment === \"right\") {\r\n                isVoid = true\r\n            }\r\n        }\r\n        const port = isVoid ? (<S.FakePort />) : (\r\n            <PortWidget engine={this.props.engine\r\n            } port={this.props.port} >\r\n                <S.Port hasLink={hasLink} />\r\n            </PortWidget>\r\n        );\r\n\r\n        const labelR = <S.LabelR>{this.props.port.getOptions().label}</S.LabelR>;\r\n        const labelL = <S.LabelL>{this.props.port.getOptions().label}</S.LabelL>;\r\n\r\n        return (\r\n            <S.PortLabel>\r\n                {this.props.port.getOptions().in ? port : !hasHiddenLabel && labelR}\r\n                {this.props.port.getOptions().in ? !hasHiddenLabel && labelL : port}\r\n            </S.PortLabel>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport AutosizeInput from 'react-input-autosize';\r\n\r\nexport interface IEditableSingleFieldProps {\r\n  node: any;\r\n  beingEdited: boolean;\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\nconst Editor = ({\r\n  content,\r\n  onFocus,\r\n  onChange,\r\n  onBlurOrEnter,\r\n}: {\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n}) => {\r\n  return (\r\n    <AutosizeInput\r\n      autoFocus\r\n      inputStyle={{\r\n        padding: 1,\r\n        borderStyle: \"dotted\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n      }}\r\n      type=\"text\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      onBlur={onBlurOrEnter}\r\n      onKeyDown={(event: any) => {\r\n        if (event.keyCode === 13) onBlurOrEnter();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class EditableSingleField extends React.Component<\r\n  IEditableSingleFieldProps\r\n> {\r\n  constructor(props: IEditableSingleFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n    // console.log('node', this.props.node)\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onFocus={() => this.props.node.setLocked(true)}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={() => {\r\n              this.props.node.setLocked(false)\r\n              this.props.onBlurOrEnter()\r\n            }}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface ISelectableFieldProps {\r\n  beingEdited: boolean;\r\n  options: Array<string>\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface ISelectableFieldState { }\r\n\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n  options\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  options: Array<string>;\r\n}) => {\r\n  return (\r\n    <select name=\"values\" id=\"values\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n    >\r\n      {\r\n        options.map((x, y) =>\r\n          <option key={y}>{x}</option>)\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default class SelectableField extends React.Component<\r\n  ISelectableFieldProps,\r\n  ISelectableFieldState\r\n> {\r\n  constructor(props: ISelectableFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n            options={this.props.options}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport \"./MyEditableNodeWidgedStyle.css\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\nimport { MyPortLabel } from \"../custom-port/MyPortLabelWidget\"\r\nimport styled from '@emotion/styled';\r\n\r\nimport EditableSingleField from \"../custom-node/custom_components/EditableSingleField\";\r\nimport SelectableField from \"../custom-node/custom_components/SelectableField\";\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst returnTypes = ['byte', 'uint8_t', 'uint16_t', 'int32_t', 'unsigned int', 'unsigned long', 'int', 'long', 'bool', 'float', 'double', 'char', 'string']\r\nconst portTypes = ['Digital', 'Analog']\r\n\r\nnamespace S {\r\n  export const Node = styled.div<{ background: string; selected: boolean }>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: sans-serif;\r\n\t\tcolor: white;\r\n\t\tborder: solid 2px black;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 11px;\r\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\r\n\t`;\r\n\r\n  export const Title = styled.div`\r\n\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\tdisplay: flex;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n  export const TitleName = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 5px 5px;\r\n\t`;\r\n\r\n  export const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\r\n\t`;\r\n\r\n  export const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport interface MyEditableWidgetProps {\r\n  nodeModel: MyEditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface MyEditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\nexport class MyEditableNodeWidget extends React.Component<\r\n  MyEditableWidgetProps,\r\n  MyEditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: MyEditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: { name: '', value: '' },\r\n      variableType: '',\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n  generatePort = (port) => {\r\n    return <MyPortLabel engine={this.props.engine} port={port} key={port.getID()} />\r\n  };\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.nodeModel.extras[this.state.editingKey] = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n\r\n    if (this.props.nodeModel.getOptions().name === 'Function') {\r\n      //   //remove whitespaces from function name\r\n      this.props.nodeModel.extras.value = this.props.nodeModel.extras.value.replaceAll(' ', '')\r\n      //   this.props.engine.repaintCanvas();\r\n\r\n      //   //add returnType to inPorts labels\r\n      //   this.props.nodeModel.getInPorts().forEach(port => {\r\n      //     const name = port.getOptions().name\r\n      //     if (name === 'declare') return\r\n\r\n      //     let newName = name.substring(name.indexOf('in('))//removes previous returnType\r\n      //     newName = this.props.nodeModel.extras.returnType + ' ' + newName //adds new\r\n\r\n      //     this.props.nodeModel.renamePort(name, newName)\r\n      //   });\r\n      //   this.props.engine.repaintCanvas();\r\n      //   //this will be used for treating parameters\r\n      //   // const pos = name.indexOf('-') !== -1 ? name.indexOf('-') : name.length\r\n      //   // const newName = name.substring(0, name.indexOf('(')) + name.substring(name.indexOf(')'))\r\n      //   // this.props.nodeModel.extras.value = prev + `(${this.props.nodeModel.extras.returnType} x)`//add new\r\n    }\r\n\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({\r\n      extras: this.props.nodeModel.extras\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.props.nodeModel)\r\n    return (\r\n      <S.Node\r\n        data-default-node-name={this.props.nodeModel.getOptions().name}\r\n        selected={this.props.nodeModel.isSelected()}\r\n        background={this.props.nodeModel.getOptions().color}>\r\n        <S.Title>\r\n          {this.props.nodeModel.extras.hasReturnType && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"returnType\");\r\n                  }}\r\n                >\r\n                  <SelectableField\r\n                    elementKey=\"returnType\"\r\n                    options={returnTypes}\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.extras.returnType}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n          {this.props.nodeModel.extras.hasPortType && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"portType\");\r\n                  }}\r\n                >\r\n                  <SelectableField\r\n                    elementKey=\"portType\"\r\n                    options={portTypes}\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.extras.portType}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n          {this.props.nodeModel.extras.hasUsername && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"name\");\r\n                  }}\r\n                >\r\n                  <EditableSingleField\r\n                    node={this.props.nodeModel}\r\n                    elementKey=\"name\"\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.extras.name}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n          <S.TitleName>\r\n            {this.props.nodeModel.getOptions().name}:\r\n            {this.props.nodeModel.extras.hasUsages &&\r\n              (<a data-tip data-for={'tip-' + this.props.nodeModel.getOptions().id} >\r\n                <OpenInNewIcon style={{ fontSize: '1rem', marginBottom: '-5px' }} />\r\n              </a>)}\r\n            <ReactTooltip\r\n              className=\"interactableTooltip\"\r\n              id={'tip-' + this.props.nodeModel.getOptions().id}\r\n              type='light'\r\n              place=\"top\"\r\n              delayHide={500}\r\n              effect=\"solid\"\r\n            >\r\n\r\n\r\n              {this.props.nodeModel.extras?.type === 'variable' &&\r\n                <div>Setters:\r\n\r\n                  <Button onClick={() => {\r\n                    const name = 'void setValue(<T> value)'\r\n                    this.props.nodeModel.addInPort(name)\r\n                    this.props.nodeModel.addOutPort(name + ' ', true, true)\r\n                    this.props.engine.repaintCanvas();\r\n                  }}> + </Button>\r\n\r\n                  <Button onClick={() => {\r\n                    const nameIn = 'void'\r\n\r\n                    let isFound = false\r\n                    let index = this.props.nodeModel.portsIn.length - 1;\r\n                    for (; index >= 1; index--) {\r\n                      const portIn = this.props.nodeModel.portsIn[index]\r\n                      const portOut = this.props.nodeModel.portsOut[index]\r\n                      if (!isFound) {\r\n                        if (Object.keys(portIn.links).length !== 0 ||\r\n                          Object.keys(portOut.links).length !== 0) {\r\n                          return\r\n                        }\r\n                        // console.log('innn', portIn)\r\n                        if (portIn.options.label.startsWith(nameIn)) {\r\n                          this.props.nodeModel.removePort(portIn)\r\n                          this.props.nodeModel.removePort(portOut)\r\n                          isFound = true\r\n                        }\r\n                      }\r\n                    }\r\n                    this.props.engine.repaintCanvas();\r\n                  }}> - </Button>\r\n                </div>\r\n              }\r\n              Usages:\r\n              <Button onClick={() => {\r\n                const portIndex = this.props.nodeModel.getOptions().name === 'Function' ? 1 : 0\r\n\r\n                const nameIn = this.props.nodeModel.portsIn[portIndex]?.getOptions()?.label\r\n                const nameOut = this.props.nodeModel.portsOut[portIndex]?.getOptions()?.label\r\n\r\n                const next = this.props.nodeModel.portsIn.filter(port => port.getOptions().label?.startsWith(nameIn)).length\r\n\r\n                if (nameIn)\r\n                  this.props.nodeModel.addInPort(nameIn + '-' + next, true)\r\n                if (nameOut)\r\n                  this.props.nodeModel.addOutPort(nameOut + '-' + next, true)\r\n                this.props.engine.repaintCanvas();\r\n              }}> + </Button>\r\n\r\n              <Button onClick={() => {\r\n                const portIndex = this.props.nodeModel.getOptions().name === 'Function' ? 1 : 0\r\n\r\n                const nameIn = this.props.nodeModel.portsIn[portIndex].getOptions().label\r\n\r\n                let isFound = false\r\n                let index = this.props.nodeModel.portsIn.length - 1;\r\n                for (; index >= portIndex + 1; index--) {\r\n                  const portIn = this.props.nodeModel.portsIn[index]\r\n                  const portOut = this.props.nodeModel.portsOut[index]\r\n\r\n                  if (!isFound) {\r\n                    if (Object.keys(portIn.links).length !== 0) {\r\n                      return\r\n                    }\r\n                    if (portIn.options.label.startsWith(nameIn)) {\r\n                      this.props.nodeModel.removePort(portIn)\r\n                      if (portOut)\r\n                        this.props.nodeModel.removePort(portOut)\r\n                      isFound = true\r\n                    }\r\n                  }\r\n                }\r\n                this.props.engine.repaintCanvas();\r\n              }}> - </Button>\r\n            </ReactTooltip>\r\n\r\n          </S.TitleName>\r\n          {this.props.nodeModel.extras.hasValue && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"value\");\r\n                  }}\r\n                >\r\n                  {this.props.nodeModel.selectableOptions || this.props.nodeModel.extras.returnType === 'bool' ?\r\n                    <SelectableField\r\n                      elementKey=\"value\"\r\n                      options={this.props.nodeModel.extras.returnType === 'bool' ? ['true', 'false'] : this.props.nodeModel.selectableOptions}\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.extras.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                    :\r\n                    <EditableSingleField\r\n                      node={this.props.nodeModel}\r\n                      elementKey=\"value\"\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.extras.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        </S.Title>\r\n        <S.Ports>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getInPorts(), this.generatePort)}</S.PortsContainer>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getOutPorts(), this.generatePort)}</S.PortsContainer>\r\n        </S.Ports>\r\n      </S.Node>\r\n    );\r\n  }\r\n}\r\n","import { MyEditableNodeWidget } from \"./MyEditableNodeWidget\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport { AbstractReactFactory, GenerateModelEvent } from '@projectstorm/react-canvas-core'\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\n\r\nexport class MyEditableNodeFactory extends AbstractReactFactory<MyEditableNodeModel, DiagramEngine> {\r\n\tgenerateModel(event: GenerateModelEvent): MyEditableNodeModel {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\t// generateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): MyEditableNodeModel {\r\n\t// \treturn new MyEditableNodeModel({});\r\n\t// }\r\n\tconstructor() {\r\n\t\tsuper(\"MyEditable\");\r\n\t}\r\n\r\n\tgenerateReactWidget(event: { model: MyEditableNodeModel }): JSX.Element {\r\n\t\treturn <MyEditableNodeWidget nodeModel={event.model} engine={this.engine} />;\r\n\t}\r\n}\r\n","import * as SRD from '@projectstorm/react-diagrams';\r\nimport { MyEditableNodeFactory } from './editableNode/MyEditableNodeFactory';\r\n\r\nimport {\r\n\tRightAngleLinkFactory,\r\n} from '@projectstorm/react-diagrams';\r\n\r\nexport class Application {\r\n\tprotected activeModel: any;//SRD.DiagramModel\r\n\tprotected diagramEngine: SRD.DiagramEngine;\r\n\r\n\tconstructor() {\r\n\t\tthis.diagramEngine = SRD.default();\r\n\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new MyEditableNodeFactory());\r\n\t\tthis.diagramEngine.getLinkFactories().registerFactory(new RightAngleLinkFactory());\r\n\r\n\t\tthis.newModel();\r\n\t}\r\n\r\n\tpublic newModel() {\r\n\t\tthis.activeModel = new SRD.DiagramModel();\r\n\t\tthis.diagramEngine.setModel(this.activeModel);\r\n\t}\r\n\r\n\tpublic getActiveDiagram(): SRD.DiagramModel {\r\n\t\treturn this.activeModel;\r\n\t}\r\n\r\n\tpublic getDiagramEngine(): SRD.DiagramEngine {\r\n\t\treturn this.diagramEngine;\r\n\t}\r\n}\r\n","import * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport './go.css';\r\nfunction initDiagram(options: any) {\r\n    // console.log('initDiagram with', options)\r\n    const $ = go.GraphObject.make;\r\n    // go.TreeLayout.ArrangementVertical :\r\n\r\n\r\n    const myDiagram = $(go.Diagram,\r\n        {\r\n            layout: $(go.TreeLayout,\r\n                { // this only lays out in trees nodes connected by \"generalization\" links\r\n                    angle: options?.isTree ? 90 : 180,\r\n                    path: go.TreeLayout.PathSource,  // links go from child to parent\r\n                    setsPortSpot: false,  // keep Spot.AllSides for link connection spot\r\n                    setsChildPortSpot: false,  // keep Spot.AllSides\r\n                    arrangement: options?.isTree ? go.TreeLayout.ArrangementHorizontal : undefined,\r\n                    nodeSpacing: 1000, layerSpacing: 1000\r\n                })\r\n        });\r\n\r\n    function convertVisibility(v: any) {\r\n        switch (v) {\r\n            case \"public\": return \"+\";\r\n            case \"private\": return \"-\";\r\n            case \"protected\": return \"#\";\r\n            case \"package\": return \"~\";\r\n            default: return v;\r\n        }\r\n    }\r\n\r\n    var propertyTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // property visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // property name, underlined if scope==\"class\" to indicate static property\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // property type, if known\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay()),\r\n            // property default value, if any\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false },\r\n                new go.Binding(\"text\", \"default\", s => s ? \" = \" + s : \"\"))\r\n        );\r\n    var methodTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // method visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // method name, underlined if scope==\"class\" to indicate static method\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay())\r\n        );\r\n\r\n    myDiagram.nodeTemplate =\r\n        $(go.Node, \"Auto\",\r\n            {\r\n                locationSpot: go.Spot.Center,\r\n                fromSpot: go.Spot.AllSides,\r\n                toSpot: go.Spot.AllSides\r\n            },\r\n            $(go.Shape, {\r\n                fill: \"lightcyan\",\r\n                minSize: !!options?.hasMinSize ? new go.Size(100, 200) : new go.Size(10, 10),\r\n            }),\r\n            $(go.Panel, \"Table\",\r\n                { defaultRowSeparatorStroke: \"black\" },\r\n                // header\r\n                $(go.TextBlock,\r\n                    {\r\n                        row: 0, columnSpan: 2, margin: 3, alignment: go.Spot.Center,\r\n                        font: \"bold 12pt sans-serif\",\r\n                        isMultiline: false, editable: true\r\n                    },\r\n                    new go.Binding(\"text\", \"name\").makeTwoWay()),\r\n                // properties\r\n                $(go.TextBlock, \"Properties\",\r\n                    { row: 1, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"PROPERTIES\")),\r\n                $(go.Panel, \"Vertical\", { name: \"PROPERTIES\" },\r\n                    new go.Binding(\"itemArray\", \"properties\"),\r\n                    {\r\n                        row: 1, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightcyan\",\r\n                        itemTemplate: propertyTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"PROPERTIES\",\r\n                    { row: 1, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"properties\", arr => arr.length > 0)),\r\n\r\n\r\n                $(go.TextBlock, \"Methods\",\r\n                    { row: 2, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"METHODS\")),\r\n                $(go.Panel, \"Vertical\", { name: \"METHODS\" },\r\n                    new go.Binding(\"itemArray\", \"methods\"),\r\n                    {\r\n                        row: 2, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightcyan\",\r\n                        itemTemplate: methodTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"METHODS\",\r\n                    { row: 2, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"methods\", arr => arr.length > 0))\r\n            )\r\n        );\r\n    myDiagram.nodeTemplateMap.add(\"Start\",\r\n        $(go.Node, \"Spot\", {\r\n            locationSpot: go.Spot.Center,\r\n            fromSpot: go.Spot.AllSides,\r\n            toSpot: go.Spot.AllSides,\r\n            desiredSize: new go.Size(75, 75)\r\n        },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"#52ce60\", /* green */\r\n                    stroke: null,\r\n                }),\r\n            $(go.TextBlock, \"Start\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\"End\",\r\n        $(go.Node, \"Spot\", { desiredSize: new go.Size(75, 75) },\r\n            new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n            $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: \"maroon\",\r\n                    stroke: null,\r\n                }),\r\n            $(go.Shape, \"Circle\", { fill: null, desiredSize: new go.Size(65, 65), strokeWidth: 2, stroke: \"whitesmoke\" }),\r\n            $(go.TextBlock, \"End\",\r\n                {\r\n                    font: \"bold 16pt helvetica, bold arial, sans-serif\",\r\n                    stroke: \"whitesmoke\"\r\n                })\r\n        )\r\n    );\r\n    function convertIsTreeLink(r: string) {\r\n        return r === \"generalization\";\r\n    }\r\n    function convertIsStateLink(r: string) {\r\n        return r === \"state\";\r\n    }\r\n\r\n    function convertFromArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    function convertToArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"Triangle\";\r\n            case \"state\": return \"Triangle\";\r\n            case \"aggregation\": return \"StretchedDiamond\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    myDiagram.linkTemplate =\r\n        $(go.Link,\r\n            { routing: go.Link.Orthogonal },\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsTreeLink),\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsStateLink),\r\n            $(go.Shape),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"fromArrow\", \"relationship\", convertFromArrow)),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"toArrow\", \"relationship\", convertToArrow)),\r\n            $(go.TextBlock, \"\",\r\n                {\r\n                    textAlign: \"center\",\r\n                    font: \"12pt helvetica, arial, sans-serif\",\r\n                    margin: 4,\r\n                    editable: false\r\n                },\r\n                new go.Binding(\"text\").makeTwoWay()),\r\n        );\r\n\r\n    myDiagram.model = new go.GraphLinksModel(\r\n        {\r\n            linkKeyProperty: 'key',\r\n            copiesArrays: true,\r\n            copiesArrayObjects: true,\r\n        });\r\n\r\n    return myDiagram;\r\n}\r\n\r\nexport default function GoClass(props: { nodedata: any, linkdata: any, diagramOptions?: any }) {\r\n    return (\r\n        <ReactDiagram\r\n            initDiagram={() => initDiagram(props.diagramOptions)}\r\n            divClassName='diagram-component'\r\n            nodeDataArray={props.nodedata}\r\n            linkDataArray={props.linkdata}\r\n        />\r\n    );\r\n}","// const startDelta = 1000\r\n// const endDelta = 2000\r\nconst controllerDelta = 3000\r\nconst methodDelta = 4000\r\n\r\nexport function getGoProperties(node: any) {\r\n    let properties: any[] = []\r\n    for (const [key, value] of Object.entries(node.extras)) {\r\n        // if (!['selectableOptions'].includes(key))\r\n        properties.push({ name: `${key}: ${value}`, visibility: 'private' })\r\n    }\r\n    return properties\r\n}\r\n\r\nexport function getGoMethods(node: any) {\r\n    let methods: any[] = []\r\n    node.ports?.forEach((method: any) => {\r\n        methods.push({ name: method.label, visibility: 'public' })\r\n    });\r\n    node.methods?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    node.ins?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    node.outs?.forEach((method: any) => {\r\n        methods.push({ name: method, visibility: 'public' })\r\n    });\r\n    return methods\r\n}\r\nexport function processDynamic(node: any, index: number, hasSupportNodes = true, badMethod: any = null) {\r\n    let nodes: any[] = []\r\n    let links: any[] = []\r\n\r\n    nodes.push({ key: index + controllerDelta, name: 'MicroController' })\r\n    nodes.push({\r\n        key: index,\r\n        name: node.name,\r\n    })\r\n    if (badMethod) {\r\n        links.push({\r\n            key: index + methodDelta,\r\n            from: index + controllerDelta,\r\n            to: index, text: badMethod.name,\r\n            relationship: \"state\"\r\n        })\r\n    } else {\r\n        getGoMethods(node).forEach((method, methodIndex) => {\r\n            links.push({\r\n                key: index + (methodIndex + 1) * methodDelta,\r\n                from: index + controllerDelta,\r\n                to: index, text: method.name,\r\n                relationship: \"state\"\r\n            })\r\n        });\r\n    }\r\n\r\n    // if (hasSupportNodes) {\r\n    //     nodes.push({ key: index + startDelta, category: \"Start\" })\r\n    //     links.push({\r\n    //         key: index + controllerDelta,\r\n    //         from: index + startDelta,\r\n    //         to: index + controllerDelta,\r\n    //         relationship: \"state\"\r\n    //     })\r\n    //     nodes.push({ key: index + endDelta, category: \"End\" })\r\n    //     links.push({\r\n    //         key: index + endDelta,\r\n    //         from: index,\r\n    //         to: index + endDelta,\r\n    //         relationship: \"state\"\r\n    //     })\r\n    // }\r\n\r\n    return { nodes, links }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GoClass from '../GoClass';\r\nimport { getGoMethods, getGoProperties } from '../goBuilder';\r\n\r\nexport interface TrayItemWidgetProps {\r\n\tnode: any;\r\n}\r\n\r\nnamespace S {\r\n\texport const Tray = styled.div<{ color: string }>`\r\n\t\tcolor: white;\r\n\t\tfont-family: Helvetica, Arial;\r\n\t\tfont-size:0.6em;\r\n\t\tpadding: 2px 0px;\r\n\t\tmargin:\t 5px 10px ;\r\n\t\tborder: solid 1px ${(p) => p.color};\r\n\t\tborder-radius: 100px;\r\n\t\tmargin-bottom: 2px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: rgb(20, 20, 20);\r\n\t`;\r\n}\r\n\r\nexport class TrayItemWidget extends React.Component<TrayItemWidgetProps> {\r\n\trender() {\r\n\t\tconst node = {\r\n\t\t\tkey: 0,\r\n\t\t\tname: this.props.node.name,\r\n\t\t\tproperties: getGoProperties(this.props.node),\r\n\t\t\tmethods: getGoMethods(this.props.node),\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<S.Tray\r\n\t\t\t\tcolor={this.props.node.color || 'red'}\r\n\t\t\t\tdraggable={true}\r\n\t\t\t\tonDragStart={(event) => {\r\n\t\t\t\t\tevent.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.node));\r\n\t\t\t\t\tevent.dataTransfer.setDragImage(new Image(), 10, 10);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"tray-item\">\r\n\r\n\t\t\t\t{this.props.node.name}\r\n\r\n\t\t\t\t<a data-tip data-for={'tip-' + this.props.node.name} style={{ float: 'right', marginRight: '6px' }} >\r\n\t\t\t\t\t<OpenInNewIcon style={{ fontSize: '1rem' }} />\r\n\t\t\t\t</a>\r\n\t\t\t\t<ReactTooltip\r\n\t\t\t\t\tclassName=\"interactableTooltip\"\r\n\t\t\t\t\tid={'tip-' + this.props.node.name}\r\n\t\t\t\t\ttype='light' place=\"right\"\r\n\t\t\t\t\tdelayHide={500}\r\n\t\t\t\t\teffect=\"solid\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.node.extras.description ?\r\n\t\t\t\t\t\t<div className='miniGoAndDescriptionHolder'>\r\n\t\t\t\t\t\t\t<div className='separator'>\r\n\r\n\t\t\t\t\t\t\t\t<GoClass linkdata={[]} nodedata={[node]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className='linkHolder'>\r\n\t\t\t\t\t\t\t\t\t<a href={this.props.node.extras.link} target=\"_blank\" rel=\"noopener noreferrer\">Documentation</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='descriptionHolder'>\r\n\t\t\t\t\t\t\t\t{this.props.node.extras.description}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <div className='miniGoHolder'>\r\n\t\t\t\t\t\t\t<GoClass\r\n\t\t\t\t\t\t\t\tlinkdata={[]} nodedata={[node]} />\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</ReactTooltip>\r\n\t\t\t</S.Tray>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css, Global } from '@emotion/react';\r\n\r\nexport interface MyCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nnamespace S {\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\t\theight: 100%;\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\tdisplay: flex;\r\n\r\n\t\t> * {\r\n\t\t\theight: 100%;\r\n\t\t\tmin-height: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\texport const Expand = css`\r\n\t\thtml,\r\n\t\tbody,\r\n\t\t#root {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport class MyCanvasWidget extends React.Component<MyCanvasWidgetProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Global styles={S.Expand} />\r\n\t\t\t\t<S.Container\r\n\t\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</S.Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\r\nimport { PointModel } from '@projectstorm/react-diagrams-core';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { RightAngleLinkFactory } from '@projectstorm/react-diagrams';\r\n\r\nexport class MyRightAngleLinkModel extends DefaultLinkModel {\r\n\tlastHoverIndexOfPath: number;\r\n\tprivate _lastPathXdirection: boolean;\r\n\tprivate _firstPathXdirection: boolean;\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: RightAngleLinkFactory.NAME,\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.lastHoverIndexOfPath = 0;\r\n\t\tthis._lastPathXdirection = false;\r\n\t\tthis._firstPathXdirection = false;\r\n\t}\r\n\r\n\tsetFirstAndLastPathsDirection() {\r\n\t\tlet points = this.getPoints();\r\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\r\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\r\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\r\n\t\t\tif (i - 1 === 0) {\r\n\t\t\t\tthis._firstPathXdirection = dx > dy;\r\n\t\t\t} else {\r\n\t\t\t\tthis._lastPathXdirection = dx > dy;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// @ts-ignore\r\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\r\n\t\t// @ts-ignore\r\n\t\tsuper.addPoint(pointModel, index);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t\treturn pointModel;\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.setFirstAndLastPathsDirection();\r\n\t}\r\n\r\n\tsetManuallyFirstAndLastPathsDirection(first: boolean, last: boolean) {\r\n\t\tthis._firstPathXdirection = first;\r\n\t\tthis._lastPathXdirection = last;\r\n\t}\r\n\r\n\tgetLastPathXdirection(): boolean {\r\n\t\treturn this._lastPathXdirection;\r\n\t}\r\n\tgetFirstPathXdirection(): boolean {\r\n\t\treturn this._firstPathXdirection;\r\n\t}\r\n\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}","import {\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { MyRightAngleLinkModel } from './MyRightAngleLinkModel';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nexport interface MyPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n\thasHiddenLabel?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: MyPortModelOptions;\r\n}\r\n\r\nexport class MyPortModel extends PortModel<DefaultPortModelGenerics> {\r\n\textras: any;\r\n\tconstructor(options: MyPortModelOptions) {\r\n\t\tsuper({\r\n\t\t\tin: options.in,\r\n\t\t\tname: options.name,\r\n\t\t\tlabel: options.label || options.name,\r\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\r\n\t\t\ttype: 'default',\r\n\t\t\textras: { hasHiddenLabel: options.hasHiddenLabel }\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.extras = event.data.extras;\r\n\t\tthis.options.in = event.data.in;\r\n\t\tthis.options.label = event.data.label;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tin: this.options.in,\r\n\t\t\tlabel: this.options.label,\r\n\t\t\textras: this.options.extras,\r\n\t\t};\r\n\t}\r\n\r\n\tcanLinkToPort(port: PortModel): boolean {\r\n\t\tconsole.log('checking if can link', port)\r\n\t\treturn port.getOptions().id !== this.getOptions().id\r\n\t}\r\n\tcreateLinkModel(): MyRightAngleLinkModel {\r\n\t\tfunction hsl2rgb(h: any, s: any, l: any) {\r\n\t\t\tlet a = s * Math.min(l, 1 - l);\r\n\t\t\tlet f = (n: any, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n\t\t\treturn [f(0), f(8), f(4)];\r\n\t\t}\r\n\t\tlet link = new MyRightAngleLinkModel()\r\n\t\tlink.setWidth(5)\r\n\t\tlink.setColor('rgb(' + hsl2rgb(Math.random() * 360, 100, 100) +\r\n\t\t\t')')\r\n\t\treturn link\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyEditableNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    portsIn: MyPortModel[] = [];\r\n    portsOut: MyPortModel[] = [];\r\n    extras: Object;\r\n    selectableOptions: string[];\r\n    constructor(data: any) {\r\n        super({\r\n            type: 'MyEditable',\r\n            name: data.name,\r\n            color: data.color,\r\n        });\r\n\r\n        data.extras.returnType = data.extras.returnType || 'byte'\r\n        data.extras.value = data.extras.value || 'value'\r\n\r\n        this.extras = data.extras;\r\n\r\n        data.methods?.forEach((biPort: string) => {\r\n            this.addInPort(biPort)\r\n            this.addOutPort(biPort + ' ', true, true)\r\n        });\r\n        data.ins?.forEach((inPort: string) => {\r\n            this.addInPort(inPort)\r\n        });\r\n        data.outs?.forEach((outPort: string) => {\r\n            this.addOutPort(outPort)\r\n        });\r\n        this.selectableOptions = data.extras.selectableOptions || false;\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n    //todo add changeport?\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(name: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: name,\r\n            label: name,\r\n            alignment: PortModelAlignment.LEFT,\r\n            hasHiddenLabel: false\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n\r\n    renamePort(oldName: string, newName: string): void {\r\n        const portInIndex = this.portsIn.findIndex(p => p.getOptions().name === oldName)\r\n\r\n        this.portsIn[portInIndex].getOptions().name = newName\r\n        this.portsIn[portInIndex].getOptions().label = newName\r\n\r\n        this.ports[newName] = this.ports[oldName];\r\n        delete this.ports[oldName];\r\n    }\r\n\r\n\r\n\r\n\r\n    addOutPort(name: string, after = true, hasHiddenLabel = false): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: name,\r\n            label: hasHiddenLabel ? name + ' ' : name,\r\n            alignment: PortModelAlignment.RIGHT,\r\n            hasHiddenLabel: hasHiddenLabel\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n        this.selectableOptions = event.data.selectableOptions\r\n    }\r\n\r\n    serialize(): any {\r\n        return {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras,\r\n            selectableOptions: this.selectableOptions\r\n        }\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","/* eslint-disable */\r\nexport default [\r\n    {\r\n        name: 'Arduino Uno',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 14,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()',\r\n        ]\r\n    }, {\r\n        name: 'Arduino Nano',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 22,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Mega',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 16,\r\n            digitalPorts: 54,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Leonardo',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 12,\r\n            digitalPorts: 20,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Flora',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 4,\r\n            digitalPorts: 8,\r\n        },\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Port',\r\n        color: 'pink',\r\n        extras: {\r\n            value: '0',\r\n            group: 'value',\r\n            type: 'port',\r\n            hasUsages: true,\r\n            hasPortType: true,\r\n            portType: 'Digital',\r\n            returnType: 'int',\r\n            selectableOptions: Array.from(Array(100).keys()).map(x => x.toString()),\r\n            hasValue: true,\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Parameter(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            group: 'value',\r\n            type: 'parameter',\r\n            hasUsages: true,\r\n            hasReturnType: true,\r\n            value: '0',\r\n            hasValue: true,\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            group: 'value',\r\n            type: 'variable',\r\n            name: 'var',\r\n            hasUsages: true,\r\n            hasReturnType: true,\r\n            hasUsername: true,\r\n            hasValue: true,\r\n        },\r\n        methods: ['void declaration'],\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Constant(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            group: 'value',\r\n            type: 'constant',\r\n            name: 'con',\r\n            hasUsages: true,\r\n            hasReturnType: true,\r\n            hasUsername: true,\r\n            hasValue: true,\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Function',\r\n        extras: {\r\n            type: 'logic',\r\n            returnType: 'void',\r\n            value: 'foo',\r\n            hasUsages: true,\r\n            // hasReturnType: true,\r\n            hasValue: true,\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'body',\r\n            // 'out',\r\n        ],\r\n        ins: [\r\n            'declare',\r\n            'in',\r\n        ]\r\n    }, {\r\n        name: 'Condition',\r\n        extras: {\r\n            type: 'logic',\r\n            selectableOptions: ['==', '!=', '<', '>', '<=', '>=', '<=>'],\r\n            value: '==',\r\n            hasValue: true\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'body',\r\n            'else'\r\n        ],\r\n        ins: [\r\n            'void set(T xValue)',\r\n            'void set(T yValue)'\r\n        ]\r\n    },\r\n    {\r\n        name: 'While Loop',\r\n        extras: {\r\n            type: 'logic',\r\n            selectableOptions: ['==', '!=', '<', '>', '<=', '>=', '<=>'],\r\n            value: '==',\r\n            hasValue: true\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'body',\r\n            'else'\r\n        ],\r\n        ins: [\r\n            'startValue',\r\n            'stopValue'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void digitalWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'int digitalRead(int pin)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Analog I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void analoglWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'void analogReference(int type)',\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'Time',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'void delayMicroseconds(int us)',\r\n            'unsigned long micros()',\r\n            'unsigned long millis()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Math',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void delay(int ms)',\r\n            'int abs(int x)',\r\n            'int constrain(int x, int a, int b)',\r\n            'int map(int value, int fromLow, int fromHigh, int toLow, int toHigh)',\r\n            'any? max(any x, any y)',\r\n            'any? min(any x, any y)',\r\n            'double pow(float base, float exponent)',\r\n            'double sq(any x)',\r\n            'double sqrt(any x)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Trigonometry',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'double cos(float rad)',\r\n            'double sin(float rad)',\r\n            'double tan(float rad)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Random Numbers',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void randomSeed(long seed)',\r\n            'long random(? max)',\r\n            'long random(? min, ? max)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Zero, Due & MKR Family',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void analogReadResolution(bits bits)',\r\n            'void analogWriteResolution(bits bits)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Advanced I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'void noTone(int pin)',\r\n            'unsigned long pulseIn(int pin, int value)',\r\n            'unsigned long pulseIn(int pin, int value,unsigned long timeout)',\r\n            'unsigned long pulseInLong(int pin, int value)',\r\n            'unsigned long pulseInLong(int pin, int value,unsigned long timeout)',\r\n            'byte shiftIn(int dataPin, int clockPin, int bitOrder)',\r\n            'void shiftOut(int dataPin, int clockPin, int bitOrder, byte value)',\r\n            'void tone(int pin, unsigned int frequency)',\r\n            'void tone(int pin, unsigned int frequency, unsigned long duration)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Serial',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        methods: [\r\n            'int available()',\r\n            'int availableForWrite()',\r\n            'void begin(long speed)',\r\n            'void end()',\r\n            'bool find(char target)',\r\n            'bool findUntil(char target)',\r\n            'void flush()',\r\n            'float parseFloat()',\r\n            'int parseInt()',\r\n            'int peek()',\r\n            'size_t print(int val)',\r\n            'size_t println(int val)',\r\n            'int read()',\r\n            'size_t readBytes(char buffer, int length)',\r\n            'size_t readBytesUntil(char character, char buffer, int length)',\r\n            'String readString()',\r\n            'String readStringUntil()',\r\n            'void setTimeout(long time)',\r\n            'size_t write(byte val)',\r\n            'void serialEvent()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'true',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><code>true</code> is often said to be defined as 1, which is correct, but true has a wider definition. Any integer which is non-zero is true, in a Boolean sense. So -1, 2 and -200 are all defined as true, too, in a Boolean sense.</div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'false',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><code>false</code> is the easier of the two to define. false is defined as 0 (zero).</div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'HIGH',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div>\r\n                <div>\r\n                    <p>The meaning of <code>HIGH</code> (in reference to a pin) is somewhat different depending on whether a pin is set to an <code>INPUT</code> or <code>OUTPUT</code>. When a pin is configured as an <code>INPUT</code> with <code><a>pinMode()</a></code>, and read with <code><a>digitalRead()</a></code>, the Arduino (ATmega) will report <code>HIGH</code> if:</p>\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li>\r\n                            <p>a voltage greater than 3.0V is present at the pin (5V boards)</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>a voltage greater than 2.0V is present at the pin (3.3V boards)</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <p>A pin may also be configured as an INPUT with <a><code>pinMode()</code></a>, and subsequently made HIGH with <code><a>digitalWrite()</a></code>. This will enable the internal 20K pullup resistors, which will <em>pull up</em> the input pin to a <code>HIGH</code> reading unless it is pulled <code>LOW</code> by external circuitry. This can be done alternatively by passing <code>INPUT_PULLUP</code> as argument to the <a><code>pinMode()</code></a> function, as explained in more detail in the section \"Defining Digital Pins modes: INPUT, INPUT_PULLUP, and OUTPUT\" further below.</p>\r\n                </div>\r\n                <div>\r\n                    <p>When a pin is configured to OUTPUT with <a><code>pinMode()</code></a>, and set to <code>HIGH</code> with <a><code>digitalWrite()</code></a>, the pin is at:</p>\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li>\r\n                            <p>5 volts (5V boards)</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>3.3 volts (3.3V boards)</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <p>In this state it can source current, e.g. light an LED that is connected through a series resistor to ground.</p>\r\n                </div></div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'LOW',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><div>\r\n                <p>The meaning of <code>LOW</code> also has a different meaning depending on whether a pin is set to <code>INPUT</code> or <code>OUTPUT</code>. When a pin is configured as an <code>INPUT</code> with <a><code>pinMode()</code></a>, and read with <a><code>digitalRead()</code></a>, the Arduino (ATmega) will report LOW if:</p>\r\n            </div>\r\n                <div>\r\n                    <ul>\r\n                        <li>\r\n                            <p>a voltage less than 1.5V is present at the pin (5V boards)</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>a voltage less than 1.0V (Approx) is present at the pin (3.3V boards)</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <p>When a pin is configured to <code>OUTPUT</code> with <a><code>pinMode()</code></a>, and set to <code>LOW</code> with <a><code>digitalWrite()</code></a>, the pin is at 0 volts (both 5V and 3.3V boards). In this state it can sink current, e.g. light an LED that is connected through a series resistor to +5 volts (or +3.3 volts).</p>\r\n                </div></div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'INPUT',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><div>\r\n                <p>Arduino (ATmega) pins configured as <code>INPUT</code> with <a><code>pinMode()</code></a> are said to be in a <em>high-impedance</em> state. Pins configured as <code>INPUT</code> make extremely small demands on the circuit that they are sampling, equivalent to a series resistor of 100 Megohms in front of the pin. This makes them useful for reading a sensor.</p>\r\n            </div>\r\n                <div>\r\n                    <p>If you have your pin configured as an <code>INPUT</code>, and are reading a switch, when the switch is in the open state the input pin will be \"floating\", resulting in unpredictable results. In order to assure a proper reading when the switch is open, a pull-up or pull-down resistor must be used. The purpose of this resistor is to pull the pin to a known state when the switch is open. A 10 K ohm resistor is usually chosen, as it is a low enough value to reliably prevent a floating input, and at the same time a high enough value to not draw too much current when the switch is closed. See the <a>Digital Read Serial</a> tutorial for more information.</p>\r\n                </div>\r\n                <div>\r\n                    <p>If a pull-down resistor is used, the input pin will be <code>LOW</code> when the switch is open and <code>HIGH</code> when the switch is closed.</p>\r\n                </div>\r\n                <div>\r\n                    <p>If a pull-up resistor is used, the input pin will be <code>HIGH</code> when the switch is open and <code>LOW</code> when the switch is closed.</p>\r\n                </div></div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'INPUT_PULLUP',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><div>\r\n                <p>The ATmega microcontroller on the Arduino has internal pull-up resistors (resistors that connect to power internally) that you can access. If you prefer to use these instead of external pull-up resistors, you can use the <code>INPUT_PULLUP</code> argument in <a><code>pinMode()</code></a>.</p>\r\n            </div>\r\n                <div>\r\n                    <p>See the <a>Input Pullup Serial</a> tutorial for an example of this in use.</p>\r\n                </div>\r\n                <div>\r\n                    <p>Pins configured as inputs with either <code>INPUT</code> or <code>INPUT_PULLUP</code> can be damaged or destroyed if they are connected to voltages below ground (negative voltages) or above the positive power rail (5V or 3V).</p>\r\n                </div></div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'OUTPUT',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div><div>\r\n                <p>Pins configured as <code>OUTPUT</code> with <a><code>pinMode()</code></a> are said to be in a <em>low-impedance</em> state. This means that they can provide a substantial amount of current to other circuits. ATmega pins can source (provide current) or sink (absorb current) up to 40 mA (milliamps) of current to other devices/circuits. This makes them useful for powering LEDs because LEDs typically use less than 40 mA. Loads greater than 40 mA (e.g. motors) will require a transistor or other interface circuitry.</p>\r\n            </div>\r\n                <div>\r\n                    <p>Pins configured as outputs can be damaged or destroyed if they are connected to either the ground or positive power rails.</p>\r\n                </div></div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'LED_BUILTIN',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant',\r\n            returnType: 'int',\r\n            hasUsages: true,\r\n            link: 'https://www.arduino.cc/reference/en/language/variables/constants/constants/',\r\n            description: <div>\r\n                Most Arduino boards have a pin connected to an on-board LED in series with a resistor. The constant <code>LED_BUILTIN</code> is the number of the pin to which the on-board LED is connected. Most boards have this LED connected to digital pin 13.</div>\r\n        },\r\n        ins: [\r\n            'in',\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'TwoWire Interface',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Wire.h'\r\n        },\r\n        methods: [\r\n            'void begin()',\r\n            'void beginTransmission()',\r\n            'void setClock()',\r\n            'void onReceive()',\r\n            'void onRequest()',\r\n            'byte requestFrom()',\r\n            'byte endTransmission()',\r\n            'byte write()',\r\n            'byte available()',\r\n            'byte read()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'PWM Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Adafruit_PWMServoDriver.h'\r\n        },\r\n        methods: [\r\n            'void begin(uint8_t prescale=0)',\r\n            'void sleep()',\r\n            'void wakeup()',\r\n            'void setExtClk(uint8_t prescale)',\r\n            'void setPWMFreq(float freq)',\r\n            'void setOutputMode(bool totempole)',\r\n            'void setPWM(uint8_t num, uint16_t on, uint16_t off)',\r\n            'void setPin(uint8_t num, uint16_t val, bool invert=false)',\r\n            'void writeMicroseconds(uint8_t num, uint16_t Microseconds)',\r\n            'void setOscillatorFrequency(uint32_t freq)',\r\n            'uint8_t getPWM(uint8_t num)',\r\n            'uint8_t readPrescale()',\r\n            'uint32_t getOscillatorFrequency()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Servo.h',\r\n            link: 'arduino.cc/reference/en/libraries/servo/'\r\n        },\r\n        methods: [\r\n            'uint8_t attach(int pin)',\r\n            'uint8_t attach(int pin, int min, int max)',\r\n            'void detach()',\r\n            'void write(int value)',\r\n            'void writeMicroseconds(int value)',\r\n            'int read()',\r\n            'int readMicroseconds()',\r\n            'bool attached()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Stepper',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Stepper.h'\r\n        },\r\n        methods: [\r\n            'Stepper(int, int, int)',\r\n            'Stepper(int, int, int, int, int)',\r\n            'Stepper(int, int, int, int, int, int)',\r\n            'void setSpeed(long whatSpeed)',\r\n            'void step(int number_of_steps)',\r\n            'int version()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Adafruit_BMP085',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Adafruit_BMP085.h',\r\n            link: 'https://randomnerdtutorials.com/guide-for-bmp180-barometric-sensor-with-arduino/',\r\n            description: 'Barometric pressure and temperature sensor, by Adafruit'\r\n        },\r\n        methods: [\r\n            'bool begin(uint8_t mode = BMP085_ULTRAHIGHRES, TwoWire *wire = &Wire)',\r\n            'float readTemperature()',\r\n            'int32_t readPressure',\r\n            'int32_t readSealevelPressure(float altitude_meters = 0)',\r\n            'float readAltitude(float sealevelPressure = 101325)',\r\n            'int16_t readRawTemperature()',\r\n            'uint32_t readRawPressure()',\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        name: 'SoftwareWire',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Wire.h',\r\n            link: 'https://www.arduino.cc/reference/en/libraries/softwarewire/',\r\n            description: 'Creates a software I2C/TWI bus on every pins.'\r\n        },\r\n        methods: [\r\n            'SoftwareWire(uint8_t sdaPin, uint8_t sclPin, boolean pullups = true, boolean detectClockStretch = true)',\r\n            'void end()',\r\n            'void begin()',\r\n            'void setClock(uint32_t clock)',\r\n            'void beginTransmission(uint8_t address)',\r\n            'void beginTransmission(int address)',\r\n            'uint8_t endTransmission(boolean sendStop = true)',\r\n            'uint8_t requestFrom(uint8_t address, uint8_t size, boolean sendStop = true)',\r\n            'uint8_t requestFrom(int address, int size, boolean sendStop = true)',\r\n            'size_t write(uint8_t data)',\r\n            'size_t write(const uint8_t *data, size_t quantity)',\r\n            'int available(void)',\r\n            'int read(void)',\r\n            'int readBytes(uint8_t* buf, uint8_t size)',\r\n            'int readBytes(char * buf, uint8_t size)',\r\n            'int readBytes(char * buf, int size)',\r\n            'int peek(void)',\r\n            'void setTimeout(long timeout)',\r\n            'void printStatus(Print& Ser)'\r\n        ]\r\n    },\r\n\r\n\r\n\r\n]","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport Prism from \"prismjs\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport \"./prism.css\";\r\n// import PrismEdit from \"./PrismEdit\";\r\nimport Xarrow from \"react-xarrows\";\r\n\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport GoClass from \"./GoClass\";\r\n\r\nimport { processDynamic } from \"../components/goBuilder\";\r\n\r\nconst returnTypes = [\r\n  \"byte\",\r\n  \"unsigned int\",\r\n  \"unsigned long\",\r\n  \"int\",\r\n  \"long\",\r\n  \"bool\",\r\n  \"float\",\r\n  \"double\",\r\n  \"char\",\r\n];\r\nconst ordinals = [\r\n  \"first\",\r\n  \"second\",\r\n  \"third\",\r\n  \"fourth\",\r\n  \"fifth\",\r\n  \"sixth\",\r\n  \"seventh\",\r\n  \"eighth\",\r\n  \"ninth\",\r\n  \"tenth\",\r\n  \"eleventh\",\r\n];\r\n\r\nconst paramTypes = [\r\n  \"variable\",\r\n  \"constant\",\r\n  \"parameter\",\r\n  \"port\",\r\n  \"built-in-constant\",\r\n];\r\n\r\nfunction generateCode(model: any): { code: string; problems: any[] } {\r\n  // #region Reviewed Functions\r\n  function addConstantDeclarations(constants: any) {\r\n    if (constants.length > 0) {\r\n      add(\"\");\r\n      add(\"// Constants\");\r\n      constants.forEach((constant: any) => {\r\n        let params = constant.extras.value.split(\",\");\r\n        const isArray = params.length > 1;\r\n        const count = isArray ? \"[\" + params.length + \"]\" : \"\";\r\n        params = isArray ? \"{\" + params.map((x: any) => x) + \"}\" : params;\r\n        add(\r\n          `#define ${constant.extras.returnType} ${constant.extras.name}${count} = ${params};`\r\n        );\r\n      });\r\n    }\r\n  }\r\n  function addVariableDeclarations(variables: any) {\r\n    if (variables.length > 0) {\r\n      add(\"\");\r\n      add(\"// Variables\");\r\n      variables.forEach((variable: any) => {\r\n        let params = variable.extras.value.split(\",\");\r\n        const isArray = params.length > 1;\r\n        const count = isArray ? \"[\" + params.length + \"]\" : \"\";\r\n        params = isArray ? \"{\" + params.map((x: any) => x) + \"}\" : params;\r\n\r\n        const equals = params[0] !== \"\" ? \"=\" : \"\";\r\n        add(\r\n          `${variable.extras.returnType} ${variable.extras.name}${count} ${equals} ${params}; `\r\n        );\r\n      });\r\n    }\r\n  }\r\n  function addFunctionDeclarations(functions: any) {\r\n    if (functions.length > 0) {\r\n      add(\"// Functions\");\r\n      functions.forEach((logic: any) => {\r\n        if (getPort(logic.id, logic.portsInOrder[0]).links.length === 0) {\r\n          declareFunction(logic);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  function declareFunction(logic: any) {\r\n    add(`${logic.extras.returnType} ${logic.extras.value}(){`);\r\n    const callPort = logic.ports.find((x: any) => x.alignment === \"right\");\r\n    callPort.links.forEach((l: any) => {\r\n      processLink(l);\r\n    });\r\n    add(\"}\");\r\n  }\r\n\r\n  function addLibraries() {\r\n    const libraries: any[] = [\r\n      ...new Set(components.map((component) => component.extras.library)),\r\n    ];\r\n\r\n    if (libraries.length > 0) {\r\n      add(\"\");\r\n      add(\"// Libraries\");\r\n      libraries.forEach((lib: any) => {\r\n        add(\"#include <\" + lib + \">\");\r\n      });\r\n      add(\"\");\r\n      add(\"// Objects\");\r\n      libraries.forEach((lib: any) => {\r\n        components.forEach((comp) => {\r\n          if (comp.extras.library === lib) add(comp.name + \" \" + comp.instance);\r\n        });\r\n      });\r\n    }\r\n  }\r\n  function formattedParameters(params: any) {\r\n    return params.map((par: any) => {\r\n      switch (par.extras.type) {\r\n        case \"parameter\":\r\n        case \"port\":\r\n          return par.extras.value;\r\n        case \"constant\":\r\n        case \"variable\":\r\n          return par.extras.name;\r\n        case \"built-in-constant\":\r\n          return par.name;\r\n        default:\r\n          return \"error on node type\";\r\n      }\r\n    });\r\n  }\r\n  function indentCode(original: string) {\r\n    let code: any[] = [];\r\n    let level = 0;\r\n    let tab = \"    \";\r\n    original.split(\"\\n\").forEach((line) => {\r\n      if (line.includes(\"}\")) {\r\n        level--;\r\n      }\r\n      code.push(tab.repeat(Math.max(level, 0)) + line);\r\n      if (line.includes(\"{\")) {\r\n        level++;\r\n      }\r\n    });\r\n    return code.join(\"\\n\");\r\n  }\r\n  function warnAboutNodesWithoutLinks(nodes: any) {\r\n    nodes.forEach((node: any) => {\r\n      let hasLink = false;\r\n      node.ports.forEach((port: any) => {\r\n        if (port.links.length > 0) {\r\n          hasLink = true;\r\n        }\r\n      });\r\n      if (!hasLink) {\r\n        warn(\"This component has no links\", node);\r\n      }\r\n    });\r\n  }\r\n  function warnAboutPortUsage() {\r\n    usedDigital.forEach((port) => {\r\n      if (port.extras.value >= controller?.extras.digitalPorts) {\r\n        warn(\r\n          `This ${port.name} does not exist on this micro - controller`,\r\n          port\r\n        );\r\n      }\r\n    });\r\n    usedAnalog.forEach((port) => {\r\n      if (port.extras.value >= controller?.extras.analogPorts) {\r\n        warn(\r\n          `This ${port.name} does not exist on this micro - controller`,\r\n          port\r\n        );\r\n      }\r\n    });\r\n  }\r\n  function warnAboutMultipleUsePorts(nodes: any) {\r\n    nodes\r\n      .filter((node: any) => paramTypes.includes(node.extras.type))\r\n      .forEach((node: any) => {\r\n        node.ports.forEach((port: any) => {\r\n          console.log(\"checking \", port);\r\n          if (port.links.length > 1) {\r\n            warn(\r\n              `This ${node.name.toLowerCase()} has more than one link in the same ${\r\n                port.label\r\n              } port.`,\r\n              node\r\n            );\r\n          } else {\r\n            if (port.name !== \"in\" && port.links.length === 0) {\r\n              warn(`This ${node.name.toLowerCase()} is not being used.`, node);\r\n            }\r\n          }\r\n        });\r\n      });\r\n  }\r\n  function warnAboutLooseLinks(links: any) {\r\n    links.forEach((link: any) => {\r\n      const fromPort = getPort(link.source, link.sourcePort);\r\n      const fromNode = getNode(fromPort?.parentNode);\r\n      const toPort = getPort(link.target, link.targetPort);\r\n      if (!toPort) {\r\n        warn(\"Loose link\", fromNode);\r\n      }\r\n    });\r\n  }\r\n  function warnAboutExpectedVersusReceived(\r\n    port: any,\r\n    node: any,\r\n    expected: any[],\r\n    received: any[]\r\n  ) {\r\n    const expMin = expected.filter((e: any) => !e.includes(\"=\")).length;\r\n    const expMax = expected.length;\r\n\r\n    if (received.length < expMin || received.length > expMax) {\r\n      const count = expMin === expMax ? expMin : `${expMin} to ${expMax}`;\r\n      warn(\r\n        `The function call \"${port.name}\" is receiving ${received.length} parameters instead of the expected ${count}`,\r\n        node,\r\n        port\r\n      );\r\n      return \"error\";\r\n    }\r\n    return \"ok\";\r\n  }\r\n\r\n  function getLinksFromModel(model: any) {\r\n    const temp: any[] = [];\r\n    Object.entries(model.layers[0].models).forEach((link: any) => {\r\n      temp.push(link[1]);\r\n    });\r\n    return temp;\r\n  }\r\n  function getNodesFromModel(model: any) {\r\n    const temp: any[] = [];\r\n    Object.entries(model.layers[1].models).forEach((node: any) => {\r\n      temp.push(node[1]);\r\n    });\r\n    return temp;\r\n  }\r\n  function getComponentsFromNodes(nodes: any) {\r\n    let temp: any[] = [];\r\n    nodes\r\n      .filter((node: any) => node.extras?.type === \"component\")\r\n      .forEach((node: any) => {\r\n        node.instance =\r\n          node.name.toLowerCase().replace(\" \", \"\") +\r\n          temp.filter((t) => t.extras?.library === node.extras?.library).length;\r\n        temp.push(node);\r\n      });\r\n    return temp;\r\n  }\r\n  function warnAboutNumberOfControllers() {\r\n    const controllers: any[] = nodes.filter(\r\n      (node) => node.extras?.type === \"controller\"\r\n    );\r\n    if (controllers.length === 0) {\r\n      warn(\"No micro-controller\");\r\n    }\r\n    if (controllers.length > 1) {\r\n      controllers.forEach((controller) => {\r\n        warn(\"More than one micro-controller\", controller);\r\n      });\r\n    }\r\n  }\r\n  function add(...message: string[]) {\r\n    message.forEach((m) => {\r\n      code += m;\r\n    });\r\n    code += \"\\n\";\r\n    return code;\r\n  }\r\n  function addHeaderComments() {\r\n    add(\"/* Code generated for \", controller?.name);\r\n    const uniqueDigitals = [...new Set(usedDigital.map((u) => u.extras.value))];\r\n    const uniqueAnalogs = [...new Set(usedAnalog.map((u) => u.extras.value))];\r\n\r\n    add(\r\n      `Analog ports ${uniqueAnalogs.length} /${\r\n        controller?.extras.analogPorts\r\n      } ${\r\n        usedAnalog.length > 0 ? `(${uniqueAnalogs.map((port) => port)})` : \"\"\r\n      } `\r\n    );\r\n    add(\r\n      `Digital ports ${uniqueDigitals.length}/${\r\n        controller?.extras.digitalPorts\r\n      } ${\r\n        usedDigital.length > 0 ? `(${uniqueDigitals.map((port) => port)})` : \"\"\r\n      }`,\r\n      \"    */\"\r\n    );\r\n  }\r\n  function getLink(linkID: string) {\r\n    return links.find((l) => l.id === linkID);\r\n  }\r\n  function getPort(nodeID: string, portID: string) {\r\n    try {\r\n      return nodes\r\n        .find((n: any) => n.id === nodeID)\r\n        .ports.find((p: any) => p.id === portID);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * Only to be used for paramTypes !\r\n   */\r\n  function getOutPort(inPort: any) {\r\n    try {\r\n      const node = getNode(inPort.parentNode);\r\n      const portPosition = node.portsInOrder.indexOf(inPort.id);\r\n      const outPortId = node.portsOutOrder[portPosition];\r\n      const outPort = node.ports.find((p: { id: any }) => p.id === outPortId);\r\n      return outPort;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getNode(nodeID: string) {\r\n    return nodes.find((n: any) => n.id === nodeID);\r\n  }\r\n  function getParent(childNode: any) {\r\n    return nodes.find((n: any) => n.id === childNode.parentNode);\r\n  }\r\n  function warn(message: string, node: any = null, port: any = null) {\r\n    problems.push({ message, node, port });\r\n    return problems;\r\n  }\r\n  function addLifecycleMethods() {\r\n    add(\"\");\r\n    add(`// Micro-controller's Lifecycle`);\r\n    controller?.ports.forEach((port: any) => {\r\n      add(\"void \", port.label, \"{\");\r\n      port.links.forEach((l: any) => {\r\n        processLink(l);\r\n      });\r\n      add(\"}\\n\");\r\n    });\r\n  }\r\n  // #endregion\r\n\r\n  // #region Unreviewed Functions\r\n  function processLink(l: any) {\r\n    function callWithParameters(port: any, params: any) {\r\n      const node = getNode(port.parentNode);\r\n      console.log(\"callWithParmeters\", port, node, params);\r\n      if (node?.name === \"Function\") {\r\n        if (port.name === \"declare\") {\r\n          declareFunction(node);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const expected =\r\n        port.name\r\n          ?.split(\"(\")[1]\r\n          ?.split(\")\")[0]\r\n          ?.split(\",\")\r\n          ?.filter((x: any) => x !== \"\") || [];\r\n      const received: any[] = [];\r\n\r\n      params.forEach((p: any) => {\r\n        if (paramTypes.includes(p.extras.type)) {\r\n          received.push(\r\n            ...p.extras.value\r\n              .split(\",\")\r\n              .map((m: any) => p.extras.returnType + \" \" + m)\r\n          );\r\n        }\r\n      });\r\n\r\n      if (\r\n        warnAboutExpectedVersusReceived(port, node, expected, received) ===\r\n        \"error\"\r\n      )\r\n        return;\r\n\r\n      expected.forEach((ex: any, index: number) => {\r\n        const expectedType =\r\n          returnTypes.find((rt: any) => ex.trim().startsWith(rt)) ||\r\n          node.extras?.returnType;\r\n        const re = received[index];\r\n\r\n        if (ex.includes(\"=\") && !re) {\r\n          //uses default value\r\n        } else {\r\n          const receivedType = returnTypes.find((rt: any) => re.startsWith(rt));\r\n\r\n          if (expectedType !== receivedType) {\r\n            warn(\r\n              `The function call \"${port.name}\" expects its ${ordinals[index]} parameter to be of type \"${expectedType}\", received \"${receivedType}\" instead`,\r\n              node,\r\n              port\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      if (node?.instance) {\r\n        add(\r\n          node.instance +\r\n            \".\" +\r\n            port.name.substring(\r\n              port.name.indexOf(\" \") + 1,\r\n              port.name.indexOf(\"(\")\r\n            ) +\r\n            \"(\" +\r\n            formattedParameters(params) +\r\n            \")\" +\r\n            \";\"\r\n        );\r\n      } else if (fromNode?.instance) {\r\n        add(fromNode.instance + \".\" + fromPort.name + \"();\");\r\n      } else if (port.name.startsWith(\"void setValue\")) {\r\n        let variableParams = formattedParameters(params);\r\n\r\n        // variableParams = variableParams.split(',')\r\n        // console.log('adding', node.extras.name, variableParams)\r\n        add(node.extras.name + \" = \" + variableParams);\r\n      } else if (node.extras.type === \"built-in\") {\r\n        add(\r\n          port.name.substring(\r\n            port.name.indexOf(\" \") + 1,\r\n            port.name.indexOf(\"(\")\r\n          ) +\r\n            \"(\" +\r\n            formattedParameters(params) +\r\n            \")\" +\r\n            \";\"\r\n        );\r\n      } else if (node.extras.type === \"logic\") {\r\n        if (node.name === \"Function\") {\r\n          add(node.extras.value + \"()\");\r\n        } else if (node.name === \"Condition\") {\r\n          const xValue = getCoditionalValue(node, \"void set(T xValue)\");\r\n          const yValue = getCoditionalValue(node, \"void set(T yValue)\");\r\n\r\n          const outcomePort2 = getOutcome(node);\r\n          const toNode2 = getParent(outcomePort2);\r\n\r\n          const outcomePort3 = getOutcome(node, \"else\");\r\n          const toNode3 = getParent(outcomePort3);\r\n\r\n          add(\"if (\", xValue, \" \" + node.extras.value + \" \", yValue, \") {\");\r\n          if (toNode2) {\r\n            outcomePort2.links.forEach((l: any) => {\r\n              processLink(l);\r\n            });\r\n          } else {\r\n            add(\"/* Lacking code to be executed if conditional is true */\");\r\n          }\r\n          if (toNode3) {\r\n            add(\"} else {\");\r\n            outcomePort3.links.forEach((l: any) => {\r\n              processLink(l);\r\n            });\r\n            // callWithParameters(toNode3);\r\n          }\r\n          add(\"}\\n\");\r\n        } else {\r\n          console.log(\"almost confused\", node);\r\n          add(node.extras.value);\r\n        }\r\n      } else {\r\n        console.log(\"confusion at \", port, node, fromNode);\r\n        add(\"confusion\");\r\n        // warn('Loose connection', [fromNode]);\r\n      }\r\n      // try {\r\n      //     if (node.extras.type === 'constant') {\r\n      //         contents.push(node.extras.name);\r\n      //     } else {\r\n      //         contents.push(node.extras.value);\r\n      //     }\r\n      // } catch (error) {\r\n      //     console.log('error, no parameter?');\r\n      // }\r\n      // node.ports.forEach((port: any) => {\r\n      //     port.links.forEach((l: any) => {\r\n      //         const link = getLink(l);\r\n      //         const toPort = getPort(link.target, link.targetPort);\r\n      //         const toNode = getNode(toPort?.parentNode);\r\n      //         if (!toNode) {\r\n      //         } else if (toNode?.id === node?.id) { //skip as it is the previous link\r\n      //             if (toNode.instance) {\r\n      //                 add(toNode.instance + '.' + toPort.name.split(\"(\").shift() + '(' + contents + ');');\r\n      //             }\r\n      //         } else if (toNode?.extras?.type === 'built-in') {\r\n      //             add(toPort.name.split(\"(\").shift() + '(' + contents + ');');\r\n      //         } else if (!toNode?.instance) { //points to another variable/port\r\n      //             callWithParameters(toNode, ...extrass);\r\n      //         } else { //points to a class instance, we hope it is a method call\r\n      //             //todo: check for parameter type and numbers\r\n      //             add(toNode.instance + '.' + (toPort.name.split(\"(\").shift()) + '(' + contents + ');');\r\n      //         }\r\n      //     });\r\n      // });\r\n    }\r\n    function getCoditionalValue(conditionNode: any, portName: any): string {\r\n      try {\r\n        let linkID = conditionNode.ports.find((p: any) => p.name === portName)\r\n          .links[0];\r\n        let link = getLink(linkID);\r\n        let port = getPort(link.source, link.sourcePort);\r\n        let parent = getParent(port);\r\n\r\n        if (paramTypes.includes(parent.extras.type)) {\r\n          return parent.extras.value;\r\n        } else if ([\"component\"].includes(parent.extras.type)) {\r\n          return parent.instance + \".\" + port.name;\r\n        } else {\r\n          return add(\"/* Unknown extras.type */\");\r\n        }\r\n      } catch (error) {\r\n        return \"/* Lacking Value */\";\r\n      }\r\n    }\r\n    function getOutcome(conditionNode: any, ifThis = \"body\") {\r\n      try {\r\n        let linkID = conditionNode.ports.find((p: any) => p.name === ifThis)\r\n          .links[0];\r\n        let link = getLink(linkID);\r\n        return getPort(link.target, link.targetPort);\r\n      } catch (error) {\r\n        return { label: \"// Lacking Outcome\" };\r\n      }\r\n    }\r\n\r\n    const link = getLink(l);\r\n    if (!link) return;\r\n    const fromPort = getPort(link.source, link.sourcePort);\r\n    const fromNode = getNode(fromPort.parentNode);\r\n    const toPort = getPort(link.target, link.targetPort);\r\n    if (!toPort) return;\r\n\r\n    const params: any[] = [];\r\n\r\n    function resolveTarget(\r\n      toPort: any,\r\n      params: any[]\r\n    ): { toPort: any; params: any[] } {\r\n      const toNode = getNode(toPort.parentNode);\r\n\r\n      if (paramTypes.includes(toNode?.extras?.type)) {\r\n        params.push(toNode);\r\n\r\n        let nextFromPort = getOutPort(toPort);\r\n        if (!nextFromPort) return { toPort: undefined, params };\r\n        let nextLink = getLink(nextFromPort.links[0]);\r\n        if (!nextLink) return { toPort: undefined, params };\r\n        let nextToPort = getPort(nextLink.target, nextLink.targetPort);\r\n        if (!nextToPort) return { toPort: undefined, params };\r\n        let nextToNode = getNode(nextToPort.parentNode);\r\n\r\n        if (paramTypes.includes(nextToNode?.extras?.type)) {\r\n          return resolveTarget(nextToPort, params);\r\n        }\r\n        return { toPort: nextToPort, params };\r\n      }\r\n      return { toPort: toPort, params };\r\n    }\r\n\r\n    const target: any = resolveTarget(toPort, params);\r\n    if (target.toPort) callWithParameters(target.toPort, target.params);\r\n\r\n    // if (toNode?.extras?.type === 'built-in') {\r\n    //     add(toPort.name + '()');\r\n    // } else if (toNode?.name === \"Function\") {\r\n    //     add(toNode.extras.value, '(', ');');\r\n    // } else if (toNode?.name === \"Condition\") {\r\n\r\n    // }\r\n  }\r\n\r\n  // function oldRemoveTypes(name: string): string {\r\n  //     const firstSpace = name.indexOf(' ') + 1;\r\n  //     const openningRound = name.indexOf('(');\r\n  //     const closingRound = name.indexOf(')');\r\n\r\n  //     const functionName = name.substring(firstSpace, openningRound);\r\n  //     const params = name.substring(openningRound + 1, closingRound).split(',');\r\n  //     let result = functionName;\r\n  //     params.forEach(param => {\r\n  //         if (!param.includes('=')) {\r\n  //             let thisParam = String(param.split(' ').slice(-1));\r\n  //             result += thisParam;\r\n  //         }\r\n  //     });\r\n  //     console.log('removing types from \"', name, '\" params ', params, ' returning :', result);\r\n  //     return result;\r\n  // }\r\n\r\n  // #endregion\r\n\r\n  // #region Shared Variables\r\n  let code = \"\";\r\n  const problems: any[] = [];\r\n\r\n  const links: any[] = getLinksFromModel(model);\r\n  const nodes: any[] = getNodesFromModel(model);\r\n  const logics: any[] = nodes.filter((node) => node.extras?.type === \"logic\");\r\n  const components: any[] = getComponentsFromNodes(nodes);\r\n  const controller = nodes.find((node) => node.extras?.type === \"controller\");\r\n  const constants: any[] = nodes\r\n    .filter((node) => node.extras?.type === \"constant\")\r\n    .map((constant) => {\r\n      constant.extras.name = constant.extras.name.toUpperCase();\r\n      return constant;\r\n    });\r\n  const variables: any[] = nodes.filter(\r\n    (node) => node.extras?.type === \"variable\"\r\n  );\r\n\r\n  const usedDigital: any[] = [\r\n    ...new Set(nodes.filter((node) => node.extras?.portType === \"Digital\")),\r\n  ];\r\n  const usedAnalog: any[] = [\r\n    ...new Set(nodes.filter((node) => node.extras?.portType === \"Analog\")),\r\n  ];\r\n  // #endregion\r\n\r\n  // #region Generator Lifecycle\r\n  console.log(\"----- Starting Code Generation -----\");\r\n  addHeaderComments();\r\n  warnAboutNumberOfControllers();\r\n  warnAboutPortUsage();\r\n  warnAboutNodesWithoutLinks(nodes);\r\n  warnAboutMultipleUsePorts(nodes);\r\n  warnAboutLooseLinks(links);\r\n  addLibraries();\r\n  addFunctionDeclarations(logics.filter((l) => l.name === \"Function\"));\r\n  addConstantDeclarations(constants);\r\n  addVariableDeclarations(variables);\r\n  addLifecycleMethods();\r\n  // #endregion\r\n  return { code: indentCode(code), problems };\r\n}\r\nexport default function Code(props: { model: string }) {\r\n  // console.log('CodeComponent render')\r\n\r\n  const model = props.model;\r\n  let code = \"\";\r\n  let problems: any[] = [];\r\n\r\n  if (model === \"{}\" || model === \"\") {\r\n  } else {\r\n    ({ code, problems } = generateCode(JSON.parse(model)));\r\n    // console.log('p', problems)\r\n  }\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, [props]);\r\n  return (\r\n    <div className=\"Code\">\r\n      <div\r\n        style={{\r\n          border:\r\n            problems.length !== 0 ? \"solid yellow 2px\" : \"dotted black 2px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            border:\r\n              problems.length !== 0 ? \"solid yellow 1px\" : \"dotted white 1px\",\r\n            fontSize: \"1em\",\r\n          }}\r\n        >\r\n          {problems.length} Problems!\r\n        </div>\r\n        {problems.map((p: any, index: any) => {\r\n          if (p.node?.id) {\r\n            const el = document.querySelector(`[data-nodeid='${p.node.id}']`);\r\n            if (el) el.setAttribute(\"id\", p.node.id);\r\n          }\r\n          const problemId = p.node\r\n            ? \"problem-\" + p.node.id + index\r\n            : \"problem-nodeless\" + index;\r\n\r\n          let nodes: any[] = [];\r\n          let links: any[] = [];\r\n          if (p.node) {\r\n            ({ nodes, links } = processDynamic(p.node, 0, false, p.port));\r\n          }\r\n\r\n          return (\r\n            <div\r\n              id={problemId}\r\n              key={problemId}\r\n              style={{ fontSize: \"0.6em\", border: \"solid white 1px\" }}\r\n            >\r\n              Model violation: {p.message}\r\n              {p.node && (\r\n                <Fragment>\r\n                  <a\r\n                    data-tip\r\n                    data-for={\"tip-\" + problemId}\r\n                    style={{ float: \"left\", marginRight: \"6px\" }}\r\n                  >\r\n                    <OpenInNewIcon style={{ fontSize: \"1rem\" }} />\r\n                  </a>\r\n                  <ReactTooltip\r\n                    className=\"interactableTooltip\"\r\n                    id={\"tip-\" + problemId}\r\n                    type=\"light\"\r\n                    place=\"bottom\"\r\n                    delayHide={500}\r\n                    effect=\"solid\"\r\n                  >\r\n                    <div className=\"miniGoHolder\">\r\n                      <GoClass linkdata={links} nodedata={nodes} />\r\n                    </div>\r\n                  </ReactTooltip>\r\n                </Fragment>\r\n              )}\r\n              {p.node && (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Xarrow\r\n                    strokeWidth={2}\r\n                    start={problemId}\r\n                    end={p.node.id}\r\n                    color=\"yellow\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <pre\r\n        style={{\r\n          height: \"100%\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <code className=\"language-clike\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { Application } from '../components/react-diagrams/Application';\r\nimport { TrayItemWidget } from '../components/react-diagrams/TrayItemWidget';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { MyCanvasWidget } from '../components/react-diagrams/MyCanvasWidget';\r\nimport styled from '@emotion/styled';\r\nimport { MyEditableNodeModel } from '../components/react-diagrams/editableNode/MyEditableNodeModel';\r\nimport PaletteNodes from '../PaletteNodes.jsx';\r\nimport { useState, useEffect } from 'react';\r\nimport Code from '../components/Code';\r\nvar ScrollArea = require('react-scrollbar').default;\r\n\r\nconst app = new Application();\r\n\r\nnamespace S {\r\n  export const Body = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100%;\r\n\t\twidth: 100%;\r\n\t\tgrid-template-columns: 55% 1fr;\r\n\t`;\r\n\r\n  export const Content = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t\t\r\n\t`;\r\n\r\n  export const Layer = styled.div`\r\n\t\tposition: relative;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n  export const Code = styled.div`\r\n\t\tposition: absolute;\r\n\t\tbackground-color: #2d2d2d ;\r\n\t\tleft:50%;\r\n\t\ttop:0;\r\n\t\tright:0;\r\n\t\tbottom:0;\r\n\t\tmargin:0;\r\n\t\tpadding:0;\r\n\t\t`;\r\n\r\n}\r\n\r\nfunction EditorPage() {\r\n  const [model, setModel] = useState(\"{}\")\r\n  const [rerender, setRerender] = React.useState(false);\r\n\r\n  const rawModel = app.getDiagramEngine().getModel().serialize()\r\n  const stringModel = JSON.stringify(rawModel, null, 2)\r\n\r\n  const groups = [...new Set(PaletteNodes.map(x => x.extras.group || x.extras.type))]\r\n  useEffect(() => {\r\n    if (stringModel !== model) {\r\n      setModel(stringModel);\r\n    }\r\n  }, [stringModel, model]);\r\n\r\n  return (\r\n    <S.Body>\r\n      <S.Content >\r\n        <div>\r\n          <ScrollArea\r\n            speed={1}\r\n            className=\"area\"\r\n            contentClassName=\"content\"\r\n            horizontal={false}\r\n            style={{ height: '95vh' }}\r\n            smoothScrolling={true}\r\n            verticalScrollbarStyle={{ backgroundColor: 'white' }}\r\n          >\r\n            {\r\n              groups.map((group) => {\r\n                return <div key={group} style={{ border: 'dashed white 1px', marginBottom: '20px' }}>\r\n                  <h6 style={{ margin: '0px 0px 0px 0px' }}>{group[0].toUpperCase() + group.slice(1) + 's'}:</h6>\r\n                  {PaletteNodes.filter(n => (n.extras.group === group || n.extras.type === group)).map((node) => {\r\n                    return <TrayItemWidget key={node.name} node={node} />\r\n                  })}\r\n                </div>\r\n              }\r\n              )\r\n            }\r\n          </ScrollArea>\r\n        </div>\r\n        <S.Layer\r\n          onDrop={(event) => {\r\n            let data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\r\n            if (data) {\r\n              let node: any = {};\r\n\r\n              app.getDiagramEngine().getModel().registerListener({\r\n                linksUpdated: (l: any) => {\r\n                  setRerender(!rerender);\r\n                  // console.log(\"link\\n\");\r\n                },\r\n                nodesUpdated: (n: any) => {\r\n                  setRerender(!rerender);\r\n                  // console.log(\"node\")\r\n                }\r\n              })\r\n              node = new MyEditableNodeModel(data);\r\n\r\n              node.setPosition(app.getDiagramEngine().getRelativeMousePoint(event));\r\n              app.getDiagramEngine().getModel().addNode(node);\r\n            }\r\n            setRerender(!rerender);\r\n          }}\r\n          onDragOver={(event: any) => {\r\n            event.preventDefault();\r\n          }}\r\n          onClick={(event: any) => {\r\n            setRerender(!rerender);\r\n          }}\r\n        >\r\n          <div style={{ width: '100%', height: '100%' }}>\r\n            <MyCanvasWidget >\r\n              <CanvasWidget engine={app.getDiagramEngine()} />\r\n            </MyCanvasWidget>\r\n          </div>\r\n        </S.Layer>\r\n      </S.Content>\r\n      <S.Code>\r\n        <Code model={model} />\r\n      </S.Code>\r\n    </S.Body >\r\n  )\r\n\r\n}\r\nexport default React.memo(EditorPage)","export default __webpack_public_path__ + \"static/media/flow.5c2dac9f.svg\";","export default __webpack_public_path__ + \"static/media/cym_s.063c404c.svg\";","import flowDiagram from '../assets/flow.svg'\r\nimport cym_s from '../assets/cym_s.svg'\r\nexport default function HomePage() {\r\n    return <div>\r\n        <h2>\r\n            Welcome to MDD4CPS!\r\n        </h2>\r\n        <img src={flowDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n        <img src={cym_s} alt=\"CYM-S\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n    </div>\r\n}","import GoClass from \"../components/GoClass\";\r\nimport PaletteNodes from \"../PaletteNodes.jsx\";\r\nimport { processDynamic, getGoMethods, getGoProperties } from \"../components/goBuilder\"\r\n\r\n\r\nexport default function ModelsPage() {\r\n    let nodesStatic: any[] = [\r\n        { key: -1, name: 'MicroController' },\r\n        { key: -2, name: 'Arduino' },\r\n        { key: -3, name: 'Component' },\r\n    ]\r\n    let linksStatic: any[] = [\r\n        { key: -2, from: -2, to: -1, relationship: \"generalization\" },\r\n        { key: -3, from: -3, to: -1, relationship: \"aggregation\" },\r\n        { key: -4, from: -3, to: -3, relationship: \"aggregation\" },\r\n    ]\r\n    let nodesDynamic: any[] = []\r\n    let linksDynamic: any[] = []\r\n\r\n    PaletteNodes.forEach((node, index) => {\r\n        nodesStatic.push({\r\n            key: index,\r\n            name: node.name,\r\n            properties: getGoProperties(node),\r\n            methods: getGoMethods(node),\r\n        })\r\n        if (node.extras.type === 'controller') {\r\n            linksStatic.push({ key: index, from: index, to: -2, relationship: \"generalization\" })\r\n        } else {\r\n            const { nodes, links } = processDynamic(node, index)\r\n            nodesDynamic.push(...nodes)\r\n            linksDynamic.push(...links)\r\n        }\r\n\r\n    });\r\n\r\n    return <>\r\n        <GoClass linkdata={linksStatic} nodedata={nodesStatic}\r\n            diagramOptions={{ isTree: true }} />\r\n        <GoClass linkdata={linksDynamic} nodedata={nodesDynamic}\r\n            diagramOptions={{ hasMinSize: true }} />\r\n    </>\r\n}","export default __webpack_public_path__ + \"static/media/transformations.40b625af.png\";","import transformations from '../assets/transformations.png'\r\nexport default function TransformationsPage() {\r\n    return <div>\r\n        <img src={transformations} alt=\"Transformations\" style={{ maxHeight: '80vh', maxWidth: '90%' }} />\r\n    </div>\r\n}","// https://docs.google.com/document/d/13n98EJGDVv8c7dxrdF9a7BM8-vhUTmCj2Kx3hMkEQRw/edit\r\n\r\nexport default function ManualPage() {\r\n    return <iframe\r\n        title=\"manual\"\r\n        src=\"https://docs.google.com/document/d/e/2PACX-1vR2vJKeMlDD3hxRPtSCpQQevXOIGGWNwUvJCE4KQDpdl7kq4O2DR0LwX2Xhc2WmvdC8U-mo_hzyPyca/pub?embedded=true\"\r\n        style={{ height: '90vh', width: '98vw' }}\r\n    >\r\n    </iframe>\r\n}","\r\nexport default function PalettePage() {\r\n    return <>\r\n        <h3>Planned Settings</h3>\r\n        <ul>\r\n            <li>Show/Hide copy button on code panel</li>\r\n            <li>Show/Hide all comments</li>\r\n            <li>Show/Hide all warnings</li>\r\n            <li>Show/Hide all arrows</li>\r\n            <li>Show/Hide diagram overlay</li>\r\n            <li>Show/Hide palette expansion panels</li>\r\n            <li></li>\r\n            <li>Enable/Disables constant capitalization</li>\r\n            <li></li>\r\n            <li>Enable code editing (breaks diagram to code relation)</li>\r\n            <li></li>\r\n            <li>Enforce typings</li>\r\n            <li>Enforce lose ends</li>\r\n            <li>Enforce sequencial port usage</li>\r\n            <li>Remove link restrictions</li>\r\n            <li></li>\r\n            <li>Reset all settings on this page</li>\r\n            <li>Reset custom palette</li>\r\n            <li>Erase all localStorage data</li>\r\n            <li></li>\r\n            <li>Contact info</li>\r\n        </ul>\r\n\r\n    </>\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\nimport ModelsPage from './pages/Models';\r\nimport TransformationsPage from './pages/Transformations';\r\nimport ManualPage from './pages/Manual';\r\nimport SettingsPage from './pages/Settings';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Routes >\r\n          <Route path='/mdd4/' element={<HomePage />} />\r\n          <Route path='/mdd4/models' element={<ModelsPage />} />\r\n          <Route path='/mdd4/transformations' element={<TransformationsPage />} />\r\n          <Route path='/mdd4/manual' element={<ManualPage />} />\r\n          <Route path='/mdd4/editor' element={<EditorPage />} />\r\n          <Route path='/mdd4/settings' element={<SettingsPage />} />\r\n        </Routes>\r\n        <NavigationBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}