{"version":3,"sources":["components/PrismEdit.tsx","components/Code.tsx","components/react-diagrams/TrayWidget.tsx","components/react-diagrams/TrayItemWidget.tsx","components/react-diagrams/myNode/MyLinkModel.ts","components/react-diagrams/myNode/MyPortModel.ts","components/react-diagrams/myNode/MyNodeModel.ts","components/react-diagrams/helpers/DemoCanvasWidget.tsx","components/react-diagrams/diamond/DiamondPortModel.ts","components/react-diagrams/diamond/DiamondNodeModel.ts","components/react-diagrams/custom-label/EditableLabelModel.ts","components/react-diagrams/custom-node/custom_nodes/editableNode/EditablePortModel.ts","components/react-diagrams/custom-node/custom_nodes/editableNode/EditableNodeModel.ts","components/react-diagrams/editableNode/MyEditableNodeModel.ts","paletteNodes.js","components/react-diagrams/BodyWidget.tsx","components/react-diagrams/custom-label/EditableLabelWidget.tsx","components/react-diagrams/custom-label/EditableLabelFactory.tsx","components/react-diagrams/custom-node/custom_components/EditableSingleField.tsx","components/react-diagrams/custom-node/custom_nodes/editableNode/EditableNodeWidget.tsx","components/react-diagrams/custom-node/custom_nodes/editableNode/EditableNodeFactory.tsx","components/react-diagrams/diamond/DiamondNodeWidget.tsx","components/react-diagrams/diamond/DiamondNodeFactory.tsx","components/react-diagrams/diamond/SimplePortFactory.ts","components/react-diagrams/custom-node/custom_components/SelectableField.tsx","components/react-diagrams/editableNode/MyEditableNodeWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeFactory.tsx","components/react-diagrams/Application.ts","pages/Editor.tsx","App.tsx","index.tsx"],"names":["Edit","editorRef","useRef","useState","code","setCode","onEditableChange","useCallback","slice","useEditable","disabled","indentation","defaultProps","language","className","style","tokens","getTokenProps","getLineProps","ref","map","line","i","Fragment","filter","token","empty","key","generateCode","model","Object","keys","length","links","entries","layers","models","forEach","x","push","nodes","logics","components","controllers","libraries","usedDigital","usedAnalog","n","extras","type","instance","name","toLowerCase","c","library","includes","controller","add","message","m","getLink","linkID","find","l","id","getPort","nodeID","portID","ports","p","getNode","getCoditionalValue","conditionNode","portName","link","port","source","sourcePort","parent","getParent","content","error","childNode","parentNode","lib","comp","removeType","String","split","callWithParameters","node","contents","console","log","toPort","target","targetPort","toNode","shift","label","fromPort","fromNode","xValue","yValue","outcome","getOutcome","toNode2","analogPorts","digitalPorts","original","level","repeat","join","indentCode","Code","useEffect","Prism","highlightAll","setInterval","temp","localStorage","getItem","setItem","JSON","parse","PrismEdit","S","styled","div","TrayWidget","Tray","this","props","children","React","color","TrayItemWidget","draggable","onDragStart","event","dataTransfer","setData","stringify","MyLinkModel","options","width","selectedColor","curvyness","getOptions","alignment","PortModelAlignment","RIGHT","LEFT","TOP","points","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","getSourceControl","translate","calculateControlOffset","getSourcePort","getTargetControl","getTargetPort","getSVGCurve","data","fireEvent","LinkModel","MyPortModel","in","PortModel","MyNodeModel","portsIn","portsOut","lookupTable","splice","indexOf","after","addPort","_","portsInOrder","getPortFromID","portsOutOrder","getID","NodeModel","background","css","DemoCanvasWidget","styles","Expand","Container","DiamondPortModel","DefaultLinkModel","DiamondNodeModel","BOTTOM","EditableLabelModel","value","LabelModel","EditablePortModel","pos","position","EditableNodeModel","merge","MyEditableNodeModel","ins","outs","selectableOptions","method","addInPort","addOutPort","diagram","lastType","BodyWidget","app","getDiagramEngine","getModel","serialize","Body","Content","height","paletteNodes","margin","fontSize","Layer","onDrop","getData","setPosition","getRelativeMousePoint","addNode","node1","DefaultNodeModel","port1","node2","port2","link1","addLabel","addAll","getActiveDiagram","deserializeModel","forceUpdate","onDragOver","preventDefault","engine","EditableLabelWidget","str","setStr","Label","onChange","newVal","onClick","action","EditableLabelFactory","AbstractReactFactory","Editor","onBlurOrEnter","autoFocus","inputStyle","padding","borderStyle","borderWidth","borderColor","onBlur","onKeyDown","keyCode","EditableSingleField","state","beingEdited","editingKey","elementKey","fontStyle","isAbstract","EditableNodeWidget","divElement","_editableObjectDoubleClick","editingSomething","setState","_contentOnChange","evt","nodeModel","currentTarget","_onBlurOrEnter","bind","clientHeight","clientWidth","onDoubleClick","zIndex","left","top","EditableNodeFactory","DiamondNodeWidget","size","dangerouslySetInnerHTML","__html","isSelected","Port","DiamondNodeFactory","SimplePortFactory","cb","initialConfig","AbstractModelFactory","y","SelectableField","selected","MyEditableNodeWidget","generatePort","variableType","Node","Title","TitleName","Ports","PortsContainer","getInPorts","getOutPorts","MyEditableNodeFactory","Application","activeModel","diagramEngine","SRD","getPortFactories","registerFactory","config","getLabelFactories","getNodeFactories","newModel","setModel","EditorPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d9e54e7.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport { useEditable } from \"use-editable\";\r\n\r\nconst Edit = () => {\r\n    const editorRef = useRef(null);\r\n    const [code, setCode] = useState(\r\n        'function test() {}\\n\\nconsole.log(\"hello\");'\r\n    );\r\n\r\n    const onEditableChange = useCallback((code) => {\r\n        setCode(code.slice(0, -1));\r\n    }, []);\r\n\r\n    useEditable(editorRef, onEditableChange, {\r\n        disabled: false,\r\n        indentation: 2\r\n    });\r\n\r\n    return (\r\n        <Highlight {...defaultProps} code={code} language=\"jsx\">\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n                <pre className={className} style={style} ref={editorRef}>\r\n                    {tokens.map((line, i) => (\r\n                        <React.Fragment key={i}>\r\n                            {line\r\n                                .filter((token) => !token.empty)\r\n                                .map((token, key) => (\r\n                                    <span {...getTokenProps({ token, key })} />\r\n                                ))}\r\n                            {\"\\n\"}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </pre>\r\n            )}\r\n        </Highlight>\r\n    );\r\n};\r\n\r\nexport default Edit;\r\n","import { useEffect, useState } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport \"./prism.css\";\r\nimport PrismEdit from \"./PrismEdit\";\r\n\r\nfunction generateCode(model: any): string {\r\n    let code = ''\r\n    if (Object.keys(model).length === 0) {\r\n        return '// Empty Diagram!';\r\n    }\r\n    const links: any[] = []\r\n    Object.entries(model.layers[0].models).forEach((x: any) => {\r\n        links.push(x[1])\r\n    })\r\n    const nodes: any[] = []\r\n    const logics: any[] = []\r\n    const components: any[] = []\r\n    const controllers: any[] = []\r\n    const libraries: any[] = []\r\n\r\n    let usedDigital: number[] = []\r\n    let usedAnalog: number[] = []\r\n\r\n    Object.entries(model.layers[1].models).forEach((x: any) => {\r\n        const n = x[1]\r\n        nodes.push(n)\r\n        switch (n.extras.type) {\r\n            case 'component':\r\n                n.instance = n.name.toLowerCase() + components.filter(c => c.extras.library === n.extras.library).length\r\n                components.push(n)\r\n                if (!libraries.includes(n.extras.library))\r\n                    libraries.push(n.extras.library)\r\n                break\r\n            case 'controller':\r\n                controllers.push(n)\r\n                break\r\n            case 'logic':\r\n                logics.push(n)\r\n                break\r\n        }\r\n    })\r\n\r\n    // console.log('Generating from model:', model, 'Parsed ', nodes, logics, components, controllers)\r\n\r\n    if (nodes.length === 0) return '// You need at least one Node!'\r\n    if (controllers.length === 0) return '// You need an Arduino!'\r\n    if (controllers.length > 1) return '// Only one Arduino allowed!'\r\n\r\n    let controller = controllers[0]\r\n\r\n    let add = (...message: string[]) => {\r\n        message.forEach((m) => {\r\n            code += m;\r\n        });\r\n        code += \"\\n\";\r\n    };\r\n    let getLink = (linkID: string) => {\r\n        return links.find(l => l.id === linkID)\r\n    }\r\n    let getPort = (nodeID: string, portID: string) => {\r\n        return nodes.find((n: any) => n.id === nodeID).ports\r\n            .find((p: any) => p.id === portID);\r\n    }\r\n    let getNode = (nodeID: string) => {\r\n        return nodes.find((n: any) => n.id === nodeID)\r\n    }\r\n    let getCoditionalValue = (conditionNode: any, portName: any): string => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === portName).links[0]\r\n            let link = getLink(linkID)\r\n            let port = getPort(link.source, link.sourcePort)\r\n            let parent = getParent(port)\r\n\r\n            if (['variable', 'port'].includes(parent.extras.type)) {\r\n                return parent.content\r\n            }\r\n            else if (['component'].includes(parent.extras.type)) {\r\n                return parent.instance + '.' + port.name\r\n            } else {\r\n                return 'Unknown extras.type'\r\n\r\n            }\r\n        } catch (error) {\r\n            return '/* Lacking Value */'\r\n        }\r\n    }\r\n    let getOutcome = (conditionNode: any) => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === 'True').links[0]\r\n            let link = getLink(linkID)\r\n            return getPort(link.target, link.targetPort)\r\n        } catch (error) {\r\n            return { label: '// Lacking Outcome' }\r\n        }\r\n    }\r\n    let getParent = (childNode: any) => {\r\n        return nodes.find((n: any) => n.id === childNode.parentNode)\r\n    }\r\n    libraries.forEach(lib => {\r\n        add('#include <' + lib + '>')\r\n        components.forEach(comp => {\r\n            if (comp.extras.library === lib)\r\n                add(comp.name + ' ' + comp.instance)\r\n        });\r\n        add('')\r\n    });\r\n    let removeType = (name: string): string => {//todo: should accept multiple\r\n        return String(name.split(' ').slice(-1))\r\n    }\r\n    let callWithParameters = (node: any, ...contents: any) => {\r\n        console.log('calling from', node)\r\n        contents.push(node.content)\r\n        node.ports.forEach((port: any) => {\r\n            port.links.forEach((l: any) => {\r\n                const link = getLink(l);\r\n                const toPort = getPort(link.target, link.targetPort)\r\n                const toNode = getNode(toPort.parentNode)\r\n                if (toNode.id === node.id) {\r\n                    //skip as it is the previous link\r\n                } else if (!toNode.instance) {//points to another variable/port\r\n                    callWithParameters(toNode, ...contents)\r\n                } else {//points to a class instance, we hope it is a method call\r\n                    //todo: check for parameter type and numbers\r\n                    add(toNode.instance + '.'\r\n                        + removeType(toPort.name.split(\"(\").shift())\r\n                        + '(' + contents + ')')\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // let content: string | null = null\r\n    controller.ports.forEach((port: any) => {\r\n        add(port.label, \"{\");\r\n        port.links.forEach((l: any) => {\r\n            const link = getLink(l);\r\n            const toPort = getPort(link.target, link.targetPort)\r\n            const toNode = getNode(toPort.parentNode)\r\n            const fromPort = getPort(link.source, link.sourcePort)\r\n            const fromNode = getNode(fromPort.parentNode)\r\n            if (toNode.name === \"Condition\") {\r\n                const xValue = getCoditionalValue(toNode, 'x')\r\n                const yValue = getCoditionalValue(toNode, 'y')\r\n                const outcome = getOutcome(toNode)\r\n                const toNode2 = getParent(outcome)\r\n                add('if (', xValue, ' ' + toNode.content + ' ', yValue, ') {')\r\n                callWithParameters(toNode2)\r\n                add(\"}\\n\");\r\n            } else {\r\n                if (['variable'].includes(toNode.extras.type)) {\r\n                    callWithParameters(toNode)\r\n                } else if (['port'].includes(toNode.extras.type)) {\r\n                    console.log('found port', toNode)\r\n\r\n                    if (toNode.name.includes('Digital')) {\r\n                        console.log('it was digital');\r\n                        usedDigital.push(toNode.content)\r\n                    } else {\r\n                        console.log('it was analog');\r\n                        usedAnalog.push(toNode.content)\r\n                    }\r\n\r\n\r\n                    callWithParameters(toNode)\r\n                } else {\r\n                    if (toNode.instance) {\r\n                        add(toNode.instance + '.' + removeType(toPort.name))\r\n                    } else {\r\n                        add(fromNode.instance + '.' + removeType(fromPort.name))\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        add(\"}\\n\");\r\n    })\r\n\r\n\r\n    add('')\r\n    add(\"/* Code generated for \", controller.name);\r\n    add(`Analog ports ${usedAnalog.length}/${controller.extras.analogPorts} ${usedAnalog.length > 0 ? `(${usedAnalog})` : \"\"} `)\r\n    add(`Digital ports ${usedDigital.length}/${controller.extras.digitalPorts} ${usedDigital.length > 0 ? `(${usedDigital})` : \"\"} `)\r\n    add(\"*/\")\r\n\r\n    function indentCode(original: string) {\r\n        let code: any[] = [];\r\n        let level = 0;\r\n        let tab = \"    \";\r\n        original.split(\"\\n\").forEach((line) => {\r\n            if (line.includes(\"}\")) {\r\n                level--;\r\n            }\r\n            code.push(tab.repeat(level) + line);\r\n            if (line.includes(\"{\")) {\r\n                level++;\r\n            }\r\n        });\r\n        return code.join(\"\\n\");\r\n    }\r\n    return indentCode(code);\r\n}\r\nexport default function Code() {\r\n    const [code, setCode] = useState('Initializing Generator')\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n        setInterval(() => {\r\n            try {\r\n                console.log('trying to read diagram')\r\n                const temp = localStorage.getItem('model')\r\n                if (temp !== localStorage.getItem('oldModel')) {\r\n                    localStorage.setItem('oldModel', temp || '{}')\r\n                    setCode(generateCode(JSON.parse(temp || '{}')));\r\n                    Prism.highlightAll();\r\n                }\r\n            } catch (error) {\r\n                // console.log(error)\r\n            }\r\n        }, 1500)\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className=\"Code\">\r\n                <pre >\r\n                    <code className=\"language-clike\">{code}</code>\r\n                </pre>\r\n            </div>\r\n            <PrismEdit />\r\n\r\n        </>\r\n    );\r\n}","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nnamespace S {\n\texport const Tray = styled.div`\n\t\tmin-width: 200px;\n\t\tbackground: rgb(20, 20, 20);\n\t\tflex-grow: 0;\n\t\tflex-shrink: 0;\n\t`;\n}\n\nexport class TrayWidget extends React.Component {\n\trender() {\n\t\treturn <S.Tray>{this.props.children}</S.Tray>;\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface TrayItemWidgetProps {\n\tmodel: any;\n\tcolor?: string;\n\tname: string;\n}\n\nnamespace S {\n\texport const Tray = styled.div<{ color: string }>`\n\t\tcolor: white;\n\t\tfont-family: Helvetica, Arial;\n\t\tfont-size:0.8em;\n\t\tpadding: 0px 5px;\n\t\tmargin:\t 0px ;\n\t\tborder: solid 1px ${(p) => p.color};\n\t\tborder-radius: 100px;\n\t\tmargin-bottom: 2px;\n\t\tcursor: pointer;\n\t`;\n}\n\nexport class TrayItemWidget extends React.Component<TrayItemWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<S.Tray\n\t\t\t\tcolor={this.props.color || 'red'}\n\t\t\t\tdraggable={true}\n\t\t\t\tonDragStart={(event) => {\n\t\t\t\t\tevent.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.model));\n\t\t\t\t}}\n\t\t\t\tclassName=\"tray-item\">\n\t\t\t\t{this.props.name}\n\t\t\t</S.Tray>\n\t\t);\n\t}\n}\n","// LabelModel,\r\nimport {\r\n\tLinkModel,\r\n\tLinkModelGenerics,\r\n\tLinkModelListener,\r\n\tPortModel,\r\n\tPortModelAlignment\r\n} from '@projectstorm/react-diagrams-core';\r\n// import { DefaultLabelModel } from './DefaultLabelModel';\r\nimport { BezierCurve } from '@projectstorm/geometry';\r\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nexport interface DefaultLinkModelListener extends LinkModelListener {\r\n\t// colorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\r\n\r\n\t// widthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\r\n}\r\n\r\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\r\n\twidth?: number;\r\n\tcolor?: string;\r\n\tselectedColor?: string;\r\n\tcurvyness?: number;\r\n\ttype?: string;\r\n\ttestName?: string;\r\n}\r\n\r\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\r\n\tLISTENER: DefaultLinkModelListener;\r\n\tOPTIONS: DefaultLinkModelOptions;\r\n}\r\n\r\nexport class MyLinkModel extends LinkModel<DefaultLinkModelGenerics> {\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\twidth: options.width || 3,\r\n\t\t\tcolor: options.color || 'gray',\r\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\r\n\t\t\tcurvyness: 50,\r\n\t\t\t...options\r\n\t\t});\r\n\t}\r\n\r\n\tcalculateControlOffset(port: PortModel): [number, number] {\r\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\r\n\t\t\treturn [this.options.curvyness || 0, 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\r\n\t\t\treturn [-(this.options.curvyness || 0), 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\r\n\t\t\treturn [0, -(this.options.curvyness || 0)];\r\n\t\t}\r\n\t\treturn [0, this.options.curvyness || 0];\r\n\t}\r\n\r\n\tgetSVGPath(): string | undefined {\r\n\t\tif (this.points.length === 2) {\r\n\t\t\tconst curve = new BezierCurve();\r\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\r\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\r\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\r\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\r\n\r\n\t\t\tif (this.sourcePort) {\r\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.targetPort) {\r\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\r\n\t\t\t}\r\n\t\t\treturn curve.getSVGCurve();\r\n\t\t}\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\twidth: this.options.width,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tcurvyness: this.options.curvyness,\r\n\t\t\tselectedColor: this.options.selectedColor\r\n\t\t};\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.options.width = event.data.width;\r\n\t\tthis.options.curvyness = event.data.curvyness;\r\n\t\tthis.options.selectedColor = event.data.selectedColor;\r\n\t}\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}\r\n","import {\r\n\tLinkModel,\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { MyLinkModel } from './MyLinkModel';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nexport interface DefaultPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: DefaultPortModelOptions;\r\n}\r\n\r\nexport class MyPortModel extends PortModel<DefaultPortModelGenerics> {\r\n\tconstructor(isIn: boolean, name?: string, label?: string);\r\n\tconstructor(options: DefaultPortModelOptions);\r\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\r\n\t\tif (!!name) {\r\n\t\t\toptions = {\r\n\t\t\t\tin: !!options,\r\n\t\t\t\tname: name,\r\n\t\t\t\tlabel: label\r\n\t\t\t};\r\n\t\t}\r\n\t\toptions = options as DefaultPortModelOptions;\r\n\t\tsuper({\r\n\t\t\tlabel: options.label || options.name,\r\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\r\n\t\t\ttype: 'default',\r\n\t\t\t...options\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.in = event.data.in;\r\n\t\tthis.options.label = event.data.label;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tin: this.options.in,\r\n\t\t\tlabel: this.options.label\r\n\t\t};\r\n\t}\r\n\r\n\tcanLinkToPort(port: PortModel): boolean {\r\n\t\t// if (port instanceof DefaultPortModel) {\r\n\t\t// \treturn this.options.in !== port.getOptions().in;\r\n\t\t// }\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcreateLinkModel(): LinkModel {\r\n\t\tconst link = new MyLinkModel();\r\n\t\t// let label = new DefaultLabelModel();\r\n\t\t// label.setLabel(\"I'm a sad label\");\r\n\t\t// link.addLabel(label)\r\n\t\treturn link\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from './MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    protected portsIn: MyPortModel[];\r\n    protected portsOut: MyPortModel[];\r\n    extras: any;\r\n\r\n    constructor(name: string, color: string);\r\n    constructor(options?: DefaultNodeModelOptions);\r\n    constructor(options: any = {}, color?: string) {\r\n        if (typeof options === 'string') {\r\n            options = {\r\n                name: options,\r\n                color: color\r\n            };\r\n        }\r\n        super({\r\n            type: 'default',\r\n            name: 'Untitled',\r\n            color: 'rgb(0,192,255)',\r\n            ...options\r\n        });\r\n        this.portsOut = [];\r\n        this.portsIn = [];\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n    }\r\n\r\n    serialize(): any {\r\n        return {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras\r\n        };\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css, Global } from '@emotion/react';\n\nexport interface DemoCanvasWidgetProps {\n\tcolor?: string;\n\tbackground?: string;\n}\n\nnamespace S {\n\texport const Container = styled.div<{ color: string; background: string }>`\n\t\theight: 100%;\n\t\tbackground-color: ${(p) => p.background};\n\t\tbackground-size: 50px 50px;\n\t\tdisplay: flex;\n\n\t\t> * {\n\t\t\theight: 100%;\n\t\t\tmin-height: 100%;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\tbackground-image: linear-gradient(\n\t\t\t\t0deg,\n\t\t\t\ttransparent 24%,\n\t\t\t\t${(p) => p.color} 25%,\n\t\t\t\t${(p) => p.color} 26%,\n\t\t\t\ttransparent 27%,\n\t\t\t\ttransparent 74%,\n\t\t\t\t${(p) => p.color} 75%,\n\t\t\t\t${(p) => p.color} 76%,\n\t\t\t\ttransparent 77%,\n\t\t\t\ttransparent\n\t\t\t),\n\t\t\tlinear-gradient(\n\t\t\t\t90deg,\n\t\t\t\ttransparent 24%,\n\t\t\t\t${(p) => p.color} 25%,\n\t\t\t\t${(p) => p.color} 26%,\n\t\t\t\ttransparent 27%,\n\t\t\t\ttransparent 74%,\n\t\t\t\t${(p) => p.color} 75%,\n\t\t\t\t${(p) => p.color} 76%,\n\t\t\t\ttransparent 77%,\n\t\t\t\ttransparent\n\t\t\t);\n\t`;\n\n\texport const Expand = css`\n\t\thtml,\n\t\tbody,\n\t\t#root {\n\t\t\theight: 100%;\n\t\t}\n\t`;\n}\n\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Global styles={S.Expand} />\n\t\t\t\t<S.Container\n\t\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\n\t\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</S.Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import { LinkModel, PortModel, DefaultLinkModel, PortModelAlignment } from '@projectstorm/react-diagrams';\n\nexport class DiamondPortModel extends PortModel {\n\tconstructor(alignment: PortModelAlignment) {\n\t\tsuper({\n\t\t\ttype: 'diamond',\n\t\t\tname: alignment,\n\t\t\talignment: alignment\n\t\t});\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\treturn new DefaultLinkModel();\n\t}\n}\n","import { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams';\nimport { DiamondPortModel } from './DiamondPortModel';\n\nexport interface DiamondNodeModelGenerics {\n\tPORT: DiamondPortModel;\n}\n\nexport class DiamondNodeModel extends NodeModel<NodeModelGenerics & DiamondNodeModelGenerics> {\n\tconstructor() {\n\t\tsuper({\n\t\t\ttype: 'diamond'\n\t\t});\n\t\tthis.addPort(new DiamondPortModel(PortModelAlignment.TOP));\n\t\tthis.addPort(new DiamondPortModel(PortModelAlignment.LEFT));\n\t\tthis.addPort(new DiamondPortModel(PortModelAlignment.BOTTOM));\n\t\tthis.addPort(new DiamondPortModel(PortModelAlignment.RIGHT));\n\t}\n}\n","import { LabelModel } from '@projectstorm/react-diagrams';\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface EditableLabelOptions extends BaseModelOptions {\n\tvalue?: string;\n}\n\nexport class EditableLabelModel extends LabelModel {\n\tvalue: string;\n\n\tconstructor(options: EditableLabelOptions = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\ttype: 'editable-label'\n\t\t});\n\t\tthis.value = options.value || '';\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tvalue: this.value\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>): void {\n\t\tsuper.deserialize(event);\n\t\tthis.value = event.data.value;\n\t}\n}\n","//@ts-nocheck\nimport * as _ from \"lodash\";\nimport { PortModel, PortModelAlignment } from \"@projectstorm/react-diagrams\";\n\nexport class EditablePortModel extends PortModel {\n\n\tconstructor(pos: PortModelAlignment = PortModelAlignment.TOP) {\n\t\tsuper({ alignment: pos, name: pos });\n\t}\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tposition: this.options.alignment\n\t\t});\n\t}\n}\n","import { EditablePortModel } from \"./EditablePortModel\";\r\nimport _ from \"lodash\";\r\nimport { NodeModel, PortModelAlignment } from '@projectstorm/react-diagrams'\r\nexport class EditableNodeModel extends NodeModel {\r\n  content: string;\r\n  constructor(\r\n    content: string = \"content\"\r\n  ) {\r\n    super({ type: \"Editable\" });\r\n    this.content = content;\r\n    this.addPort(new EditablePortModel(PortModelAlignment.LEFT));\r\n    this.addPort(new EditablePortModel(PortModelAlignment.RIGHT));\r\n  }\r\n\r\n  serialize() {\r\n    return _.merge(super.serialize(), {\r\n      content: this.content\r\n    });\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyEditableNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    portsIn: MyPortModel[] = [];\r\n    portsOut: MyPortModel[] = [];\r\n    content: string;\r\n    extras: any;\r\n    selectableOptions: string[];\r\n    constructor(name: string, color: string, extras: any, ins: any[], outs: any[]) {\r\n        super({\r\n            type: 'MyEditable',\r\n            name: name,\r\n            color: color,\r\n        });\r\n        console.log('creating', name, color, extras, ins, outs)\r\n        this.extras = extras;\r\n\r\n        ins.forEach((method: string) => {\r\n            this.addInPort(method)\r\n        });\r\n        outs.forEach((method: string) => {\r\n            this.addOutPort(method)\r\n        });\r\n\r\n        switch (outs[0]) {\r\n            case 'bool':\r\n                this.selectableOptions = ['true', 'false'];\r\n                this.content = 'true'\r\n                break;\r\n            default:\r\n                this.selectableOptions = []\r\n                this.content = 'value'\r\n        }\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n        this.content = event.data.content\r\n    }\r\n\r\n    serialize(): any {\r\n        return {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras,\r\n            content: this.content\r\n        };\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n        name: 'Arduino Uno',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 14,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Mega',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 16,\r\n            digitalPorts: 54,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    }, {\r\n        name: 'Digital Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'port',\r\n        ]\r\n    }, {\r\n        name: 'Analog Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'port',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Condition',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n            'x',\r\n            'y'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Loop',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'startValue',\r\n            'stopValue'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Led',\r\n        color: 'red',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Setter.h'\r\n        },\r\n        ins: [\r\n            'setValue()'\r\n        ],\r\n        outs: []\r\n\r\n    },\r\n    {\r\n        name: 'TemperatureSensor',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Getter.h'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'getValue()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Button',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Getter.h'\r\n        },\r\n        ins: [\r\n            'setValue(bool)'\r\n        ],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Servo.h'\r\n        },\r\n        ins: [\r\n            'void detach()',\r\n            'void write(int)',\r\n            'void writeMicroseconds(int)',\r\n        ],\r\n        outs: [\r\n            'uint8_t attach(int)',\r\n            'uint8_t attach(int, int, int)',\r\n            'int read()',\r\n            'int readMicroseconds()',\r\n            'bool attached()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Stepper',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Stepper.h'\r\n        },\r\n        ins: [\r\n            'Stepper(int, int, int)',\r\n            'Stepper(int, int, int, int, int)',\r\n            'Stepper(int, int, int, int, int, int)',\r\n            'void setSpeed(long whatSpeed)',\r\n            'void step(int number_of_steps)',\r\n        ],\r\n        outs: [\r\n            'int version(void)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Integer',\r\n        color: 'purple',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(int)',\r\n        ],\r\n        outs: [\r\n            'int getValue()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Boolean',\r\n        color: 'purple',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(bool)',\r\n        ],\r\n        outs: [\r\n            'bool getValue()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Constant Integer',\r\n        color: 'purple',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'int',\r\n        ]\r\n    }, {\r\n        name: 'Constant Boolean',\r\n        color: 'purple',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'bool',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Diamond',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'testing'\r\n        },\r\n        ins: [],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'LabelEdit',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'testing'\r\n        },\r\n        ins: [],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'NodeEdit',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'testing'\r\n        },\r\n        ins: [],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'ThermoServo',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'diagram',\r\n            diagram: {\r\n                \"id\": \"d6b5717e-2da5-4f3a-9d8c-3ace0ec6f282\",\r\n                \"offsetX\": 282.5965420081967,\r\n                \"offsetY\": -1.8605532786886627,\r\n                \"zoom\": 110.00000000000003,\r\n                \"gridSize\": 0,\r\n                \"layers\": [{\r\n                    \"id\": \"95b8e5fd-5c97-444f-bf41-4336c9183141\",\r\n                    \"type\": \"diagram-links\",\r\n                    \"isSvg\": true,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"07eb34b6-ba24-43cd-809d-13132e33da51\": {\r\n                            \"id\": \"07eb34b6-ba24-43cd-809d-13132e33da51\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"df05ca88-a562-4d4c-9ac6-3351ac43760e\",\r\n                            \"sourcePort\": \"7e465aa4-d0f3-443c-8b36-3ca4ee008db5\",\r\n                            \"target\": \"512bc35e-9c08-498f-995c-d05f0629761c\",\r\n                            \"targetPort\": \"af8d3171-365c-49e7-8ed9-f150fe82e172\",\r\n                            \"points\": [{\r\n                                \"id\": \"47994ec8-c991-4825-a29b-61ec993e5350\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 344.78177029969225,\r\n                                \"y\": 209.69108306384467\r\n                            }, {\r\n                                \"id\": \"796b3738-ce95-43d4-a628-33511fa02937\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 373.5681112320696,\r\n                                \"y\": 356.3373563172386\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"11ff809f-c2aa-431d-a557-d2728d947406\": {\r\n                            \"id\": \"11ff809f-c2aa-431d-a557-d2728d947406\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"512bc35e-9c08-498f-995c-d05f0629761c\",\r\n                            \"sourcePort\": \"af8d3171-365c-49e7-8ed9-f150fe82e172\",\r\n                            \"target\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                            \"targetPort\": \"53d975ee-bdca-4a40-9282-f4c29491f5b8\",\r\n                            \"points\": [{\r\n                                \"id\": \"cb21f57c-5a25-47ca-b296-7abac16ff601\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 373.5681112320696,\r\n                                \"y\": 356.3373563172386\r\n                            }, {\r\n                                \"id\": \"0ef07a28-eda6-4aad-8909-11ed44a98604\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 393.57685626921244,\r\n                                \"y\": 513.6255243019981\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"70add750-063f-4dc5-a67f-a8c14fab60c1\": {\r\n                            \"id\": \"70add750-063f-4dc5-a67f-a8c14fab60c1\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"df05ca88-a562-4d4c-9ac6-3351ac43760e\",\r\n                            \"sourcePort\": \"be658169-ab18-4a43-86d1-70bd53418c8d\",\r\n                            \"target\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                            \"targetPort\": \"6803560d-cf97-47f6-8ef6-51f22409db16\",\r\n                            \"points\": [{\r\n                                \"id\": \"b77d1881-35bd-48da-b02b-959004872078\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 344.78177029969225,\r\n                                \"y\": 225.69108656586187\r\n                            }, {\r\n                                \"id\": \"b3ab152f-3176-4c80-aa4f-71382b1f85b1\",\r\n                                \"type\": \"point\",\r\n                                \"selected\": false,\r\n                                \"x\": 346.01716188524597,\r\n                                \"y\": 271.6229508196721\r\n                            }, {\r\n                                \"id\": \"4129d80b-8b7f-4424-90c1-c6ca1858c44c\",\r\n                                \"type\": \"point\",\r\n                                \"selected\": false,\r\n                                \"x\": 100.11552254098359,\r\n                                \"y\": 283.4262295081968\r\n                            }, {\r\n                                \"id\": \"9cb55657-c602-4e7a-8d38-398f80d8ccef\",\r\n                                \"type\": \"point\",\r\n                                \"selected\": false,\r\n                                \"x\": 43.066342213114766,\r\n                                \"y\": 319.81967213114757\r\n                            }, {\r\n                                \"id\": \"baa37b37-4e6d-4106-9799-1e146ed586b2\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 88.95413358094245,\r\n                                \"y\": 358.3155857774076\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"fb8c0a43-5bf4-48e6-81d4-a368a5075dd6\": {\r\n                            \"id\": \"fb8c0a43-5bf4-48e6-81d4-a368a5075dd6\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"4fa142c2-b229-4294-be53-e35f2244affc\",\r\n                            \"sourcePort\": \"5d42ad8c-05da-4623-a573-447cfd67f313\",\r\n                            \"target\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                            \"targetPort\": \"21c74953-b688-4c2a-8c36-32a7dc485d86\",\r\n                            \"points\": [{\r\n                                \"id\": \"23b0e7ee-14ee-4959-8bda-b20174ab7af4\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 24.442624951972277,\r\n                                \"y\": 339.627301325563\r\n                            }, {\r\n                                \"id\": \"a56e2c41-2fdf-41a3-9936-ce5cf8874c20\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 88.95413358094245,\r\n                                \"y\": 374.31558177510226\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"84078498-b460-40ec-88f8-50f7e0a3d07d\": {\r\n                            \"id\": \"84078498-b460-40ec-88f8-50f7e0a3d07d\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                            \"sourcePort\": \"65ad99a6-a95e-4d8a-9a10-0b0837d57677\",\r\n                            \"target\": \"b7620813-1d70-4ec9-963d-0de893381809\",\r\n                            \"targetPort\": \"7b3fd1de-cfd1-45d3-b5d9-43139f9c591d\",\r\n                            \"points\": [{\r\n                                \"id\": \"76798d61-83d7-458a-b228-2437806d7e34\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 192.04791559938494,\r\n                                \"y\": 358.31558577740714\r\n                            }, {\r\n                                \"id\": \"1c072e78-9c55-4cdb-a6fb-eab25523dcbb\",\r\n                                \"type\": \"point\",\r\n                                \"selected\": false,\r\n                                \"x\": 245.6892930327869,\r\n                                \"y\": 357.1967213114754\r\n                            }, {\r\n                                \"id\": \"4397b5e1-aaec-4038-b0bd-19b2b351e532\",\r\n                                \"type\": \"point\",\r\n                                \"selected\": false,\r\n                                \"x\": 249.17662537257826,\r\n                                \"y\": 421.98062593144556\r\n                            }, {\r\n                                \"id\": \"2ca8ce88-0cf6-4b47-932a-b7dd7b8ec1ea\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 37.236174036244776,\r\n                                \"y\": 474.3847316054044\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"47994c2c-7089-457e-852b-8840a735f92b\": {\r\n                            \"id\": \"47994c2c-7089-457e-852b-8840a735f92b\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"b7620813-1d70-4ec9-963d-0de893381809\",\r\n                            \"sourcePort\": \"7b3fd1de-cfd1-45d3-b5d9-43139f9c591d\",\r\n                            \"target\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                            \"targetPort\": \"4d27e2bc-1ed7-4a25-809b-5f39309a5dbe\",\r\n                            \"points\": [{\r\n                                \"id\": \"97f0f35c-1437-4334-b234-bc7d7f3ecffc\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 37.236174036244776,\r\n                                \"y\": 474.3847316054044\r\n                            }, {\r\n                                \"id\": \"7043f7f0-76b8-4c1f-81f5-9c78810f2f72\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 94.85811427382139,\r\n                                \"y\": 529.6255202996922\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"ff2344b3-09b0-458e-b229-dc8416a0db3c\": {\r\n                            \"id\": \"ff2344b3-09b0-458e-b229-dc8416a0db3c\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"d9469763-8e16-493a-ace1-5beb2a9143d0\",\r\n                            \"sourcePort\": \"c67f8fa3-b522-42e0-8e73-363c0afbab50\",\r\n                            \"target\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                            \"targetPort\": \"70460e22-0d44-4ec5-b440-018f7ed7e89e\",\r\n                            \"points\": [{\r\n                                \"id\": \"1fda732e-1f4b-4f33-a350-ff7eecde5acc\",\r\n                                \"type\": \"point\",\r\n                                \"x\": -7.278176229508219,\r\n                                \"y\": 418.2205510373978\r\n                            }, {\r\n                                \"id\": \"41d295bd-c704-4034-adf5-d3ccc91b9c2e\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 88.95413358094243,\r\n                                \"y\": 390.3155777727967\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        }\r\n                    }\r\n                }, {\r\n                    \"id\": \"ce83d161-802f-41ec-89e7-2abbc3dcd9d9\",\r\n                    \"type\": \"diagram-nodes\",\r\n                    \"isSvg\": false,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"df05ca88-a562-4d4c-9ac6-3351ac43760e\": {\r\n                            \"id\": \"df05ca88-a562-4d4c-9ac6-3351ac43760e\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"controller\",\r\n                                \"analogPorts\": 6,\r\n                                \"digitalPorts\": 14\r\n                            },\r\n                            \"x\": 279.1319159836066,\r\n                            \"y\": 177.1967213114754,\r\n                            \"ports\": [{\r\n                                \"id\": \"7e465aa4-d0f3-443c-8b36-3ca4ee008db5\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 337.2817702996929,\r\n                                \"y\": 202.19108306384462,\r\n                                \"name\": \"setup()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"df05ca88-a562-4d4c-9ac6-3351ac43760e\",\r\n                                \"links\": [\"07eb34b6-ba24-43cd-809d-13132e33da51\"],\r\n                                \"in\": false,\r\n                                \"label\": \"setup()\"\r\n                            }, {\r\n                                \"id\": \"be658169-ab18-4a43-86d1-70bd53418c8d\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 337.2817702996929,\r\n                                \"y\": 218.19107906153928,\r\n                                \"name\": \"loop()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"df05ca88-a562-4d4c-9ac6-3351ac43760e\",\r\n                                \"links\": [\"70add750-063f-4dc5-a67f-a8c14fab60c1\"],\r\n                                \"in\": false,\r\n                                \"label\": \"loop()\"\r\n                            }],\r\n                            \"name\": \"Arduino Uno\",\r\n                            \"color\": \"green\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"7e465aa4-d0f3-443c-8b36-3ca4ee008db5\", \"be658169-ab18-4a43-86d1-70bd53418c8d\"]\r\n                        },\r\n                        \"49d7e112-0f62-440a-990a-a30d71039672\": {\r\n                            \"id\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"component\",\r\n                                \"library\": \"Servo.h\"\r\n                            },\r\n                            \"x\": 85.36142418032786,\r\n                            \"y\": 481.1311475409836,\r\n                            \"ports\": [{\r\n                                \"id\": \"53d975ee-bdca-4a40-9282-f4c29491f5b8\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 386.0768562692119,\r\n                                \"y\": 506.1255243019972,\r\n                                \"name\": \"uint8_t attach(int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [\"11ff809f-c2aa-431d-a557-d2728d947406\"],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int)\"\r\n                            }, {\r\n                                \"id\": \"d4b088ed-ea94-475d-a316-a9a0da22422e\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 386.0768562692119,\r\n                                \"y\": 522.1255202996921,\r\n                                \"name\": \"uint8_t attach(int, int, int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int, int, int)\"\r\n                            }, {\r\n                                \"id\": \"eb6eee34-ae1a-4047-9827-3655e7bde42e\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 386.0768562692119,\r\n                                \"y\": 538.1255162973868,\r\n                                \"name\": \"int read()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int read()\"\r\n                            }, {\r\n                                \"id\": \"8987ac73-e6f0-4536-a15f-5be603b35094\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 386.0768562692119,\r\n                                \"y\": 554.1255122950819,\r\n                                \"name\": \"int readMicroseconds()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int readMicroseconds()\"\r\n                            }, {\r\n                                \"id\": \"79f1f51a-4e03-4b59-ba50-c3923359f440\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 386.0768562692119,\r\n                                \"y\": 570.1255082927768,\r\n                                \"name\": \"bool attached()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"bool attached()\"\r\n                            }, {\r\n                                \"id\": \"478ef04c-9381-4214-a8b0-b5cab2de9868\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 87.35811427382158,\r\n                                \"y\": 506.1255243019972,\r\n                                \"name\": \"void detach()\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void detach()\"\r\n                            }, {\r\n                                \"id\": \"4d27e2bc-1ed7-4a25-809b-5f39309a5dbe\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 87.35811427382158,\r\n                                \"y\": 522.1255202996921,\r\n                                \"name\": \"void write(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [\"47994c2c-7089-457e-852b-8840a735f92b\"],\r\n                                \"in\": true,\r\n                                \"label\": \"void write(int)\"\r\n                            }, {\r\n                                \"id\": \"3f61b0dd-3ced-402a-b20a-74db2ff0b592\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 87.35811427382158,\r\n                                \"y\": 538.1255162973868,\r\n                                \"name\": \"void writeMicroseconds(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"49d7e112-0f62-440a-990a-a30d71039672\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void writeMicroseconds(int)\"\r\n                            }],\r\n                            \"name\": \"Servo\",\r\n                            \"color\": \"orange\",\r\n                            \"portsInOrder\": [\"478ef04c-9381-4214-a8b0-b5cab2de9868\", \"4d27e2bc-1ed7-4a25-809b-5f39309a5dbe\", \"3f61b0dd-3ced-402a-b20a-74db2ff0b592\"],\r\n                            \"portsOutOrder\": [\"53d975ee-bdca-4a40-9282-f4c29491f5b8\", \"d4b088ed-ea94-475d-a316-a9a0da22422e\", \"eb6eee34-ae1a-4047-9827-3655e7bde42e\", \"8987ac73-e6f0-4536-a15f-5be603b35094\", \"79f1f51a-4e03-4b59-ba50-c3923359f440\"]\r\n                        },\r\n                        \"512bc35e-9c08-498f-995c-d05f0629761c\": {\r\n                            \"id\": \"512bc35e-9c08-498f-995c-d05f0629761c\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"port\"\r\n                            },\r\n                            \"x\": 269.2958504098361,\r\n                            \"y\": 317.8524590163934,\r\n                            \"ports\": [{\r\n                                \"id\": \"af8d3171-365c-49e7-8ed9-f150fe82e172\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 366.06811123206967,\r\n                                \"y\": 348.8373563172385,\r\n                                \"name\": \"port\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"512bc35e-9c08-498f-995c-d05f0629761c\",\r\n                                \"links\": [\"07eb34b6-ba24-43cd-809d-13132e33da51\", \"11ff809f-c2aa-431d-a557-d2728d947406\"],\r\n                                \"in\": false,\r\n                                \"label\": \"port\"\r\n                            }],\r\n                            \"name\": \"Digital Port\",\r\n                            \"color\": \"white\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"af8d3171-365c-49e7-8ed9-f150fe82e172\"],\r\n                            \"content\": \"1\"\r\n                        },\r\n                        \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\": {\r\n                            \"id\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"logic\"\r\n                            },\r\n                            \"x\": 79.45978483606555,\r\n                            \"y\": 319.81967213114757,\r\n                            \"ports\": [{\r\n                                \"id\": \"65ad99a6-a95e-4d8a-9a10-0b0837d57677\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 184.54791559938494,\r\n                                \"y\": 350.81558577740714,\r\n                                \"name\": \"True\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                                \"links\": [\"84078498-b460-40ec-88f8-50f7e0a3d07d\"],\r\n                                \"in\": false,\r\n                                \"label\": \"True\"\r\n                            }, {\r\n                                \"id\": \"f2e4e772-5d44-4a2b-bc82-bcedd7145ef1\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 184.54791559938494,\r\n                                \"y\": 366.81558177510203,\r\n                                \"name\": \"False\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"False\"\r\n                            }, {\r\n                                \"id\": \"6803560d-cf97-47f6-8ef6-51f22409db16\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 81.45413358094243,\r\n                                \"y\": 350.81558577740714,\r\n                                \"name\": \"trigger\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                                \"links\": [\"70add750-063f-4dc5-a67f-a8c14fab60c1\"],\r\n                                \"in\": true,\r\n                                \"label\": \"trigger\"\r\n                            }, {\r\n                                \"id\": \"21c74953-b688-4c2a-8c36-32a7dc485d86\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 81.45413358094243,\r\n                                \"y\": 366.81558177510203,\r\n                                \"name\": \"x\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                                \"links\": [\"fb8c0a43-5bf4-48e6-81d4-a368a5075dd6\"],\r\n                                \"in\": true,\r\n                                \"label\": \"x\"\r\n                            }, {\r\n                                \"id\": \"70460e22-0d44-4ec5-b440-018f7ed7e89e\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 81.45413358094243,\r\n                                \"y\": 382.8155777727967,\r\n                                \"name\": \"y\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"6ced9206-ae32-4b05-8853-71d9a11c2dfe\",\r\n                                \"links\": [\"ff2344b3-09b0-458e-b229-dc8416a0db3c\"],\r\n                                \"in\": true,\r\n                                \"label\": \"y\"\r\n                            }],\r\n                            \"name\": \"Condition\",\r\n                            \"color\": \"grey\",\r\n                            \"portsInOrder\": [\"6803560d-cf97-47f6-8ef6-51f22409db16\", \"21c74953-b688-4c2a-8c36-32a7dc485d86\", \"70460e22-0d44-4ec5-b440-018f7ed7e89e\"],\r\n                            \"portsOutOrder\": [\"65ad99a6-a95e-4d8a-9a10-0b0837d57677\", \"f2e4e772-5d44-4a2b-bc82-bcedd7145ef1\"],\r\n                            \"content\": \">=\"\r\n                        },\r\n                        \"b7620813-1d70-4ec9-963d-0de893381809\": {\r\n                            \"id\": \"b7620813-1d70-4ec9-963d-0de893381809\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"variable\"\r\n                            },\r\n                            \"x\": -103.49103483606554,\r\n                            \"y\": 435.88524590163934,\r\n                            \"ports\": [{\r\n                                \"id\": \"7b3fd1de-cfd1-45d3-b5d9-43139f9c591d\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 29.736174036244776,\r\n                                \"y\": 466.8847316054055,\r\n                                \"name\": \"int\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"b7620813-1d70-4ec9-963d-0de893381809\",\r\n                                \"links\": [\"84078498-b460-40ec-88f8-50f7e0a3d07d\", \"47994c2c-7089-457e-852b-8840a735f92b\"],\r\n                                \"in\": false,\r\n                                \"label\": \"int\"\r\n                            }],\r\n                            \"name\": \"Constant Integer\",\r\n                            \"color\": \"purple\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"7b3fd1de-cfd1-45d3-b5d9-43139f9c591d\"],\r\n                            \"content\": \"10\"\r\n                        },\r\n                        \"4fa142c2-b229-4294-be53-e35f2244affc\": {\r\n                            \"id\": \"4fa142c2-b229-4294-be53-e35f2244affc\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"variable\"\r\n                            },\r\n                            \"x\": -116.27792008196724,\r\n                            \"y\": 301.13114754098353,\r\n                            \"ports\": [{\r\n                                \"id\": \"5d42ad8c-05da-4623-a573-447cfd67f313\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 16.942624951972277,\r\n                                \"y\": 332.1273013255633,\r\n                                \"name\": \"int\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"4fa142c2-b229-4294-be53-e35f2244affc\",\r\n                                \"links\": [\"fb8c0a43-5bf4-48e6-81d4-a368a5075dd6\"],\r\n                                \"in\": false,\r\n                                \"label\": \"int\"\r\n                            }],\r\n                            \"name\": \"Constant Integer\",\r\n                            \"color\": \"purple\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"5d42ad8c-05da-4623-a573-447cfd67f313\"],\r\n                            \"content\": \"25\"\r\n                        },\r\n                        \"d9469763-8e16-493a-ace1-5beb2a9143d0\": {\r\n                            \"id\": \"d9469763-8e16-493a-ace1-5beb2a9143d0\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"component\",\r\n                                \"library\": \"Getter.h\"\r\n                            },\r\n                            \"x\": -108.4090676229508,\r\n                            \"y\": 385.72131147540983,\r\n                            \"ports\": [{\r\n                                \"id\": \"c67f8fa3-b522-42e0-8e73-363c0afbab50\",\r\n                                \"type\": \"default\",\r\n                                \"x\": -14.778176229508219,\r\n                                \"y\": 410.72055103739723,\r\n                                \"name\": \"getValue()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"d9469763-8e16-493a-ace1-5beb2a9143d0\",\r\n                                \"links\": [\"ff2344b3-09b0-458e-b229-dc8416a0db3c\"],\r\n                                \"in\": false,\r\n                                \"label\": \"getValue()\"\r\n                            }],\r\n                            \"name\": \"TemperatureSensor\",\r\n                            \"color\": \"blue\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"c67f8fa3-b522-42e0-8e73-363c0afbab50\"]\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    }, {\r\n        name: 'Single',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'diagram',\r\n            diagram: {\r\n                \"id\": \"ef62da61-e1e0-4ac7-afb2-703ca4fb01a1\",\r\n                \"offsetX\": 0,\r\n                \"offsetY\": 0,\r\n                \"zoom\": 100,\r\n                \"gridSize\": 0,\r\n                \"layers\": [{\r\n                    \"id\": \"017b9bfb-6d1f-491e-8558-3b6232bf89d1\",\r\n                    \"type\": \"diagram-links\",\r\n                    \"isSvg\": true,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"60953129-55d1-4b8c-90b8-3b5a1a2f9813\": {\r\n                            \"id\": \"60953129-55d1-4b8c-90b8-3b5a1a2f9813\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"b3c810a9-65b1-474b-868b-0565a6b1e4ed\",\r\n                            \"sourcePort\": \"4f79fef6-0094-49f5-a3ef-b6eb305bb07c\",\r\n                            \"target\": \"c4d9126f-08e8-4e4a-ab48-1c453a864b3c\",\r\n                            \"targetPort\": \"a0b5b58c-adab-4ba8-af1f-680aa5eae0af\",\r\n                            \"points\": [{\r\n                                \"id\": \"72e3e0af-cfb1-4c73-98b1-5c74f33e8382\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 236.640625,\r\n                                \"y\": 127.5\r\n                            }, {\r\n                                \"id\": \"35245d16-99d2-4da3-81c8-4fd9e686d06f\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 256.265625,\r\n                                \"y\": 260.5\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"cea8d59f-e0ee-47f1-ae33-8c54b1d47c56\": {\r\n                            \"id\": \"cea8d59f-e0ee-47f1-ae33-8c54b1d47c56\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"c4d9126f-08e8-4e4a-ab48-1c453a864b3c\",\r\n                            \"sourcePort\": \"a0b5b58c-adab-4ba8-af1f-680aa5eae0af\",\r\n                            \"target\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                            \"targetPort\": \"f7d82be0-7c73-494b-8f01-8b4aa8b56f76\",\r\n                            \"points\": [{\r\n                                \"id\": \"855e837c-7740-4400-a78e-d7ad81bec37e\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 256.265625,\r\n                                \"y\": 260.5\r\n                            }, {\r\n                                \"id\": \"f9626f8a-6808-49d6-be7b-f09051ee043c\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 484.234375,\r\n                                \"y\": 355.5\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        }\r\n                    }\r\n                }, {\r\n                    \"id\": \"e7421b15-ad31-441a-8a63-9416311d3fdc\",\r\n                    \"type\": \"diagram-nodes\",\r\n                    \"isSvg\": false,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"b3c810a9-65b1-474b-868b-0565a6b1e4ed\": {\r\n                            \"id\": \"b3c810a9-65b1-474b-868b-0565a6b1e4ed\",\r\n                            \"type\": \"default\",\r\n                            \"extras\": {\r\n                                \"type\": \"controller\",\r\n                                \"analogPorts\": 6,\r\n                                \"digitalPorts\": 14\r\n                            },\r\n                            \"x\": 170.984375,\r\n                            \"y\": 95,\r\n                            \"ports\": [{\r\n                                \"id\": \"4f79fef6-0094-49f5-a3ef-b6eb305bb07c\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 229.140625,\r\n                                \"y\": 120,\r\n                                \"name\": \"setup()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"b3c810a9-65b1-474b-868b-0565a6b1e4ed\",\r\n                                \"links\": [\"60953129-55d1-4b8c-90b8-3b5a1a2f9813\"],\r\n                                \"in\": false,\r\n                                \"label\": \"setup()\"\r\n                            }, {\r\n                                \"id\": \"c3074eed-81aa-4265-89e4-b8a9e85dafa9\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 229.140625,\r\n                                \"y\": 136,\r\n                                \"name\": \"loop()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"b3c810a9-65b1-474b-868b-0565a6b1e4ed\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"loop()\"\r\n                            }],\r\n                            \"name\": \"Arduino Uno\",\r\n                            \"color\": \"green\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"4f79fef6-0094-49f5-a3ef-b6eb305bb07c\", \"c3074eed-81aa-4265-89e4-b8a9e85dafa9\"]\r\n                        },\r\n                        \"c4d9126f-08e8-4e4a-ab48-1c453a864b3c\": {\r\n                            \"id\": \"c4d9126f-08e8-4e4a-ab48-1c453a864b3c\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": true,\r\n                            \"extras\": {\r\n                                \"type\": \"port\"\r\n                            },\r\n                            \"x\": 151.984375,\r\n                            \"y\": 222,\r\n                            \"ports\": [{\r\n                                \"id\": \"a0b5b58c-adab-4ba8-af1f-680aa5eae0af\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 248.765625,\r\n                                \"y\": 253,\r\n                                \"name\": \"port\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"c4d9126f-08e8-4e4a-ab48-1c453a864b3c\",\r\n                                \"links\": [\"60953129-55d1-4b8c-90b8-3b5a1a2f9813\", \"cea8d59f-e0ee-47f1-ae33-8c54b1d47c56\"],\r\n                                \"in\": false,\r\n                                \"label\": \"port\"\r\n                            }],\r\n                            \"name\": \"Digital Port\",\r\n                            \"color\": \"white\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"a0b5b58c-adab-4ba8-af1f-680aa5eae0af\"],\r\n                            \"content\": \"1\"\r\n                        },\r\n                        \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\": {\r\n                            \"id\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                            \"type\": \"default\",\r\n                            \"extras\": {\r\n                                \"type\": \"component\",\r\n                                \"library\": \"Servo.h\"\r\n                            },\r\n                            \"x\": 182.984375,\r\n                            \"y\": 323,\r\n                            \"ports\": [{\r\n                                \"id\": \"f7d82be0-7c73-494b-8f01-8b4aa8b56f76\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 476.734375,\r\n                                \"y\": 348,\r\n                                \"name\": \"uint8_t attach(int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [\"cea8d59f-e0ee-47f1-ae33-8c54b1d47c56\"],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int)\"\r\n                            }, {\r\n                                \"id\": \"084a1f94-55c5-4d0d-8a85-9742bd356f48\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 476.734375,\r\n                                \"y\": 368.5,\r\n                                \"name\": \"uint8_t attach(int, int, int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int, int, int)\"\r\n                            }, {\r\n                                \"id\": \"932f4c42-3dc5-4d1a-b011-9bea84ffc1cc\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 476.734375,\r\n                                \"y\": 389,\r\n                                \"name\": \"int read()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int read()\"\r\n                            }, {\r\n                                \"id\": \"e87b2720-4147-4c67-881b-50a2527e49c5\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 476.734375,\r\n                                \"y\": 405,\r\n                                \"name\": \"int readMicroseconds()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int readMicroseconds()\"\r\n                            }, {\r\n                                \"id\": \"beb0d0fa-3c4d-4a15-af9b-32da42bc70d8\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 476.734375,\r\n                                \"y\": 421,\r\n                                \"name\": \"bool attached()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"bool attached()\"\r\n                            }, {\r\n                                \"id\": \"b9667a7b-6558-4138-abb5-7e5c1925ac5b\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 184.984375,\r\n                                \"y\": 348,\r\n                                \"name\": \"void detach()\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void detach()\"\r\n                            }, {\r\n                                \"id\": \"b579c8ee-adae-463b-828a-327d8103fac2\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 184.984375,\r\n                                \"y\": 364,\r\n                                \"name\": \"void write(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void write(int)\"\r\n                            }, {\r\n                                \"id\": \"28138d29-0c5b-4212-95fb-666f3f4ea9b6\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 184.984375,\r\n                                \"y\": 384.5,\r\n                                \"name\": \"void writeMicroseconds(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"9c72dd1a-65bb-47e0-a3a7-eb39a695aff7\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void writeMicroseconds(int)\"\r\n                            }],\r\n                            \"name\": \"Servo\",\r\n                            \"color\": \"orange\",\r\n                            \"portsInOrder\": [\"b9667a7b-6558-4138-abb5-7e5c1925ac5b\", \"b579c8ee-adae-463b-828a-327d8103fac2\", \"28138d29-0c5b-4212-95fb-666f3f4ea9b6\"],\r\n                            \"portsOutOrder\": [\"f7d82be0-7c73-494b-8f01-8b4aa8b56f76\", \"084a1f94-55c5-4d0d-8a85-9742bd356f48\", \"932f4c42-3dc5-4d1a-b011-9bea84ffc1cc\", \"e87b2720-4147-4c67-881b-50a2527e49c5\", \"beb0d0fa-3c4d-4a15-af9b-32da42bc70d8\"]\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    }, {\r\n        name: 'Dual',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'diagram',\r\n            diagram: {\r\n                \"id\": \"6dff789f-db7f-4f24-be03-28997ed43786\",\r\n                \"offsetX\": 129,\r\n                \"offsetY\": -9,\r\n                \"zoom\": 100,\r\n                \"gridSize\": 0,\r\n                \"layers\": [{\r\n                    \"id\": \"957e1e25-857a-4363-b9b8-790d0b41110f\",\r\n                    \"type\": \"diagram-links\",\r\n                    \"isSvg\": true,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"bd112d94-6c36-42a0-893c-6beb273131b5\": {\r\n                            \"id\": \"bd112d94-6c36-42a0-893c-6beb273131b5\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"8ebe7d92-a203-4ea4-b059-7efdddb4da22\",\r\n                            \"sourcePort\": \"e3cbc1b1-c387-4aff-812d-3ca5296aa7ec\",\r\n                            \"target\": \"70aa1cdf-17b9-4561-9c3e-51a1d5b1f349\",\r\n                            \"targetPort\": \"d4f254e0-dc17-4450-ad07-1c49937cd9ca\",\r\n                            \"points\": [{\r\n                                \"id\": \"b37f001b-0f31-4452-86f3-e7c65a54b05b\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 134.640625,\r\n                                \"y\": 162.5\r\n                            }, {\r\n                                \"id\": \"b00141dd-ea09-4ec6-862a-f6b54c7c250f\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 150.265625,\r\n                                \"y\": 362.5\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"1bf7388c-43a8-49f3-a61d-f4ac47e304b5\": {\r\n                            \"id\": \"1bf7388c-43a8-49f3-a61d-f4ac47e304b5\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"70aa1cdf-17b9-4561-9c3e-51a1d5b1f349\",\r\n                            \"sourcePort\": \"d4f254e0-dc17-4450-ad07-1c49937cd9ca\",\r\n                            \"target\": \"75081baf-1bf6-49d0-ac15-43432e468aec\",\r\n                            \"targetPort\": \"e689be08-63fc-4aaf-95d1-4a2eb32bb6f7\",\r\n                            \"points\": [{\r\n                                \"id\": \"ad49ae6a-dab5-4797-97e1-22db353bbc71\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 150.265625,\r\n                                \"y\": 362.5\r\n                            }, {\r\n                                \"id\": \"005518b2-8ddd-4ed9-935f-a4771906406f\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 236.265625,\r\n                                \"y\": 502.5\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        },\r\n                        \"a795a318-edd5-48e3-b9d1-941c3b278347\": {\r\n                            \"id\": \"a795a318-edd5-48e3-b9d1-941c3b278347\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"source\": \"75081baf-1bf6-49d0-ac15-43432e468aec\",\r\n                            \"sourcePort\": \"e689be08-63fc-4aaf-95d1-4a2eb32bb6f7\",\r\n                            \"target\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                            \"targetPort\": \"8a5c2fbc-29c7-47b4-9d9a-82035187d90a\",\r\n                            \"points\": [{\r\n                                \"id\": \"4333421a-5a5b-48d8-9491-bf10afc9d253\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 236.265625,\r\n                                \"y\": 502.5\r\n                            }, {\r\n                                \"id\": \"6050c60f-fa3f-4ea3-9aa1-07d8dbea185f\",\r\n                                \"type\": \"point\",\r\n                                \"x\": 287.203125,\r\n                                \"y\": 644.5\r\n                            }],\r\n                            \"labels\": [],\r\n                            \"width\": 3,\r\n                            \"color\": \"gray\",\r\n                            \"curvyness\": 50,\r\n                            \"selectedColor\": \"rgb(0,192,255)\"\r\n                        }\r\n                    }\r\n                }, {\r\n                    \"id\": \"70070360-f166-4432-9563-40c58f4b37d3\",\r\n                    \"type\": \"diagram-nodes\",\r\n                    \"isSvg\": false,\r\n                    \"transformed\": true,\r\n                    \"models\": {\r\n                        \"8ebe7d92-a203-4ea4-b059-7efdddb4da22\": {\r\n                            \"id\": \"8ebe7d92-a203-4ea4-b059-7efdddb4da22\",\r\n                            \"type\": \"default\",\r\n                            \"extras\": {\r\n                                \"type\": \"controller\",\r\n                                \"analogPorts\": 6,\r\n                                \"digitalPorts\": 14\r\n                            },\r\n                            \"x\": 68.984375,\r\n                            \"y\": 130,\r\n                            \"ports\": [{\r\n                                \"id\": \"e3cbc1b1-c387-4aff-812d-3ca5296aa7ec\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 127.140625,\r\n                                \"y\": 155,\r\n                                \"name\": \"setup()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"8ebe7d92-a203-4ea4-b059-7efdddb4da22\",\r\n                                \"links\": [\"bd112d94-6c36-42a0-893c-6beb273131b5\"],\r\n                                \"in\": false,\r\n                                \"label\": \"setup()\"\r\n                            }, {\r\n                                \"id\": \"cfeff148-524d-45a8-a5e2-776f0381b056\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 127.140625,\r\n                                \"y\": 171,\r\n                                \"name\": \"loop()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"8ebe7d92-a203-4ea4-b059-7efdddb4da22\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"loop()\"\r\n                            }],\r\n                            \"name\": \"Arduino Uno\",\r\n                            \"color\": \"green\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"e3cbc1b1-c387-4aff-812d-3ca5296aa7ec\", \"cfeff148-524d-45a8-a5e2-776f0381b056\"]\r\n                        },\r\n                        \"70aa1cdf-17b9-4561-9c3e-51a1d5b1f349\": {\r\n                            \"id\": \"70aa1cdf-17b9-4561-9c3e-51a1d5b1f349\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"port\"\r\n                            },\r\n                            \"x\": 45.984375,\r\n                            \"y\": 324,\r\n                            \"ports\": [{\r\n                                \"id\": \"d4f254e0-dc17-4450-ad07-1c49937cd9ca\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 142.765625,\r\n                                \"y\": 355,\r\n                                \"name\": \"port\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"70aa1cdf-17b9-4561-9c3e-51a1d5b1f349\",\r\n                                \"links\": [\"bd112d94-6c36-42a0-893c-6beb273131b5\", \"1bf7388c-43a8-49f3-a61d-f4ac47e304b5\"],\r\n                                \"in\": false,\r\n                                \"label\": \"port\"\r\n                            }],\r\n                            \"name\": \"Digital Port\",\r\n                            \"color\": \"white\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"d4f254e0-dc17-4450-ad07-1c49937cd9ca\"],\r\n                            \"content\": \"1\"\r\n                        },\r\n                        \"75081baf-1bf6-49d0-ac15-43432e468aec\": {\r\n                            \"id\": \"75081baf-1bf6-49d0-ac15-43432e468aec\",\r\n                            \"type\": \"MyEditable\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"port\"\r\n                            },\r\n                            \"x\": 131.984375,\r\n                            \"y\": 464,\r\n                            \"ports\": [{\r\n                                \"id\": \"e689be08-63fc-4aaf-95d1-4a2eb32bb6f7\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 228.765625,\r\n                                \"y\": 495,\r\n                                \"name\": \"port\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"75081baf-1bf6-49d0-ac15-43432e468aec\",\r\n                                \"links\": [\"1bf7388c-43a8-49f3-a61d-f4ac47e304b5\", \"a795a318-edd5-48e3-b9d1-941c3b278347\"],\r\n                                \"in\": false,\r\n                                \"label\": \"port\"\r\n                            }],\r\n                            \"name\": \"Digital Port\",\r\n                            \"color\": \"white\",\r\n                            \"portsInOrder\": [],\r\n                            \"portsOutOrder\": [\"e689be08-63fc-4aaf-95d1-4a2eb32bb6f7\"],\r\n                            \"content\": \"3\"\r\n                        },\r\n                        \"e526d93a-9272-4f58-9513-994d36004791\": {\r\n                            \"id\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                            \"type\": \"default\",\r\n                            \"selected\": false,\r\n                            \"extras\": {\r\n                                \"type\": \"component\",\r\n                                \"library\": \"Servo.h\"\r\n                            },\r\n                            \"x\": -21.015625,\r\n                            \"y\": 596,\r\n                            \"ports\": [{\r\n                                \"id\": \"cc9e6e33-748a-4084-9ea1-30641e78c5b7\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 279.703125,\r\n                                \"y\": 621,\r\n                                \"name\": \"uint8_t attach(int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int)\"\r\n                            }, {\r\n                                \"id\": \"8a5c2fbc-29c7-47b4-9d9a-82035187d90a\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 279.703125,\r\n                                \"y\": 637,\r\n                                \"name\": \"uint8_t attach(int, int, int)\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [\"a795a318-edd5-48e3-b9d1-941c3b278347\"],\r\n                                \"in\": false,\r\n                                \"label\": \"uint8_t attach(int, int, int)\"\r\n                            }, {\r\n                                \"id\": \"55ea420d-ad10-4add-89fb-ebfee46d4c84\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 279.703125,\r\n                                \"y\": 653,\r\n                                \"name\": \"int read()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int read()\"\r\n                            }, {\r\n                                \"id\": \"eeae8792-9784-413b-913f-1d4951ade7ed\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 279.703125,\r\n                                \"y\": 669,\r\n                                \"name\": \"int readMicroseconds()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"int readMicroseconds()\"\r\n                            }, {\r\n                                \"id\": \"258a047c-95ef-43bf-9d6b-ba10e8caa69e\",\r\n                                \"type\": \"default\",\r\n                                \"x\": 279.703125,\r\n                                \"y\": 685,\r\n                                \"name\": \"bool attached()\",\r\n                                \"alignment\": \"right\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": false,\r\n                                \"label\": \"bool attached()\"\r\n                            }, {\r\n                                \"id\": \"0ccf904b-23b6-40ff-a726-a64fadeffdcf\",\r\n                                \"type\": \"default\",\r\n                                \"x\": -19.015625,\r\n                                \"y\": 621,\r\n                                \"name\": \"void detach()\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void detach()\"\r\n                            }, {\r\n                                \"id\": \"c3b6e94c-c470-476f-be81-2695881afd37\",\r\n                                \"type\": \"default\",\r\n                                \"x\": -19.015625,\r\n                                \"y\": 637,\r\n                                \"name\": \"void write(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void write(int)\"\r\n                            }, {\r\n                                \"id\": \"7771f65a-e690-4027-8566-644c7408424f\",\r\n                                \"type\": \"default\",\r\n                                \"x\": -19.015625,\r\n                                \"y\": 653,\r\n                                \"name\": \"void writeMicroseconds(int)\",\r\n                                \"alignment\": \"left\",\r\n                                \"parentNode\": \"e526d93a-9272-4f58-9513-994d36004791\",\r\n                                \"links\": [],\r\n                                \"in\": true,\r\n                                \"label\": \"void writeMicroseconds(int)\"\r\n                            }],\r\n                            \"name\": \"Servo\",\r\n                            \"color\": \"orange\",\r\n                            \"portsInOrder\": [\"0ccf904b-23b6-40ff-a726-a64fadeffdcf\", \"c3b6e94c-c470-476f-be81-2695881afd37\", \"7771f65a-e690-4027-8566-644c7408424f\"],\r\n                            \"portsOutOrder\": [\"cc9e6e33-748a-4084-9ea1-30641e78c5b7\", \"8a5c2fbc-29c7-47b4-9d9a-82035187d90a\", \"55ea420d-ad10-4add-89fb-ebfee46d4c84\", \"eeae8792-9784-413b-913f-1d4951ade7ed\", \"258a047c-95ef-43bf-9d6b-ba10e8caa69e\"]\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    }\r\n]","import * as React from 'react';\r\nimport { TrayWidget } from './TrayWidget';\r\nimport { Application } from './Application';\r\nimport { TrayItemWidget } from './TrayItemWidget';\r\nimport { MyNodeModel } from './myNode/MyNodeModel';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { DemoCanvasWidget } from './helpers/DemoCanvasWidget';\r\nimport styled from '@emotion/styled';\r\nimport { DiamondNodeModel } from './diamond/DiamondNodeModel';\r\nimport { EditableLabelModel } from './custom-label/EditableLabelModel';\r\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\r\nimport { EditableNodeModel } from './custom-node/custom_nodes/editableNode/EditableNodeModel';\r\nimport { MyEditableNodeModel } from './editableNode/MyEditableNodeModel';\r\nimport paletteNodes from '../../paletteNodes';\r\n\r\nexport interface BodyWidgetProps {\r\n\tapp: Application;\r\n}\r\n\r\nnamespace S {\r\n\texport const Body = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100%;\r\n\t`;\r\n\r\n\texport const Header = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground: rgb(30, 30, 30);\r\n\t\tflex-grow: 0;\r\n\t\tflex-shrink: 0;\r\n\t\tcolor: white;\r\n\t\tfont-family: Helvetica, Arial, sans-serif;\r\n\t\tpadding: 10px;\r\n\t\talign-items: center;\r\n\t`;\r\n\r\n\texport const Content = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Layer = styled.div`\r\n\t\tposition: relative;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n}\r\nlet lastType = ''\r\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\r\n\tcomponentDidMount() {\r\n\t\tsetInterval(() => {\r\n\t\t\tconsole.log('saving diagram')\r\n\t\t\tconst temp = JSON.stringify(this.props.app.getDiagramEngine().getModel().serialize())\r\n\t\t\tif (temp !== localStorage.getItem('model')) {\r\n\t\t\t\tlocalStorage.setItem('model', temp);\r\n\t\t\t}\r\n\t\t}, 1500)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<S.Body>\r\n\t\t\t\t<S.Content style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t<TrayWidget >\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpaletteNodes.map((node) => {\r\n\t\t\t\t\t\t\t\tif (node.extras.type !== lastType) {\r\n\t\t\t\t\t\t\t\t\tlastType = node.extras.type\r\n\t\t\t\t\t\t\t\t\treturn <div key={node.name}>\r\n\t\t\t\t\t\t\t\t\t\t<p style={{ margin: \"0px\", fontSize: \"0.9em\" }}>{node.extras.type}:</p>\r\n\t\t\t\t\t\t\t\t\t\t<TrayItemWidget model={node} name={node.name} color={node.color} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn <TrayItemWidget key={node.name} model={node} name={node.name} color={node.color} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TrayWidget>\r\n\t\t\t\t\t<S.Layer\r\n\t\t\t\t\t\tonDrop={(event) => {\r\n\t\t\t\t\t\t\tlet data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\t\tif (data.name === 'Diamond') {\r\n\t\t\t\t\t\t\t\t\tconst node = new DiamondNodeModel();\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(this.props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t} else if (data.name === 'LabelEdit') {\r\n\t\t\t\t\t\t\t\t\tconst node1 = new DefaultNodeModel('Node1', 'red');\r\n\t\t\t\t\t\t\t\t\tconst port1 = node1.addOutPort('out');\r\n\t\t\t\t\t\t\t\t\tnode1.setPosition(250, 100);\r\n\t\t\t\t\t\t\t\t\tconst node2 = new DefaultNodeModel('Node2', 'green');\r\n\t\t\t\t\t\t\t\t\tconst port2 = node2.addInPort('in');\r\n\t\t\t\t\t\t\t\t\tnode2.setPosition(800, 300);\r\n\t\t\t\t\t\t\t\t\tconst link1 = port1.link(port2);\r\n\t\t\t\t\t\t\t\t\tlink1.addLabel(\r\n\t\t\t\t\t\t\t\t\t\tnew EditableLabelModel({\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'Hello, I am label!'\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addAll(node1, port1, node2, port2, link1);\r\n\t\t\t\t\t\t\t\t} else if (data.name === 'NodeEdit') {\r\n\t\t\t\t\t\t\t\t\tconst node = new EditableNodeModel(\"Node1\");\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(100, 200);\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(this.props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t} else if (data.extras.type === \"variable\" || data.extras.type === 'port') {\r\n\t\t\t\t\t\t\t\t\tconst node = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs);\r\n\t\t\t\t\t\t\t\t\tconsole.log('node', node)\r\n\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(this.props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t} else if (data.extras.type === \"logic\") {\r\n\t\t\t\t\t\t\t\t\tconst node = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs);\r\n\t\t\t\t\t\t\t\t\tconsole.log('node', node)\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(this.props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t} else if (data.extras.type === \"diagram\") {\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getActiveDiagram().deserializeModel(data.extras.diagram,\r\n\t\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine());\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconst node = new MyNodeModel(data.name, data.color);\r\n\t\t\t\t\t\t\t\t\tnode.extras = data.extras\r\n\t\t\t\t\t\t\t\t\tdata.outs.forEach((method: string) => {\r\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort(method)\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tdata.ins.forEach((method: string) => {\r\n\t\t\t\t\t\t\t\t\t\tnode.addInPort(method)\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(this.props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tthis.props.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.forceUpdate();\r\n\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonDragOver={(event) => {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<div style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t\t\t<DemoCanvasWidget >\r\n\t\t\t\t\t\t\t\t<CanvasWidget engine={this.props.app.getDiagramEngine()} />\r\n\t\t\t\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</S.Layer>\r\n\t\t\t\t</S.Content>\r\n\t\t\t</S.Body >\r\n\t\t)\r\n\t}\r\n}\r\n","import * as React from 'react';\n\nimport { EditableLabelModel } from './EditableLabelModel';\nimport styled from '@emotion/styled';\nimport { action } from '@storybook/addon-actions';\n\nexport interface FlowAliasLabelWidgetProps {\n\tmodel: EditableLabelModel;\n}\n\nnamespace S {\n\t// NOTE: this CSS rules allows to interact with elements in label\n\texport const Label = styled.div`\n\t\tuser-select: none;\n\t\tpointer-events: auto;\n\t`;\n}\n\n// now we can render all what we want in the label\nexport const EditableLabelWidget: React.FunctionComponent<FlowAliasLabelWidgetProps> = (props) => {\n\tconst [str, setStr] = React.useState(props.model.value);\n\n\treturn (\n\t\t<S.Label>\n\t\t\t<input\n\t\t\t\tvalue={str}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst newVal = event.target.value;\n\n\t\t\t\t\t// update value both in internal component state\n\t\t\t\t\tsetStr(newVal);\n\t\t\t\t\t// and in model object\n\t\t\t\t\tprops.model.value = newVal;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<button onClick={() => action('model eventDidFire')('You clicked the button')}>Click me!</button>\n\t\t</S.Label>\n\t);\n};\n","import * as React from 'react';\nimport { AbstractReactFactory, GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams';\n\nimport { EditableLabelModel } from './EditableLabelModel';\nimport { EditableLabelWidget } from './EditableLabelWidget';\n\nexport class EditableLabelFactory extends AbstractReactFactory<EditableLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('editable-label');\n\t}\n\n\tgenerateModel(): EditableLabelModel {\n\t\treturn new EditableLabelModel();\n\t}\n\n\tgenerateReactWidget(event: GenerateWidgetEvent<EditableLabelModel>): JSX.Element {\n\t\treturn <EditableLabelWidget model={event.model} />;\n\t}\n}\n","import * as React from \"react\";\r\nimport AutosizeInput from 'react-input-autosize';\r\n\r\nexport interface IEditableSingleFieldProps {\r\n  beingEdited: boolean;\r\n  content: string;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface IEditableSingleFieldState { }\r\n\r\n// interface EditorInterface {\r\n//   content: string;\r\n//   onChange: () => any;\r\n// }\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n}) => {\r\n  return (\r\n    <AutosizeInput\r\n      autoFocus\r\n      inputStyle={{\r\n        padding: 1,\r\n        borderStyle: \"dotted\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n      }}\r\n      type=\"text\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n      onKeyDown={(event: any) => {\r\n        if (event.keyCode === 13) onBlurOrEnter();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class EditableSingleField extends React.Component<\r\n  IEditableSingleFieldProps,\r\n  IEditableSingleFieldState\r\n> {\r\n  constructor(props: IEditableSingleFieldProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { EditableNodeModel } from \"./EditableNodeModel\";\r\nimport \"./EditableNodeWidgedStyle.css\";\r\nimport EditableSingleField from \"../../custom_components/EditableSingleField\";\r\nimport { PortWidget, DiagramEngine, PortModelAlignment } from \"@projectstorm/react-diagrams\";\r\nexport interface EditableWidgetProps {\r\n  nodeModel: EditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface EditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\n\r\n// interface ContextInformation {\r\n//   context: string;\r\n//   entity: string;\r\n// }\r\n// interface AtributeInformation {\r\n//   atribute: string;\r\n// }\r\n\r\nexport class EditableNodeWidget extends React.Component<\r\n  EditableWidgetProps,\r\n  EditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: EditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n      height: 0,\r\n      width: 0,\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.nodeModel.content = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    const content = this.props.nodeModel.content;\r\n    this.setState({ content });\r\n  }\r\n\r\n  /**\r\n   * Change the width and height values of the element, to put the ports on right place\r\n   */\r\n  componentDidMount() {\r\n    const height = this.divElement.clientHeight;\r\n    const width = this.divElement.clientWidth;\r\n    this.setState({ height, width });\r\n  }\r\n  componentDidUpdate() {\r\n    const height = this.divElement.clientHeight;\r\n    const width = this.divElement.clientWidth;\r\n    if (this.state.height !== height || this.state.width !== width)\r\n      this.setState({ height, width });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={divElement => (this.divElement = divElement)}\r\n        className={\"editable-node\"}\r\n      >\r\n        <div className=\"editable-border\">\r\n          <div className=\"editable-header\">\r\n            <div\r\n              onDoubleClick={() => {\r\n                this._editableObjectDoubleClick(\"content\");\r\n              }}>\r\n              <EditableSingleField\r\n                elementKey=\"content\"\r\n                editingKey={this.state.editingKey}\r\n                beingEdited={this.state.editingSomething}\r\n                content={this.props.nodeModel.content}\r\n                onChange={this._contentOnChange}\r\n                onBlurOrEnter={this._onBlurOrEnter}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"rgba(0,0,250,0.5)\",\r\n            left: -15, //old: -8\r\n            top: this.state.height / 2 - 8\r\n          }}\r\n        >\r\n          <PortWidget style={{ width: 15, height: 15 }} port={this.props.nodeModel.getPort(PortModelAlignment.LEFT)} engine={this.props.engine} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"rgba(0,0,250,0.5)\",\r\n            left: this.state.width, //old: this.state.width - 8,\r\n            top: this.state.height / 2 - 8\r\n          }}\r\n        >\r\n          <PortWidget style={{ width: 15, height: 15 }} port={this.props.nodeModel.getPort(PortModelAlignment.RIGHT)} engine={this.props.engine} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { EditableNodeWidget } from \"./EditableNodeWidget\";\nimport { EditableNodeModel } from \"./EditableNodeModel\";\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core'\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\n\nexport class EditableNodeFactory extends AbstractReactFactory<EditableNodeModel, DiagramEngine> {\n\tgenerateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): EditableNodeModel {\n\t\treturn new EditableNodeModel(\"Class\");\n\t}\n\tconstructor() {\n\t\tsuper(\"Editable\");\n\t}\n\n\tgenerateReactWidget(event: { model: EditableNodeModel }): JSX.Element {\n\t\treturn <EditableNodeWidget nodeModel={event.model} engine={this.engine} />;\n\t}\n}\n","// @ts-nocheck\nimport * as React from 'react';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport { DiagramEngine, PortModelAlignment, PortWidget } from '@projectstorm/react-diagrams';\nimport styled from '@emotion/styled';\n\n\nexport interface DiamondNodeWidgetProps {\n\tnode: DiamondNodeModel;\n\tengine: DiagramEngine;\n\tsize?: number;\n}\n\nnamespace S {\n\texport const Port = styled.div`\n\t\twidth: 16px;\n\t\theight: 16px;\n\t\tz-index: 10;\n\t\tbackground: rgba(0, 0, 0, 0.5);\n\t\tborder-radius: 8px;\n\t\tcursor: pointer;\n\n\t\t&:hover {\n\t\t\tbackground: rgba(0, 0, 0, 1);\n\t\t}\n\t`;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class DiamondNodeWidget extends React.Component<DiamondNodeWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={'diamond-node'}\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\twidth: this.props.size,\n\t\t\t\t\theight: this.props.size\n\t\t\t\t}}>\n\t\t\t\t<svg\n\t\t\t\t\twidth={this.props.size}\n\t\t\t\t\theight={this.props.size}\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html:\n\t\t\t\t\t\t\t`\n          <g id=\"Layer_1\">\n          </g>\n          <g id=\"Layer_2\">\n            <polygon fill=\"mediumpurple\" stroke=\"${this.props.node.isSelected() ? 'white' : '#000000'\n\t\t\t\t\t\t\t}\" stroke-width=\"3\" stroke-miterlimit=\"10\" points=\"10,` +\n\t\t\t\t\t\t\tthis.props.size / 2 +\n\t\t\t\t\t\t\t` ` +\n\t\t\t\t\t\t\tthis.props.size / 2 +\n\t\t\t\t\t\t\t`,10 ` +\n\t\t\t\t\t\t\t(this.props.size - 10) +\n\t\t\t\t\t\t\t`,` +\n\t\t\t\t\t\t\tthis.props.size / 2 +\n\t\t\t\t\t\t\t` ` +\n\t\t\t\t\t\t\tthis.props.size / 2 +\n\t\t\t\t\t\t\t`,` +\n\t\t\t\t\t\t\t(this.props.size - 10) +\n\t\t\t\t\t\t\t` \"/>\n          </g>\n        `\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: this.props.size / 2 - 8,\n\t\t\t\t\t\tleft: -8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.LEFT)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t<S.Port />\n\t\t\t\t</PortWidget>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tleft: this.props.size / 2 - 8,\n\t\t\t\t\t\ttop: -8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.TOP)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t<S.Port />\n\t\t\t\t</PortWidget>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tleft: this.props.size - 8,\n\t\t\t\t\t\ttop: this.props.size / 2 - 8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.RIGHT)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t<S.Port />\n\t\t\t\t</PortWidget>\n\t\t\t\t<PortWidget\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tleft: this.props.size / 2 - 8,\n\t\t\t\t\t\ttop: this.props.size - 8,\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\tport={this.props.node.getPort(PortModelAlignment.BOTTOM)}\n\t\t\t\t\tengine={this.props.engine}>\n\t\t\t\t\t<S.Port />\n\t\t\t\t</PortWidget>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { DiamondNodeWidget } from './DiamondNodeWidget';\nimport { DiamondNodeModel } from './DiamondNodeModel';\nimport * as React from 'react';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DiamondNodeFactory extends AbstractReactFactory<DiamondNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('diamond');\n\t}\n\n\tgenerateReactWidget(event: any): JSX.Element {\n\t\treturn <DiamondNodeWidget engine={this.engine} size={50} node={event.model} />;\n\t}\n\n\tgenerateModel(event: any) {\n\t\treturn new DiamondNodeModel();\n\t}\n}\n","import { DiagramEngine, PortModel } from '@projectstorm/react-diagrams';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nexport class SimplePortFactory extends AbstractModelFactory<PortModel, DiagramEngine> {\n\tcb: (initialConfig?: any) => PortModel;\n\n\tconstructor(type: string, cb: (initialConfig?: any) => PortModel) {\n\t\tsuper(type);\n\t\tthis.cb = cb;\n\t}\n\n\tgenerateModel(event: any): PortModel {\n\t\treturn this.cb(event.initialConfig);\n\t}\n}\n","import * as React from \"react\";\r\n\r\nexport interface ISelectableFieldProps {\r\n  beingEdited: boolean;\r\n  options: Array<string>\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface ISelectableFieldState { }\r\n\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n  options\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  options: Array<string>;\r\n}) => {\r\n  return (\r\n\r\n    <select name=\"values\" id=\"values\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n    >\r\n      {\r\n        options.map((x, y) =>\r\n          <option key={y}>{x}</option>)\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default class SelectableField extends React.Component<\r\n  ISelectableFieldProps,\r\n  ISelectableFieldState\r\n> {\r\n  constructor(props: ISelectableFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n            options={this.props.options}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport \"./MyEditableNodeWidgedStyle.css\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { PortWidget, DiagramEngine, PortModelAlignment, DefaultPortLabel } from \"@projectstorm/react-diagrams\";\r\nimport styled from '@emotion/styled';\r\n\r\nimport EditableSingleField from \"../custom-node/custom_components/EditableSingleField\";\r\nimport SelectableField from \"../custom-node/custom_components/SelectableField\";\r\n\r\nnamespace S {\r\n  export const Node = styled.div<{ background: string; selected: boolean }>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: sans-serif;\r\n\t\tcolor: white;\r\n\t\tborder: solid 2px black;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 11px;\r\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\r\n\t`;\r\n\r\n  export const Title = styled.div`\r\n\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\tdisplay: flex;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n  export const TitleName = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 5px 5px;\r\n\t`;\r\n\r\n  export const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\r\n\t`;\r\n\r\n  export const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport interface MyEditableWidgetProps {\r\n  nodeModel: MyEditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface MyEditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\nexport class MyEditableNodeWidget extends React.Component<\r\n  MyEditableWidgetProps,\r\n  MyEditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: MyEditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n      variableType: '',\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n  generatePort = (port) => {\r\n    return <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\r\n  };\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.nodeModel.content = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n\r\n    this.setState({\r\n      content: this.props.nodeModel.content\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <S.Node\r\n        data-default-node-name={this.props.nodeModel.getOptions().name}\r\n        selected={this.props.nodeModel.isSelected()}\r\n        background={this.props.nodeModel.getOptions().color}>\r\n        <S.Title>\r\n          <S.TitleName>{this.props.nodeModel.getOptions().name}:\r\n          </S.TitleName>\r\n          <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"content\");\r\n                  }}\r\n                >\r\n                  {this.props.nodeModel.portsOut[0].options.name === 'bool' ?\r\n                    <SelectableField\r\n                      elementKey=\"content\"\r\n                      options={['true', 'false']}\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                    : this.props.nodeModel.portsOut[0].options.name === 'port' ?\r\n                      <SelectableField\r\n                        elementKey=\"content\"\r\n                        options={['0', '1', '2']}\r\n                        editingKey={this.state.editingKey}\r\n                        beingEdited={this.state.editingSomething}\r\n                        content={this.props.nodeModel.content}\r\n                        onChange={this._contentOnChange}\r\n                        onBlurOrEnter={this._onBlurOrEnter}\r\n                      />\r\n                      :\r\n                      <EditableSingleField\r\n                        elementKey=\"content\"\r\n                        editingKey={this.state.editingKey}\r\n                        beingEdited={this.state.editingSomething}\r\n                        content={this.props.nodeModel.content}\r\n                        onChange={this._contentOnChange}\r\n                        onBlurOrEnter={this._onBlurOrEnter}\r\n                      />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </S.Title>\r\n        <S.Ports>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getInPorts(), this.generatePort)}</S.PortsContainer>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getOutPorts(), this.generatePort)}</S.PortsContainer>\r\n        </S.Ports>\r\n      </S.Node>\r\n    );\r\n  }\r\n}\r\n","import { MyEditableNodeWidget } from \"./MyEditableNodeWidget\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core'\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\n\r\nexport class MyEditableNodeFactory extends AbstractReactFactory<MyEditableNodeModel, DiagramEngine> {\r\n\tgenerateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): MyEditableNodeModel {\r\n\t\treturn new MyEditableNodeModel('name', 'pink', 'test', ['t'], ['t']);\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(\"MyEditable\");\r\n\t}\r\n\r\n\tgenerateReactWidget(event: { model: MyEditableNodeModel }): JSX.Element {\r\n\t\treturn <MyEditableNodeWidget nodeModel={event.model} engine={this.engine} />;\r\n\t}\r\n}\r\n","import * as SRD from '@projectstorm/react-diagrams';\r\nimport { PortModelAlignment } from '@projectstorm/react-diagrams';\r\nimport { EditableLabelFactory } from './custom-label/EditableLabelFactory';\r\nimport { EditableNodeFactory } from './custom-node/custom_nodes/editableNode/EditableNodeFactory';\r\nimport { DiamondNodeFactory } from './diamond/DiamondNodeFactory';\r\nimport { DiamondPortModel } from './diamond/DiamondPortModel';\r\nimport { SimplePortFactory } from './diamond/SimplePortFactory';\r\nimport { MyEditableNodeFactory } from './editableNode/MyEditableNodeFactory';\r\n\r\n/**\r\n * @author Dylan Vorster\r\n */\r\nexport class Application {\r\n\tprotected activeModel: any;//SRD.DiagramModel\r\n\tprotected diagramEngine: SRD.DiagramEngine;\r\n\r\n\tconstructor() {\r\n\t\tthis.diagramEngine = SRD.default();\r\n\t\tthis.diagramEngine\r\n\t\t\t.getPortFactories()\r\n\t\t\t.registerFactory(new SimplePortFactory('diamond', (config) => new DiamondPortModel(PortModelAlignment.LEFT)));\r\n\t\tthis.diagramEngine.getLabelFactories().registerFactory(new EditableLabelFactory());\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new EditableNodeFactory());\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new DiamondNodeFactory());\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new MyEditableNodeFactory());\r\n\t\tthis.newModel();\r\n\t}\r\n\r\n\tpublic newModel() {\r\n\t\tthis.activeModel = new SRD.DiagramModel();\r\n\t\tthis.diagramEngine.setModel(this.activeModel);\r\n\t}\r\n\r\n\tpublic getActiveDiagram(): SRD.DiagramModel {\r\n\t\treturn this.activeModel;\r\n\t}\r\n\r\n\tpublic getDiagramEngine(): SRD.DiagramEngine {\r\n\t\treturn this.diagramEngine;\r\n\t}\r\n}\r\n","import Code from \"../components/Code\"\r\n\r\nimport { BodyWidget } from '../components/react-diagrams/BodyWidget';\r\nimport { Application } from '../components/react-diagrams/Application';\r\n\r\nexport default function EditorPage() {\r\n  var app = new Application();\r\n  return <div className=\"float-container\" >\r\n    <div className=\"float-child-left\">\r\n      <BodyWidget app={app} />\r\n    </div>\r\n    <div className=\"float-child-right\">\r\n      <Code />\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\nimport ModelsPage from './pages/Models';\r\nimport StatePage from './pages/State';\r\nimport PalettePage from './pages/Palette';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <EditorPage />\r\n        {/* <Routes >\r\n          <Route path='/' element={<HomePage />} />\r\n          <Route path='/models' element={<ModelsPage />} />\r\n          <Route path='/state' element={<StatePage />} />\r\n          <Route path='/palette' element={<PalettePage />} />\r\n          <Route path='/editor' element={<EditorPage />} />\r\n        </Routes> */}\r\n        {/* <NavigationBar /> */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}