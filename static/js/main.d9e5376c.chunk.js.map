{"version":3,"sources":["components/NavigationBar.tsx","components/NodeDiagram.tsx","components/react-diagrams/TrayItemWidget.tsx","components/react-diagrams/myNode/MyLinkModel.ts","components/react-diagrams/myNode/MyPortModel.ts","components/react-diagrams/myNode/MyNodeModel.ts","components/react-diagrams/helpers/DemoCanvasWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeModel.ts","paletteNodes.js","components/PrismEdit.tsx","components/Code.tsx","components/react-diagrams/BodyWidget.tsx","components/react-diagrams/custom-label/EditableLabelModel.ts","components/react-diagrams/custom-label/EditableLabelWidget.tsx","components/react-diagrams/custom-label/EditableLabelFactory.tsx","components/react-diagrams/custom-node/custom_components/EditableSingleField.tsx","components/react-diagrams/custom-node/custom_components/SelectableField.tsx","components/react-diagrams/editableNode/MyEditableNodeWidget.tsx","components/react-diagrams/editableNode/MyEditableNodeFactory.tsx","components/react-diagrams/Application.ts","pages/Editor.tsx","assets/flow.svg","assets/cym_s.svg","pages/Home.tsx","pages/Models.tsx","assets/transformations.png","pages/Transformations.tsx","pages/Palette.tsx","pages/Settings.tsx","App.tsx","index.tsx"],"names":["SimpleBottomNavigation","pathname","window","location","useState","value","setValue","AppBar","position","color","style","top","bottom","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","component","Link","label","to","icon","NodeDiagram","props","node","canEdit","myInput","all","type","id","name","maxWidth","border","fontSize","margin","backgroundColor","width","borderBottom","extras","library","ins","length","map","port","outs","S","styled","div","p","TrayItemWidget","Tray","this","draggable","onDragStart","dataTransfer","setData","JSON","stringify","setDragImage","Image","className","float","marginRight","place","delayHide","effect","React","MyLinkModel","options","selectedColor","curvyness","getOptions","alignment","PortModelAlignment","RIGHT","LEFT","TOP","points","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","calculateControlOffset","getSourcePort","targetPort","getTargetControl","getTargetPort","getSVGCurve","data","fireEvent","LinkModel","MyPortModel","in","PortModel","MyNodeModel","portsIn","portsOut","lookupTable","splice","indexOf","push","after","addPort","_","portsInOrder","getPortFromID","portsOutOrder","getID","NodeModel","background","css","DemoCanvasWidget","styles","Expand","Container","children","MyEditableNodeModel","shouldHaveUserName","content","selectableOptions","forEach","method","addInPort","addOutPort","userName","selector","Array","from","keys","x","toString","console","log","analogPorts","digitalPorts","Edit","editorRef","useRef","code","setCode","onEditableChange","useCallback","slice","useEditable","disabled","indentation","defaultProps","language","tokens","getTokenProps","getLineProps","ref","line","i","Fragment","filter","token","empty","key","generateCode","model","problems","add","message","m","addOnTop","getLink","linkID","links","find","l","getPort","nodeID","portID","nodes","n","ports","error","getNode","getCoditionalValue","conditionNode","portName","link","source","parent","getParent","includes","instance","getOutcome","ifThis","target","childNode","parentNode","removeTypes","functionName","substring","params","split","result","param","thisParam","String","callWithParameters","contents","toPort","toNode","shift","warn","processLink","fromPort","fromNode","xValue","yValue","outcome2","toNode2","outcome3","toNode3","usedDigital","usedAnalog","processCall","Object","entries","layers","models","logics","components","controllers","libraries","constants","hasLink","toLowerCase","replace","c","toUpperCase","controller","lib","comp","logic","constant","original","level","repeat","join","indentCode","Code","generated","parse","cleanProblems","dirty","findIndex","sameNodes","Set","concat","useEffect","Prism","highlightAll","index","el","document","querySelector","setAttribute","problemId","display","justifyContent","strokeWidth","start","end","PrismEdit","ScrollArea","require","default","BodyWidget","setModel","rerender","setRerender","rawModel","app","getDiagramEngine","getModel","serialize","stringModel","groups","paletteNodes","Body","Content","speed","contentClassName","horizontal","height","smoothScrolling","verticalScrollbarStyle","group","marginBottom","Button","variant","size","onClick","localStorage","setItem","getActiveDiagram","deserializeModel","getItem","setTimeout","Layer","onDrop","getData","registerListener","linksUpdated","nodesUpdated","setPosition","getRelativeMousePoint","addNode","onDragOver","preventDefault","engine","EditableLabelModel","LabelModel","EditableLabelWidget","str","setStr","Label","newVal","action","EditableLabelFactory","AbstractReactFactory","Editor","onFocus","onBlurOrEnter","autoFocus","inputStyle","padding","borderStyle","borderWidth","borderColor","onBlur","onKeyDown","keyCode","EditableSingleField","state","beingEdited","editingKey","elementKey","setLocked","fontStyle","isAbstract","y","SelectableField","selected","MyEditableNodeWidget","divElement","generatePort","_editableObjectDoubleClick","editingSomething","setState","_contentOnChange","evt","nodeModel","currentTarget","_onBlurOrEnter","variableType","bind","Node","isSelected","Title","onDoubleClick","TitleName","next","repaintCanvas","found","portIn","portOut","removePort","Ports","PortsContainer","getInPorts","getOutPorts","MyEditableNodeFactory","Application","activeModel","diagramEngine","SRD","getLabelFactories","registerFactory","getNodeFactories","newModel","EditorPage","HomePage","src","flowDiagram","alt","maxHeight","cym_s","initDiagram","$","go","make","myDiagram","layout","angle","path","PathSource","setsPortSpot","setsChildPortSpot","arrangement","ArrangementHorizontal","convertVisibility","v","propertyTemplate","isMultiline","editable","makeTwoWay","s","t","methodTemplate","parr","nodeTemplate","locationSpot","Center","fromSpot","AllSides","toSpot","fill","defaultRowSeparatorStroke","row","columnSpan","font","ofObject","stretch","Fill","defaultAlignment","Left","itemTemplate","column","TopRight","visible","arr","linkTemplate","routing","Orthogonal","r","scale","linkKeyProperty","copiesArrays","copiesArrayObjects","handleModelChange","changes","alert","ModelsPage","divClassName","nodeDataArray","properties","visibility","methods","parameters","linkDataArray","relationship","onModelChange","TransformationsPage","transformations","PalettePage","gridTemplateColumns","gridGap","App","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d9e5376c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AppBar } from '@material-ui/core';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n// import SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TransformIcon from '@mui/icons-material/Transform';\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const pathname = window.location.pathname; // in case user visits the path directly. The BottomNavBar is able to follow suit.\r\n    const [value, setValue] = useState(pathname);\r\n    const handleChange = (event: any, newValue: any) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{ top: \"auto\", bottom: 0 }}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={handleChange}\r\n                showLabels\r\n            >\r\n                location.pathname\r\n                <BottomNavigationAction component={Link} label=\"Home\" to=\"/mdd4/\" icon={<HomeIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Models\" to=\"/mdd4/models\" icon={<MapIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Transformations\" to=\"/mdd4/transformations\" icon={<TransformIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Palette\" to=\"/mdd4/palette\" icon={<PaletteIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Editor\" to=\"/mdd4/editor\" icon={<EditIcon />} />\r\n                <BottomNavigationAction component={Link} label=\"Settings\" to=\"/mdd4/settings\" icon={<SettingsIcon />} />\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    );\r\n}","export default function NodeDiagram(props: { node: any, canEdit?: boolean }) {\r\n    const { node, canEdit } = props\r\n    const myInput = (all: string) => {\r\n        if (canEdit)\r\n            return <input type=\"text\" id={all} name={all} value={all} ></input>\r\n        return all\r\n    }\r\n\r\n    return <>\r\n        <div style={{ maxWidth: '400px', border: 'solid', fontSize: '.9em', color: 'black', margin: '60px 0px 25px 0', backgroundColor: 'lightgrey' }}>\r\n            <div style={{ width: '100%', borderBottom: 'solid 3px', fontSize: '1.2em' }}>\r\n                {myInput(node.name)}\r\n            </div>\r\n\r\n            {node.extras.library &&\r\n                <div style={{ width: '100%', borderBottom: 'solid 2px' }}>\r\n                    Library={node.extras.library}\r\n                </div>\r\n            }\r\n            {node.ins && node.ins.length > 0 &&\r\n                node.ins.map((port: any) => {\r\n                    return <div key={port}>\r\n                        <p>{myInput(port)}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            {node.outs && node.outs.length > 0 &&\r\n                node.outs.map((port: any) => {\r\n                    return <div key={port}>\r\n                        <p>{myInput(port)}</p>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    </>\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport NodeDiagram from '../../components/NodeDiagram'\r\nexport interface TrayItemWidgetProps {\r\n\tnode: any;\r\n}\r\n\r\nnamespace S {\r\n\texport const Tray = styled.div<{ color: string }>`\r\n\t\tcolor: white;\r\n\t\tfont-family: Helvetica, Arial;\r\n\t\tfont-size:0.6em;\r\n\t\tpadding: 2px 0px;\r\n\t\tmargin:\t 5px 10px ;\r\n\t\tborder: solid 1px ${(p) => p.color};\r\n\t\tborder-radius: 100px;\r\n\t\tmargin-bottom: 2px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: rgb(20, 20, 20);\r\n\t`;\r\n}\r\n\r\nexport class TrayItemWidget extends React.Component<TrayItemWidgetProps> {\r\n\trender() {\r\n\t\t// const label = this.props.node.name.includes(\" \") && this.props.node.name.length > 15 ? (<div>\r\n\t\t// \t{this.props.node.name.substr(0, this.props.node.name.indexOf(' '))}\r\n\t\t// \t<br />\r\n\t\t// \t{this.props.node.name.substr(this.props.node.name.indexOf(' ') + 1)}</div>) : this.props.node.name\r\n\t\treturn (\r\n\t\t\t<S.Tray\r\n\t\t\t\tcolor={this.props.node.color || 'red'}\r\n\t\t\t\tdraggable={true}\r\n\t\t\t\tonDragStart={(event) => {\r\n\t\t\t\t\tevent.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.node));\r\n\t\t\t\t\tevent.dataTransfer.setDragImage(new Image(), 10, 10);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"tray-item\">\r\n\r\n\t\t\t\t{this.props.node.name}\r\n\r\n\t\t\t\t<a data-tip data-for={'tip-' + this.props.node.name} style={{ float: 'right', marginRight: '6px' }} >\r\n\t\t\t\t\t<OpenInNewIcon style={{ fontSize: '1rem' }} />\r\n\t\t\t\t</a>\r\n\t\t\t\t<ReactTooltip\r\n\t\t\t\t\tclassName=\"interactableTooltip\"\r\n\t\t\t\t\tid={'tip-' + this.props.node.name}\r\n\t\t\t\t\ttype='light' place=\"right\"\r\n\t\t\t\t\tdelayHide={500}\r\n\t\t\t\t\teffect=\"solid\"\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<NodeDiagram node={this.props.node} />\r\n\t\t\t\t</ReactTooltip>\r\n\t\t\t</S.Tray>\r\n\t\t);\r\n\t}\r\n}\r\n","// LabelModel,\r\nimport {\r\n\tLinkModel,\r\n\tLinkModelGenerics,\r\n\tLinkModelListener,\r\n\tPortModel,\r\n\tPortModelAlignment\r\n} from '@projectstorm/react-diagrams-core';\r\n// import { DefaultLabelModel } from './DefaultLabelModel';\r\nimport { BezierCurve } from '@projectstorm/geometry';\r\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nexport interface DefaultLinkModelListener extends LinkModelListener {\r\n\t// colorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\r\n\r\n\t// widthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\r\n}\r\n\r\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\r\n\twidth?: number;\r\n\tcolor?: string;\r\n\tselectedColor?: string;\r\n\tcurvyness?: number;\r\n\ttype?: string;\r\n\ttestName?: string;\r\n}\r\n\r\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\r\n\tLISTENER: DefaultLinkModelListener;\r\n\tOPTIONS: DefaultLinkModelOptions;\r\n}\r\n\r\nexport class MyLinkModel extends LinkModel<DefaultLinkModelGenerics> {\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\twidth: options.width || 3,\r\n\t\t\tcolor: options.color || 'gray',\r\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\r\n\t\t\tcurvyness: 50,\r\n\t\t\t...options\r\n\t\t});\r\n\t}\r\n\r\n\tcalculateControlOffset(port: PortModel): [number, number] {\r\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\r\n\t\t\treturn [this.options.curvyness || 0, 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\r\n\t\t\treturn [-(this.options.curvyness || 0), 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\r\n\t\t\treturn [0, -(this.options.curvyness || 0)];\r\n\t\t}\r\n\t\treturn [0, this.options.curvyness || 0];\r\n\t}\r\n\r\n\tgetSVGPath(): string | undefined {\r\n\t\tif (this.points.length === 2) {\r\n\t\t\tconst curve = new BezierCurve();\r\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\r\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\r\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\r\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\r\n\r\n\t\t\tif (this.sourcePort) {\r\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.targetPort) {\r\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\r\n\t\t\t}\r\n\t\t\treturn curve.getSVGCurve();\r\n\t\t}\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\twidth: this.options.width,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tcurvyness: this.options.curvyness,\r\n\t\t\tselectedColor: this.options.selectedColor\r\n\t\t};\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.options.width = event.data.width;\r\n\t\tthis.options.curvyness = event.data.curvyness;\r\n\t\tthis.options.selectedColor = event.data.selectedColor;\r\n\t}\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}\r\n","import {\r\n\tLinkModel,\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { MyLinkModel } from './MyLinkModel';\r\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nexport interface DefaultPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: DefaultPortModelOptions;\r\n}\r\n\r\nexport class MyPortModel extends PortModel<DefaultPortModelGenerics> {\r\n\tconstructor(isIn: boolean, name?: string, label?: string);\r\n\tconstructor(options: DefaultPortModelOptions);\r\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\r\n\t\tif (!!name) {\r\n\t\t\toptions = {\r\n\t\t\t\tin: !!options,\r\n\t\t\t\tname: name,\r\n\t\t\t\tlabel: label\r\n\t\t\t};\r\n\t\t}\r\n\t\toptions = options as DefaultPortModelOptions;\r\n\t\tsuper({\r\n\t\t\tlabel: options.label || options.name,\r\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\r\n\t\t\ttype: 'default',\r\n\t\t\t...options\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.in = event.data.in;\r\n\t\tthis.options.label = event.data.label;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tin: this.options.in,\r\n\t\t\tlabel: this.options.label\r\n\t\t};\r\n\t}\r\n\r\n\tcanLinkToPort(port: PortModel): boolean {\r\n\t\t// if (port instanceof DefaultPortModel) {\r\n\t\t// \treturn this.options.in !== port.getOptions().in;\r\n\t\t// }\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcreateLinkModel(): LinkModel {\r\n\t\tconst link = new MyLinkModel();\r\n\t\t// let label = new DefaultLabelModel();\r\n\t\t// label.setLabel(\"I'm a sad label\");\r\n\t\t// link.addLabel(label)\r\n\t\treturn link\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from './MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    protected portsIn: MyPortModel[];\r\n    protected portsOut: MyPortModel[];\r\n    extras: any;\r\n\r\n    constructor(name: string, color: string);\r\n    constructor(options?: DefaultNodeModelOptions);\r\n    constructor(options: any = {}, color?: string) {\r\n        if (typeof options === 'string') {\r\n            options = {\r\n                name: options,\r\n                color: color\r\n            };\r\n        }\r\n        super({\r\n            type: 'default',\r\n            name: 'Untitled',\r\n            color: 'rgb(0,192,255)',\r\n            ...options\r\n        });\r\n        this.portsOut = [];\r\n        this.portsIn = [];\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n    }\r\n\r\n    serialize(): any {\r\n        return {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras\r\n        };\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css, Global } from '@emotion/react';\r\n\r\nexport interface DemoCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nnamespace S {\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\t\theight: 100%;\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\tdisplay: flex;\r\n\r\n\t\t> * {\r\n\t\t\theight: 100%;\r\n\t\t\tmin-height: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\texport const Expand = css`\r\n\t\thtml,\r\n\t\tbody,\r\n\t\t#root {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Global styles={S.Expand} />\r\n\t\t\t\t<S.Container\r\n\t\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</S.Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { MyPortModel } from '../myNode/MyPortModel';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\r\n    OPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class MyEditableNodeModel extends NodeModel<DefaultNodeModelGenerics> {\r\n    portsIn: MyPortModel[] = [];\r\n    portsOut: MyPortModel[] = [];\r\n    content: Object;\r\n    extras: any;\r\n    selectableOptions: string[];\r\n    constructor(name: string, color: string, extras: any, ins: any[], outs: any[], shouldHaveUserName: boolean = true) {\r\n        super({\r\n            type: 'MyEditable',\r\n            name: name,\r\n            color: color,\r\n        });\r\n        this.extras = extras;\r\n\r\n        ins.forEach((method: string) => {\r\n            this.addInPort(method)\r\n        });\r\n        outs.forEach((method: string) => {\r\n            this.addOutPort(method)\r\n        });\r\n\r\n        let userName = shouldHaveUserName ? 'userName' : false;\r\n        const selector = name\r\n        // const selector = name === 'Condition' ? name : outs[0].substring(0, outs[0].indexOf(' ') !== -1 ? outs[0].indexOf(' ') : outs[0].length)\r\n        switch (selector) {\r\n            case 'bool':\r\n                this.content = { name: userName, value: 'true' }\r\n                this.selectableOptions = ['true', 'false'];\r\n                break;\r\n            case 'port':\r\n                this.content = { name: userName, value: '0' }\r\n                this.selectableOptions = Array.from(Array(10).keys()).map(x => x.toString())\r\n                break;\r\n            case 'int':\r\n                this.content = { name: userName, value: '0' }\r\n                this.selectableOptions = ['something', 'went wrong'];\r\n                break;\r\n            case 'Condition':\r\n                this.content = { name: userName, value: '==' }\r\n                this.selectableOptions = ['==', '!=', '<', '>', '<=', '>=', '<=>']\r\n                break;\r\n            default:\r\n                this.content = { name: userName, value: 'value' }\r\n                this.selectableOptions = ['something', 'went wrong'];\r\n                break;\r\n        }\r\n    }\r\n\r\n    doClone(lookupTable: {}, clone: any): void {\r\n        clone.portsIn = [];\r\n        clone.portsOut = [];\r\n        super.doClone(lookupTable, clone);\r\n    }\r\n\r\n    removePort(port: MyPortModel): void {\r\n        super.removePort(port);\r\n        if (port.getOptions().in) {\r\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n        } else {\r\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n        }\r\n    }\r\n\r\n    addPort<T extends MyPortModel>(port: T): T {\r\n        console.log('adding port', port)\r\n        super.addPort(port);\r\n        if (port.getOptions().in) {\r\n            if (this.portsIn.indexOf(port) === -1) {\r\n                // this.portsIn = [port, ...this.portsIn]\r\n                this.portsIn.push(port);\r\n            }\r\n        } else {\r\n            if (this.portsOut.indexOf(port) === -1) {\r\n                this.portsOut.push(port);\r\n            }\r\n        }\r\n        return port;\r\n    }\r\n\r\n    addInPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: true,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.LEFT\r\n        });\r\n        if (!after) {\r\n            this.portsIn.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addOutPort(label: string, after = true): MyPortModel {\r\n        const p = new MyPortModel({\r\n            in: false,\r\n            name: label,\r\n            label: label,\r\n            alignment: PortModelAlignment.RIGHT\r\n        });\r\n        if (!after) {\r\n            this.portsOut.splice(0, 0, p);\r\n        }\r\n        return this.addPort(p);\r\n    }\r\n\r\n    addExtras(extras: any): any {\r\n        this.extras = extras;\r\n        return this.extras\r\n    }\r\n\r\n    deserialize(event: DeserializeEvent<this>) {\r\n        super.deserialize(event);\r\n        this.options.name = event.data.name;\r\n        this.options.color = event.data.color;\r\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\r\n            return this.getPortFromID(id);\r\n        }) as MyPortModel[];\r\n        this.extras = event.data.extras\r\n        this.content = event.data.content\r\n        this.selectableOptions = event.data.selectableOptions\r\n    }\r\n\r\n    serialize(): any {\r\n        return {\r\n            ...super.serialize(),\r\n            name: this.options.name,\r\n            color: this.options.color,\r\n            portsInOrder: _.map(this.portsIn, (port) => {\r\n                return port.getID();\r\n            }),\r\n            portsOutOrder: _.map(this.portsOut, (port) => {\r\n                return port.getID();\r\n            }),\r\n            extras: this.extras,\r\n            content: this.content,\r\n            selectableOptions: this.selectableOptions\r\n        };\r\n    }\r\n\r\n    getInPorts(): MyPortModel[] {\r\n        return this.portsIn;\r\n    }\r\n\r\n    getOutPorts(): MyPortModel[] {\r\n        return this.portsOut;\r\n    }\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n        name: 'Arduino Uno',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 14,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    }, {\r\n        name: 'Arduino Nano',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 6,\r\n            digitalPorts: 22,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Mega',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 16,\r\n            digitalPorts: 54,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Leonardo',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 12,\r\n            digitalPorts: 20,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Arduino Flora',\r\n        color: 'green',\r\n        extras: {\r\n            type: 'controller',\r\n            analogPorts: 4,\r\n            digitalPorts: 8,\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'setup()',\r\n            'loop()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [\r\n            'void digitalWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n        ],\r\n        outs: [\r\n            'int digitalRead(int pin)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Analog I/O',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [\r\n            'void analoglWrite(int pin, int value)',\r\n            'void pinMode(int pin, int mode)',\r\n            'void analogReference(int type)',\r\n        ],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'Time',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [\r\n            'void delay(int ms)',\r\n            'void delayMicroseconds(int us)',\r\n        ],\r\n        outs: [\r\n            'unsigned long micros()',\r\n            'unsigned long millis()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Math',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [\r\n            'void delay(int ms)',\r\n        ],\r\n        outs: [\r\n            'int abs(int x)',\r\n            'int constrain(int x, int a, int b)',\r\n            'int map(int value, int fromLow, int fromHigh, int toLow, int toHigh)',\r\n            'any? max(any x, any y)',\r\n            'any? min(any x, any y)',\r\n            'double pow(float base, float exponent)',\r\n            'double sq(any x)',\r\n            'double sqrt(any x)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Trigonometry',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'double cos(float rad)',\r\n            'double sin(float rad)',\r\n            'double tan(float rad)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Random Numbers',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in'\r\n        },\r\n        ins: [\r\n            'void randomSeed(long seed)',\r\n        ],\r\n        outs: [\r\n            'long random(? max)',\r\n            'long random(? min, ? max)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'true',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'false',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'HIGH',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'LOW',\r\n        color: 'cyan',\r\n        extras: {\r\n            type: 'built-in-constant'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Digital Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'port',\r\n        ]\r\n    }, {\r\n        name: 'Analog Port',\r\n        color: 'white',\r\n        extras: {\r\n            type: 'port'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'port',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Function',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'call',\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n        ]\r\n    }, {\r\n        name: 'Condition',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'trigger',\r\n            'x',\r\n            'y'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Loop',\r\n        extras: {\r\n            type: 'logic'\r\n        },\r\n        color: 'grey',\r\n        outs: [\r\n            'True',\r\n            'False'\r\n        ],\r\n        ins: [\r\n            'startValue',\r\n            'stopValue'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Led',\r\n        color: 'red',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Setter.h'\r\n        },\r\n        ins: [\r\n            'setValue()'\r\n        ],\r\n        outs: []\r\n\r\n    },\r\n    {\r\n        name: 'Temperature Sensor',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Getter.h'\r\n        },\r\n        ins: [],\r\n        outs: [\r\n            'getValue()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'TwoWire Interface',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Wire.h'\r\n        },\r\n        ins: [\r\n            'void begin()',\r\n            'void beginTransmission()',\r\n            'void setClock()',\r\n            'void onReceive()',\r\n            'void onRequest()'\r\n\r\n        ],\r\n        outs: [\r\n            'byte requestFrom()',\r\n            'byte endTransmission()',\r\n            'byte write()',\r\n            'byte available()',\r\n            'byte read()'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Button',\r\n        color: 'blue',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Getter.h'\r\n        },\r\n        ins: [\r\n            'setValue(bool)'\r\n        ],\r\n        outs: []\r\n    },\r\n    {\r\n        name: 'PWM Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Adafruit_PWMServoDriver.h'\r\n        },\r\n        ins: [\r\n            'void begin(uint8_t prescale=0)',\r\n            'void sleep()',\r\n            'void wakeup()',\r\n            'void setExtClk(uint8_t prescale)',\r\n            'void setPWMFreq(float freq)',\r\n            'void setOutputMode(bool totempole)',\r\n            'void setPWM(uint8_t num, uint16_t on, uint16_t off)',\r\n            'void setPin(uint8_t num, uint16_t val, bool invert=false)',\r\n            'void writeMicroseconds(uint8_t num, uint16_t Microseconds)',\r\n            'void setOscillatorFrequency(uint32_t freq)',\r\n\r\n        ],\r\n        outs: [\r\n            'uint8_t getPWM(uint8_t num)',\r\n            'uint8_t readPrescale()',\r\n            'uint32_t getOscillatorFrequency()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Servo',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Servo.h'\r\n        },\r\n        ins: [\r\n            'void detach()',\r\n            'void write(int)',\r\n            'void writeMicroseconds(int)',\r\n        ],\r\n        outs: [\r\n            'uint8_t attach(int)',\r\n            'uint8_t attach(int, int, int)',\r\n            'int read()',\r\n            'int readMicroseconds()',\r\n            'bool attached()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Stepper',\r\n        color: 'orange',\r\n        extras: {\r\n            type: 'component',\r\n            library: 'Stepper.h'\r\n        },\r\n        ins: [\r\n            'Stepper(int, int, int)',\r\n            'Stepper(int, int, int, int, int)',\r\n            'Stepper(int, int, int, int, int, int)',\r\n            'void setSpeed(long whatSpeed)',\r\n            'void step(int number_of_steps)',\r\n        ],\r\n        outs: [\r\n            'int version(void)',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Parameter(s)',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'parameter'\r\n        },\r\n        ins: [\r\n            'in-0'\r\n        ],\r\n        outs: [\r\n            'out-0',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(int)',\r\n        ],\r\n        outs: [\r\n            'int getValue()',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Variable Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'variable'\r\n        },\r\n        ins: [\r\n            'void setValue(bool)',\r\n        ],\r\n        outs: [\r\n            'bool',\r\n        ]\r\n    },\r\n    {\r\n        name: 'Constant Integer',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    }, {\r\n        name: 'Constant Boolean',\r\n        color: 'pink',\r\n        extras: {\r\n            type: 'constant'\r\n        },\r\n        ins: [\r\n            'in'\r\n        ],\r\n        outs: [\r\n            'out',\r\n        ]\r\n    },\r\n]","import React, { useState, useRef, useCallback } from \"react\";\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport { useEditable } from \"use-editable\";\r\n\r\nconst Edit = () => {\r\n    const editorRef = useRef(null);\r\n    const [code, setCode] = useState('');\r\n\r\n    const onEditableChange = useCallback((code) => {\r\n        setCode(code.slice(0, -1));\r\n    }, []);\r\n\r\n    useEditable(editorRef, onEditableChange, {\r\n        disabled: false,\r\n        indentation: 2\r\n    });\r\n\r\n    return (\r\n        <Highlight {...defaultProps} code={code} language=\"jsx\">\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n                <pre className={className} style={style} ref={editorRef}>\r\n                    {tokens.map((line, i) => (\r\n                        <React.Fragment key={i}>\r\n                            {line\r\n                                .filter((token) => !token.empty)\r\n                                .map((token, key) => (\r\n                                    <span {...getTokenProps({ token, key })} />\r\n                                ))}\r\n                            {\"\\n\"}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </pre>\r\n            )}\r\n        </Highlight>\r\n    );\r\n};\r\n\r\nexport default Edit;\r\n","import Prism from \"prismjs\";\r\nimport { useEffect } from \"react\";\r\nimport \"./prism.css\";\r\nimport PrismEdit from \"./PrismEdit\";\r\nimport Xarrow from \"react-xarrows\";\r\n\r\n\r\nfunction generateCode(model: any): { code: string, problems: any[] } {\r\n    let problems: any[] = []\r\n    let code = ''\r\n    const add = (...message: string[]) => {\r\n        message.forEach((m) => {\r\n            code += m;\r\n        });\r\n        code += \"\\n\";\r\n        return code;\r\n    };\r\n    const addOnTop = (...message: string[]) => {\r\n        let top = ''\r\n        message.forEach((m) => {\r\n            top += m;\r\n        });\r\n        code = top + \"\\n\" + code\r\n    };\r\n    const getLink = (linkID: string) => {\r\n        return links.find(l => l.id === linkID)\r\n    }\r\n    const getPort = (nodeID: string, portID: string) => {\r\n        try {\r\n            return nodes.find((n: any) => n.id === nodeID).ports\r\n                .find((p: any) => p.id === portID);\r\n        } catch (error) {\r\n            return \"// Loose end\"\r\n        }\r\n    }\r\n    const getNode = (nodeID: string) => {\r\n        return nodes.find((n: any) => n.id === nodeID)\r\n    }\r\n    const getCoditionalValue = (conditionNode: any, portName: any): string => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === portName).links[0]\r\n            let link = getLink(linkID)\r\n            let port = getPort(link.source, link.sourcePort)\r\n            let parent = getParent(port)\r\n\r\n            if (['variable', 'port'].includes(parent.extras.type)) {\r\n                return parent.content.value\r\n            }\r\n            else if (['component'].includes(parent.extras.type)) {\r\n                return parent.instance + '.' + port.name\r\n            } else {\r\n                return add('Unknown extras.type')\r\n            }\r\n        } catch (error) {\r\n            return '/* Lacking Value */'\r\n        }\r\n    }\r\n    const getOutcome = (conditionNode: any, ifThis = 'True') => {\r\n        try {\r\n            let linkID = conditionNode.ports.find((p: any) => p.name === ifThis).links[0]\r\n            let link = getLink(linkID)\r\n            return getPort(link.target, link.targetPort)\r\n        } catch (error) {\r\n            return { label: '// Lacking Outcome' }\r\n        }\r\n    }\r\n    const getParent = (childNode: any) => {\r\n        return nodes.find((n: any) => n.id === childNode.parentNode)\r\n    }\r\n    const removeTypes = (name: string): string => {\r\n        const functionName = name.substring(name.indexOf(' ') + 1, name.indexOf('(') !== -1 ? name.indexOf('(') : name.length)\r\n        const params = name.substring(name.indexOf('('), name.indexOf(')') - 1).split(',')\r\n        let result = functionName\r\n        params.forEach(param => {\r\n            if (!param.includes('=')) {\r\n                let thisParam = String(param.split(' ').slice(-1))\r\n                result += thisParam\r\n            }\r\n        });\r\n        // console.log('removing types from', name, 'params ', params, ' returning', result)\r\n        return result;\r\n    }\r\n    const callWithParameters = (node: any, ...contents: any) => {\r\n        try {\r\n            if (node.extras.type === 'constant') {\r\n                contents.push(node.content.name)\r\n            } else {\r\n                contents.push(node.content.value)\r\n            }\r\n        } catch (error) {\r\n            console.log('error, no parameter?')\r\n        }\r\n        node.ports.forEach((port: any) => {\r\n            port.links.forEach((l: any) => {\r\n                const link = getLink(l);\r\n                const toPort = getPort(link.target, link.targetPort)\r\n                const toNode = getNode(toPort.parentNode)\r\n                if (!toNode) {\r\n                    warn('Loose link', [node])\r\n                } else if (toNode?.id === node?.id) {//skip as it is the previous link\r\n                    if (toNode.instance) {\r\n                        add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                    }\r\n                } else if (toNode?.extras?.type === 'built-in') {\r\n                    add(removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                } else if (!toNode?.instance) {//points to another variable/port\r\n                    callWithParameters(toNode, ...contents)\r\n                } else {//points to a class instance, we hope it is a method call\r\n                    //todo: check for parameter type and numbers\r\n                    add(toNode.instance + '.' + removeTypes(toPort.name.split(\"(\").shift()) + '(' + contents + ');')\r\n                }\r\n            })\r\n        })\r\n    }\r\n    const processCall = (fromNode: any, fromPort: any, toNode: any, toPort: any) => {\r\n        if (['variable', 'constant', 'parameter'].includes(toNode?.extras?.type)) {\r\n            callWithParameters(toNode)\r\n        } else if (['port'].includes(toNode?.extras?.type)) {\r\n            if (toNode.name.includes('Digital')) {\r\n                usedDigital.push(toNode.content.value)\r\n            } else {\r\n                usedAnalog.push(toNode.content.value)\r\n            }\r\n            callWithParameters(toNode)\r\n        } else {\r\n            if (toNode?.instance) {\r\n                add(toNode.instance + '.' + removeTypes(toPort.name) + '();')\r\n            } else if (fromNode.instance) {\r\n                add(fromNode.instance + '.' + removeTypes(fromPort.name) + '();')\r\n            } else {\r\n                warn('Loose connection', [fromNode])\r\n            }\r\n        }\r\n    }\r\n    const processLink = (l: any) => {\r\n        const link = getLink(l);\r\n        const toPort = getPort(link.target, link.targetPort)\r\n        if (!toPort) return\r\n        const toNode = getNode(toPort.parentNode)\r\n        const fromPort = getPort(link.source, link.sourcePort)\r\n        const fromNode = getNode(fromPort.parentNode)\r\n\r\n        if (toNode?.extras?.type === 'built-in') {\r\n            add(removeTypes(toPort.name) + '()')\r\n        } else if (toNode?.name === \"Function\") {\r\n            add(toNode.content.value, '(', ');')\r\n        } else if (toNode?.name === \"Condition\") {\r\n            const xValue = getCoditionalValue(toNode, 'x')\r\n            const yValue = getCoditionalValue(toNode, 'y')\r\n\r\n            const outcome2 = getOutcome(toNode)\r\n            const toNode2 = getParent(outcome2)\r\n\r\n            const outcome3 = getOutcome(toNode, 'False')\r\n            const toNode3 = getParent(outcome3)\r\n\r\n            add('if (', xValue, ' ' + toNode.content.value + ' ', yValue, ') {')\r\n            if (toNode2) {\r\n                callWithParameters(toNode2)\r\n            } else {\r\n                add('/* Lacking code to be executed if conditional is true */')\r\n            }\r\n            if (toNode3) {\r\n                add('} else {')\r\n                callWithParameters(toNode3)\r\n            }\r\n            add(\"}\\n\");\r\n\r\n        } else {\r\n            processCall(fromNode, fromPort, toNode, toPort)\r\n        }\r\n    }\r\n\r\n    const warn = (message: string, nodes: any[] = [], type: any = 'not used') => {\r\n        problems.push({ message, nodes: nodes });\r\n        return problems\r\n    };\r\n\r\n    if (Object.keys(model).length === 0) {\r\n        return { code: '// Empty Diagram!', problems: [] };\r\n    }\r\n    const links: any[] = []\r\n    Object.entries(model.layers[0].models).forEach((x: any) => {\r\n        links.push(x[1])\r\n    })\r\n    const nodes: any[] = []\r\n    const logics: any[] = []\r\n    const components: any[] = []\r\n    const controllers: any[] = []\r\n    const libraries: any[] = []\r\n    const constants: any[] = []\r\n\r\n    const usedDigital: number[] = []\r\n    const usedAnalog: number[] = []\r\n\r\n    Object.entries(model.layers[1].models).forEach((x: any) => {\r\n        const n = x[1]\r\n        nodes.push(n)\r\n\r\n        let hasLink = false\r\n        n.ports.forEach((port: any) => {\r\n            if (port.links.length > 0) {\r\n                hasLink = true\r\n            }\r\n        });\r\n        if (!hasLink) {\r\n            warn('This component has no links', [n])\r\n        }\r\n        switch (n.extras.type) {\r\n            case 'component':\r\n                n.instance = n.name.toLowerCase().replace(' ', '') + components.filter(c => c.extras.library === n.extras.library).length\r\n                components.push(n)\r\n                if (!libraries.includes(n.extras.library))\r\n                    libraries.push(n.extras.library)\r\n                break\r\n            case 'controller':\r\n                controllers.push(n)\r\n                break\r\n            case 'logic':\r\n                logics.push(n)\r\n                break\r\n            case 'variable':\r\n            case 'parameter':\r\n                if (hasLink) {\r\n                    n.ports.forEach((port: any) => {\r\n                        if (port.links.length > 1) {\r\n                            warn(`This ${n.name.toLowerCase()} has more than one link in the same ${port.label} port.`, [n])\r\n                        } else {\r\n                            if (port.links.length === 0) {\r\n                                // console.log('nodel', model.layers[1].models)\r\n                                warn(`This ${n.name.toLowerCase()} is not being used.`, [n])\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                break\r\n            case 'constant':\r\n                n.content.name = n.content.name.toUpperCase()\r\n                constants.push(n)\r\n                break\r\n        }\r\n    })\r\n\r\n    if (controllers.length === 0) {\r\n        return { code: '', problems: warn('No micro-controller') }\r\n    }\r\n    if (controllers.length > 1) {\r\n        return {\r\n            code: '// Only one Arduino allowed!',\r\n            problems: warn('More than one micro-controller', controllers)\r\n        }\r\n    }\r\n\r\n    let controller = controllers[0]\r\n\r\n    if (libraries.length > 0) {\r\n        add('// Libraries')\r\n        libraries.forEach(lib => {\r\n            add('#include <' + lib + '>')\r\n        });\r\n        add('')\r\n        add('// Objects')\r\n        libraries.forEach(lib => {\r\n            components.forEach(comp => {\r\n                if (comp.extras.library === lib)\r\n                    add(comp.name + ' ' + comp.instance)\r\n            });\r\n        });\r\n    }\r\n\r\n    if (logics.filter(l => l.name === 'Function').length > 0) {\r\n        add('// Functions')\r\n        logics.forEach(logic => {\r\n            if (logic.name === \"Function\") {\r\n                add('void ', logic.content.value, '() {')\r\n                const callPort = logic.ports.find((x: any) => x.alignment === 'right')\r\n                callPort.links.forEach((l: any) => {\r\n                    processLink(l)\r\n                });\r\n                add('}')\r\n            }\r\n        });\r\n    }\r\n\r\n    if (constants.length > 0) {\r\n        add('// Constants')\r\n        constants.forEach(constant => {\r\n            add(`#define ${constant.content.name} ${constant.content.value} //${constant.name}`)\r\n        });\r\n        add('')\r\n    }\r\n\r\n    add(`// Micro-controller's Lifecycle`)\r\n    // let content.value: string | null = null\r\n    controller.ports.forEach((port: any) => {\r\n        add('void ', port.label, \"{\");\r\n        port.links.forEach((l: any) => {\r\n            processLink(l)\r\n        })\r\n        add(\"}\\n\");\r\n    })\r\n\r\n    addOnTop(\"\")\r\n    addOnTop(`Digital ports ${usedDigital.length}/${controller.extras.digitalPorts} ${usedDigital.length > 0 ? `(${usedDigital})` : \"\"}`, \"*/\")\r\n    addOnTop(`Analog ports ${usedAnalog.length}/${controller.extras.analogPorts} ${usedAnalog.length > 0 ? `(${usedAnalog})` : \"\"} `)\r\n    addOnTop(\"/* Code generated for \", controller.name);\r\n\r\n    function indentCode(original: string) {\r\n        let code: any[] = [];\r\n        let level = 0;\r\n        let tab = \"    \";\r\n        original.split(\"\\n\").forEach((line) => {\r\n            if (line.includes(\"}\")) {\r\n                level--;\r\n            }\r\n            code.push(tab.repeat(level) + line);\r\n            if (line.includes(\"{\")) {\r\n                level++;\r\n            }\r\n        });\r\n        return code.join(\"\\n\");\r\n    }\r\n    return { code: indentCode(code), problems };\r\n}\r\nexport default function Code(props: { model: string }) {\r\n    // console.log('CodeComponent render')\r\n    const model = props.model\r\n    let code = ''\r\n    let problems: any[] = []\r\n\r\n    if (model === \"{}\" || model === \"\") {\r\n    } else {\r\n        const generated = generateCode(JSON.parse(model))\r\n        code = generated.code\r\n        let cleanProblems: any[] = []\r\n        generated.problems.forEach(dirty => {\r\n            if (cleanProblems.findIndex(p => p.message === dirty.message) === -1) {\r\n                const sameNodes = Array.from(new Set([].concat(...generated.problems.filter(p => p.message === dirty.message).map(p => p.nodes))))\r\n                cleanProblems.push({ message: dirty.message, nodes: sameNodes })\r\n            }\r\n        });\r\n        problems = cleanProblems\r\n    }\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, [props])\r\n    return (\r\n        <>\r\n            <div className=\"Code\">\r\n                {\r\n                    problems.length !== 0 &&\r\n                    <div style={{ border: 'solid yellow 2px' }}>\r\n                        <div style={{ border: 'solid yellow 1px', fontSize: '1em' }}>\r\n                            Problems!\r\n                        </div>\r\n                        {\r\n                            problems.map((p: any, index: any) => {\r\n                                if (p.nodes.length > 0) {\r\n                                    p.nodes.forEach((node: any) => {\r\n                                        const el = document.querySelector(`[data-nodeid='${node.id}']`)\r\n                                        if (el) el.setAttribute('id', node.id)\r\n                                    });\r\n                                }\r\n                                const problemId = p.nodes.length > 0 ? 'problem-' + p.nodes[0].id + index : 'problem-nodeless' + index\r\n                                return <div id={problemId} key={problemId} style={{ fontSize: '0.6em', border: 'solid white 1px' }}>\r\n                                    Model violation: {p.message}\r\n                                    {p.nodes.map((node: any, index: any) => {\r\n                                        return <div key={index} style={{ display: \"flex\", justifyContent: \"space-evenly\", width: \"100%\" }}>\r\n                                            <Xarrow\r\n                                                strokeWidth={2}\r\n                                                start={problemId}\r\n                                                end={node.id}\r\n                                                color='yellow'\r\n                                            />\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n                <pre >\r\n                    <code className=\"language-clike\">{code}</code>\r\n                </pre>\r\n            </div>\r\n            <PrismEdit />\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { Application } from './Application';\r\nimport { TrayItemWidget } from './TrayItemWidget';\r\nimport { MyNodeModel } from './myNode/MyNodeModel';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { DemoCanvasWidget } from './helpers/DemoCanvasWidget';\r\nimport styled from '@emotion/styled';\r\nimport { MyEditableNodeModel } from './editableNode/MyEditableNodeModel';\r\nimport paletteNodes from '../../paletteNodes';\r\nimport { useState, useEffect } from 'react';\r\nimport Code from '../Code';\r\nimport { Button } from '@material-ui/core';\r\nvar ScrollArea = require('react-scrollbar').default;\r\nexport interface BodyWidgetProps {\r\n\tapp: Application;\r\n}\r\n\r\nnamespace S {\r\n\texport const Body = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-height: 100%;\r\n\t`;\r\n\r\n\texport const Content = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Layer = styled.div`\r\n\t\tposition: relative;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n}\r\n\r\nfunction BodyWidget(props: BodyWidgetProps) {\r\n\tconst [model, setModel] = useState(\"{}\")\r\n\tconst [rerender, setRerender] = React.useState(false);\r\n\r\n\tconst rawModel = props.app.getDiagramEngine().getModel().serialize()\r\n\tconst stringModel = JSON.stringify(rawModel)\r\n\r\n\tconst groups = [...new Set(paletteNodes.map(x => x.extras.type))]\r\n\tuseEffect(() => {\r\n\t\tif (stringModel !== model) {\r\n\t\t\tsetModel(stringModel);\r\n\t\t}\r\n\t}, [stringModel, model]);\r\n\r\n\treturn (\r\n\t\t<div className=\"float-container\" >\r\n\t\t\t<div className=\"float-child-left\">\r\n\t\t\t\t<S.Body>\r\n\t\t\t\t\t<S.Content >\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ScrollArea\r\n\t\t\t\t\t\t\t\tspeed={1}\r\n\t\t\t\t\t\t\t\tclassName=\"area\"\r\n\t\t\t\t\t\t\t\tcontentClassName=\"content\"\r\n\t\t\t\t\t\t\t\thorizontal={false}\r\n\t\t\t\t\t\t\t\tstyle={{ height: '88vh' }}\r\n\t\t\t\t\t\t\t\tsmoothScrolling={true}\r\n\t\t\t\t\t\t\t\tverticalScrollbarStyle={{ backgroundColor: 'white' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgroups.map((group) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <div key={group} style={{ border: 'dashed white 1px', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 style={{ margin: '0px 0px 0px 0px' }}>{group[0].toUpperCase() + group.slice(1) + 's'}:</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t{paletteNodes.filter(n => n.extras.type === group).map((node) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <TrayItemWidget key={node.name} node={node} />\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ScrollArea>\r\n\t\t\t\t\t\t\t<div style={{ marginBottom: '0px' }}>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem('model', JSON.stringify(rawModel));\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('--- Saved ---')\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tprops.app.getActiveDiagram().deserializeModel(\r\n\t\t\t\t\t\t\t\t\t\t\tJSON.parse(localStorage.getItem('model') || '{}'),\r\n\t\t\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine());\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('--- Loaded ---')\r\n\t\t\t\t\t\t\t\t\t\tsetModel(stringModel);\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tLoad\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tprops.app.getActiveDiagram().deserializeModel(\r\n\t\t\t\t\t\t\t\t\t\t\tJSON.parse('{\"id\":\"b61bb7d6-efee-4caf-8b8c-be7dfa140acd\",\"offsetX\":0,\"offsetY\":0,\"zoom\":100,\"gridSize\":0,\"layers\":[{\"id\":\"0df10e02-9519-4a32-9c90-cb48681c24cd\",\"type\":\"diagram-links\",\"isSvg\":true,\"transformed\":true,\"models\":{}},{\"id\":\"c18e36ab-c0ce-4def-8c51-0c09d00cfe0b\",\"type\":\"diagram-nodes\",\"isSvg\":false,\"transformed\":true,\"models\":{}}]}'),\r\n\t\t\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine());\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tClear\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<S.Layer\r\n\t\t\t\t\t\t\tonDrop={(event) => {\r\n\t\t\t\t\t\t\t\tlet data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\r\n\t\t\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\t\t\tlet node: any = {};\r\n\r\n\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().registerListener({\r\n\t\t\t\t\t\t\t\t\t\tlinksUpdated: (l: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"link\\n\");\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tnodesUpdated: (n: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"node\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t\tif (data.extras.type === \"variable\") {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs);\r\n\t\t\t\t\t\t\t\t\t} else if (data.extras.type === \"constant\") {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs);\r\n\t\t\t\t\t\t\t\t\t} else if (data.extras.type === \"parameter\") {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs, false);\r\n\t\t\t\t\t\t\t\t\t} else if (data.extras.type === 'port') {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs, false);\r\n\t\t\t\t\t\t\t\t\t} else if (data.extras.type === \"logic\") {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyEditableNodeModel(data.name, data.color, data.extras, data.ins, data.outs, false);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnode = new MyNodeModel(data.name, data.color);\r\n\t\t\t\t\t\t\t\t\t\tnode.extras = data.extras\r\n\t\t\t\t\t\t\t\t\t\tdata.outs.forEach((method: string) => {\r\n\t\t\t\t\t\t\t\t\t\t\tnode.addOutPort(method)\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tdata.ins.forEach((method: string) => {\r\n\t\t\t\t\t\t\t\t\t\t\tnode.addInPort(method)\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnode.setPosition(props.app.getDiagramEngine().getRelativeMousePoint(event));\r\n\t\t\t\t\t\t\t\t\tprops.app.getDiagramEngine().getModel().addNode(node);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDragOver={(event: any) => {\r\n\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={(event: any) => {\r\n\t\t\t\t\t\t\t\tsetRerender(!rerender);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t\t\t\t<DemoCanvasWidget >\r\n\t\t\t\t\t\t\t\t\t<CanvasWidget engine={props.app.getDiagramEngine()} />\r\n\t\t\t\t\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</S.Layer>\r\n\t\t\t\t\t</S.Content>\r\n\t\t\t\t</S.Body >\r\n\t\t\t</div>\r\n\t\t\t<div className=\"float-child-right\">\r\n\t\t\t\t<Code model={model} />\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n\r\n}\r\nexport default React.memo(BodyWidget)","import { LabelModel } from '@projectstorm/react-diagrams';\r\nimport { BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nexport interface EditableLabelOptions extends BaseModelOptions {\r\n\tvalue?: string;\r\n}\r\n\r\nexport class EditableLabelModel extends LabelModel {\r\n\tvalue: string;\r\n\r\n\tconstructor(options: EditableLabelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\t...options,\r\n\t\t\ttype: 'editable-label'\r\n\t\t});\r\n\t\tthis.value = options.value || '';\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tvalue: this.value\r\n\t\t};\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>): void {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.value = event.data.value;\r\n\t}\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { EditableLabelModel } from './EditableLabelModel';\r\nimport styled from '@emotion/styled';\r\nimport { action } from '@storybook/addon-actions';\r\n\r\nexport interface FlowAliasLabelWidgetProps {\r\n\tmodel: EditableLabelModel;\r\n}\r\n\r\nnamespace S {\r\n\t// NOTE: this CSS rules allows to interact with elements in label\r\n\texport const Label = styled.div`\r\n\t\tuser-select: none;\r\n\t\tpointer-events: auto;\r\n\t`;\r\n}\r\n\r\n// now we can render all what we want in the label\r\nexport const EditableLabelWidget: React.FunctionComponent<FlowAliasLabelWidgetProps> = (props) => {\r\n\tconst [str, setStr] = React.useState(props.model.value);\r\n\r\n\treturn (\r\n\t\t<S.Label>\r\n\t\t\t<input\r\n\t\t\t\tvalue={str}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tconst newVal = event.target.value;\r\n\r\n\t\t\t\t\t// update value both in internal component state\r\n\t\t\t\t\tsetStr(newVal);\r\n\t\t\t\t\t// and in model object\r\n\t\t\t\t\tprops.model.value = newVal;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<button onClick={() => action('model eventDidFire')('You clicked the button')}>Click me!</button>\r\n\t\t</S.Label>\r\n\t);\r\n};\r\n","import * as React from 'react';\r\nimport { AbstractReactFactory, GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams';\r\n\r\nimport { EditableLabelModel } from './EditableLabelModel';\r\nimport { EditableLabelWidget } from './EditableLabelWidget';\r\n\r\nexport class EditableLabelFactory extends AbstractReactFactory<EditableLabelModel, DiagramEngine> {\r\n\tconstructor() {\r\n\t\tsuper('editable-label');\r\n\t}\r\n\r\n\tgenerateModel(): EditableLabelModel {\r\n\t\treturn new EditableLabelModel();\r\n\t}\r\n\r\n\tgenerateReactWidget(event: GenerateWidgetEvent<EditableLabelModel>): JSX.Element {\r\n\t\treturn <EditableLabelWidget model={event.model} />;\r\n\t}\r\n}\r\n","import * as React from \"react\";\r\nimport AutosizeInput from 'react-input-autosize';\r\n\r\nexport interface IEditableSingleFieldProps {\r\n  node: any;\r\n  beingEdited: boolean;\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\nconst Editor = ({\r\n  content,\r\n  onFocus,\r\n  onChange,\r\n  onBlurOrEnter,\r\n}: {\r\n  content: string;\r\n  onFocus: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n}) => {\r\n  return (\r\n    <AutosizeInput\r\n      autoFocus\r\n      inputStyle={{\r\n        padding: 1,\r\n        borderStyle: \"dotted\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n      }}\r\n      type=\"text\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      onBlur={onBlurOrEnter}\r\n      onKeyDown={(event: any) => {\r\n        if (event.keyCode === 13) onBlurOrEnter();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class EditableSingleField extends React.Component<\r\n  IEditableSingleFieldProps\r\n> {\r\n  constructor(props: IEditableSingleFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n    // console.log('node', this.props.node)\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onFocus={() => this.props.node.setLocked(true)}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={() => {\r\n              this.props.node.setLocked(false)\r\n              this.props.onBlurOrEnter()\r\n            }}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface ISelectableFieldProps {\r\n  beingEdited: boolean;\r\n  options: Array<string>\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  editingKey: string;\r\n  elementKey: string;\r\n  isAbstract?: boolean;\r\n}\r\n\r\nexport interface ISelectableFieldState { }\r\n\r\nconst Editor = ({\r\n  content,\r\n  onChange,\r\n  onBlurOrEnter,\r\n  options\r\n}: {\r\n  content: string;\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  onBlurOrEnter: () => void;\r\n  options: Array<string>;\r\n}) => {\r\n  return (\r\n    <select name=\"values\" id=\"values\"\r\n      value={content}\r\n      onChange={onChange}\r\n      onBlur={onBlurOrEnter}\r\n    >\r\n      {\r\n        options.map((x, y) =>\r\n          <option key={y}>{x}</option>)\r\n      }\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default class SelectableField extends React.Component<\r\n  ISelectableFieldProps,\r\n  ISelectableFieldState\r\n> {\r\n  constructor(props: ISelectableFieldProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.props.beingEdited &&\r\n          this.props.editingKey === this.props.elementKey ? (\r\n          <Editor\r\n            content={this.props.content}\r\n            onChange={this.props.onChange}\r\n            onBlurOrEnter={this.props.onBlurOrEnter}\r\n            options={this.props.options}\r\n          />\r\n        ) : (\r\n          <p\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontStyle: this.props.isAbstract ? \"italic\" : \"normal\"\r\n            }}\r\n          >\r\n            {this.props.content}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n//@ts-nocheck\r\nimport * as React from \"react\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport \"./MyEditableNodeWidgedStyle.css\";\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { DiagramEngine, DefaultPortLabel } from \"@projectstorm/react-diagrams\";\r\nimport styled from '@emotion/styled';\r\n\r\nimport EditableSingleField from \"../custom-node/custom_components/EditableSingleField\";\r\nimport SelectableField from \"../custom-node/custom_components/SelectableField\";\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nnamespace S {\r\n  export const Node = styled.div<{ background: string; selected: boolean }>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: sans-serif;\r\n\t\tcolor: white;\r\n\t\tborder: solid 2px black;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 11px;\r\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\r\n\t`;\r\n\r\n  export const Title = styled.div`\r\n\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\tdisplay: flex;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n  export const TitleName = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 5px 5px;\r\n\t`;\r\n\r\n  export const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\r\n\t`;\r\n\r\n  export const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport interface MyEditableWidgetProps {\r\n  nodeModel: MyEditableNodeModel;\r\n  engine: DiagramEngine\r\n}\r\n\r\nexport interface MyEditableWidgetState {\r\n  content: string;\r\n  height: number;\r\n  width: number;\r\n  editingSomething: boolean;\r\n  editingKey: string;\r\n}\r\nexport class MyEditableNodeWidget extends React.Component<\r\n  MyEditableWidgetProps,\r\n  MyEditableWidgetState\r\n> {\r\n  private divElement: HTMLDivElement;\r\n\r\n  constructor(props: MyEditableWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: { name: '', value: '' },\r\n      variableType: '',\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    };\r\n\r\n    //binding the methods to this element\r\n    this._editableObjectDoubleClick = this._editableObjectDoubleClick.bind(this);\r\n    this._contentOnChange = this._contentOnChange.bind(this);\r\n    this._onBlurOrEnter = this._onBlurOrEnter.bind(this);\r\n  }\r\n  generatePort = (port) => {\r\n    return <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\r\n  };\r\n\r\n  /**\r\n   * Pass this on onDoubleClick.\r\n   * You change the states to make the fields know it's in edit mode, and tell who is in the edit mode\r\n   */\r\n  _editableObjectDoubleClick = (content: string) => {\r\n    if (this.state.editingSomething) return;\r\n    this.setState({\r\n      editingSomething: true,\r\n      editingKey: content\r\n    });\r\n  };\r\n\r\n  /**\r\n   * What you'll do when the content is changed\r\n   * Usually, you update the model and the state\r\n   */\r\n  _contentOnChange = (evt: React.FormEvent<HTMLInputElement>) => {\r\n\r\n    this.props.nodeModel.content[this.state.editingKey] = evt.currentTarget.value;\r\n    this.setState({ content: evt.currentTarget.value });\r\n  };\r\n\r\n  /**\r\n   * What you will do when the InputField lost focus or you press enter\r\n   * Usually, you change the states to make the fields know it's not in edit mode\r\n   */\r\n  _onBlurOrEnter = () => {\r\n    this.setState({\r\n      editingSomething: false,\r\n      editingKey: \"\"\r\n    });\r\n  };\r\n\r\n  /**\r\n   * copy atributes from nodeModel\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({\r\n      content: this.props.nodeModel.content\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <S.Node\r\n        data-default-node-name={this.props.nodeModel.getOptions().name}\r\n        selected={this.props.nodeModel.isSelected()}\r\n        background={this.props.nodeModel.getOptions().color}>\r\n        <S.Title>\r\n          {this.props.nodeModel.content.name && <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"name\");\r\n                  }}\r\n                >\r\n                  <EditableSingleField\r\n                    node={this.props.nodeModel}\r\n                    elementKey=\"name\"\r\n                    editingKey={this.state.editingKey}\r\n                    beingEdited={this.state.editingSomething}\r\n                    content={this.props.nodeModel.content.name}\r\n                    onChange={this._contentOnChange}\r\n                    onBlurOrEnter={this._onBlurOrEnter}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n          <S.TitleName>\r\n            {this.props.nodeModel.getOptions().name}:\r\n            <a data-tip data-for={'tip-' + this.props.nodeModel.getOptions().name} >\r\n              <OpenInNewIcon style={{ fontSize: '1rem', marginBottom: '-5px' }} />\r\n            </a>\r\n            <ReactTooltip\r\n              className=\"interactableTooltip\"\r\n              id={'tip-' + this.props.nodeModel.getOptions().name}\r\n              type='light'\r\n              place=\"top\"\r\n              delayHide={500}\r\n              effect=\"solid\"\r\n            >\r\n              Usages:\r\n              <Button onClick={() => {\r\n                const next = this.props.nodeModel.portsIn.length\r\n                this.props.nodeModel.addInPort('in-' + next, true)\r\n                this.props.nodeModel.addOutPort('out-' + next, true)\r\n                this.props.engine.repaintCanvas();\r\n              }}> + </Button>\r\n\r\n              <Button onClick={() => {\r\n                if (this.props.nodeModel.portsIn.length > 1) {\r\n                  let found = false\r\n                  let index = this.props.nodeModel.portsIn.length - 1;\r\n                  for (; index >= 0; index--) {\r\n                    const portIn = this.props.nodeModel.portsIn[index]\r\n                    const portOut = this.props.nodeModel.portsOut[index]\r\n                    if (!found &&\r\n                      (Object.keys(portIn.links).length === 0 ||\r\n                        Object.keys(portOut.links).length === 0)) {\r\n                      this.props.nodeModel.removePort(portIn)\r\n                      this.props.nodeModel.removePort(portOut)\r\n                      found = true\r\n                    }\r\n                  }\r\n                }\r\n                this.props.engine.repaintCanvas();\r\n              }}> - </Button>\r\n            </ReactTooltip>\r\n          </S.TitleName>\r\n          <div className={\"editable-node\"}\r\n            ref={divElement => (this.divElement = divElement)}>\r\n            <div className=\"editable-border\">\r\n              <div className=\"editable-header\">\r\n                <div\r\n                  onDoubleClick={() => {\r\n                    this._editableObjectDoubleClick(\"value\");\r\n                  }}\r\n                >\r\n                  {(this.props.nodeModel.portsOut[0].options.name === 'bool' ||\r\n                    this.props.nodeModel.portsOut[0].options.name === 'port' ||\r\n                    this.props.nodeModel.getOptions().name === 'Condition'\r\n                  ) ?\r\n                    <SelectableField\r\n                      elementKey=\"value\"\r\n                      options={this.props.nodeModel.selectableOptions}\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                    :\r\n                    <EditableSingleField\r\n                      node={this.props.nodeModel}\r\n                      elementKey=\"value\"\r\n                      editingKey={this.state.editingKey}\r\n                      beingEdited={this.state.editingSomething}\r\n                      content={this.props.nodeModel.content.value}\r\n                      onChange={this._contentOnChange}\r\n                      onBlurOrEnter={this._onBlurOrEnter}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </S.Title>\r\n        <S.Ports>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getInPorts(), this.generatePort)}</S.PortsContainer>\r\n          <S.PortsContainer>{_.map(this.props.nodeModel.getOutPorts(), this.generatePort)}</S.PortsContainer>\r\n        </S.Ports>\r\n      </S.Node>\r\n    );\r\n  }\r\n}\r\n","import { MyEditableNodeWidget } from \"./MyEditableNodeWidget\";\r\nimport { MyEditableNodeModel } from \"./MyEditableNodeModel\";\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core'\r\nimport { DiagramEngine } from \"@projectstorm/react-diagrams\";\r\n\r\nexport class MyEditableNodeFactory extends AbstractReactFactory<MyEditableNodeModel, DiagramEngine> {\r\n\tgenerateModel(event: import(\"@projectstorm/react-canvas-core\").GenerateModelEvent): MyEditableNodeModel {\r\n\t\treturn new MyEditableNodeModel('trashPort', '0', '0', [], []);\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(\"MyEditable\");\r\n\t}\r\n\r\n\tgenerateReactWidget(event: { model: MyEditableNodeModel }): JSX.Element {\r\n\t\treturn <MyEditableNodeWidget nodeModel={event.model} engine={this.engine} />;\r\n\t}\r\n}\r\n","import * as SRD from '@projectstorm/react-diagrams';\r\nimport { EditableLabelFactory } from './custom-label/EditableLabelFactory';\r\nimport { MyEditableNodeFactory } from './editableNode/MyEditableNodeFactory';\r\n\r\n/**\r\n * @author Dylan Vorster\r\n */\r\nexport class Application {\r\n\tprotected activeModel: any;//SRD.DiagramModel\r\n\tprotected diagramEngine: SRD.DiagramEngine;\r\n\r\n\tconstructor() {\r\n\t\tthis.diagramEngine = SRD.default();\r\n\t\tthis.diagramEngine.getLabelFactories().registerFactory(new EditableLabelFactory());\r\n\t\tthis.diagramEngine.getNodeFactories().registerFactory(new MyEditableNodeFactory());\r\n\t\tthis.newModel();\r\n\t}\r\n\r\n\tpublic newModel() {\r\n\t\tthis.activeModel = new SRD.DiagramModel();\r\n\t\tthis.diagramEngine.setModel(this.activeModel);\r\n\t}\r\n\r\n\tpublic getActiveDiagram(): SRD.DiagramModel {\r\n\t\treturn this.activeModel;\r\n\t}\r\n\r\n\tpublic getDiagramEngine(): SRD.DiagramEngine {\r\n\t\treturn this.diagramEngine;\r\n\t}\r\n}\r\n","import BodyWidget from '../components/react-diagrams/BodyWidget';\r\nimport { Application } from '../components/react-diagrams/Application';\r\n\r\nexport default function EditorPage() {\r\n  var app = new Application();\r\n  return <BodyWidget app={app} />\r\n}","export default __webpack_public_path__ + \"static/media/flow.43bedc99.svg\";","export default __webpack_public_path__ + \"static/media/cym_s.cbee123b.svg\";","import flowDiagram from '../assets/flow.svg'\r\nimport cym_s from '../assets/cym_s.svg'\r\nexport default function HomePage() {\r\n    return <div>\r\n        <h2>\r\n            Welcome to MDD4CPS!\r\n        </h2>\r\n        <img src={flowDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n        <img src={cym_s} alt=\"CYM-S\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n    </div>\r\n}","// import modelsDiagram from '../assets/cym_s_extended.svg'\r\n// import stateDiagram from '../assets/cym_d.svg'\r\n// export default function ModelsPage() {\r\n//     return <div>\r\n//         <img src={modelsDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '100%' }} />\r\n//         <img src={stateDiagram} alt=\"Architecture Diagram\" style={{ maxHeight: '80vh', maxWidth: '90%' }} />\r\n//     </div>\r\n// }\r\n\r\n// App.js\r\nimport React from 'react';\r\n\r\nimport * as go from 'gojs';\r\nimport { ReactDiagram } from 'gojs-react';\r\n\r\nimport './go.css';  // contains .diagram-component CSS\r\n\r\n// ...\r\n\r\n/**\r\n * Diagram initialization method, which is passed to the ReactDiagram component.\r\n * This method is responsible for making the diagram and initializing the model and any templates.\r\n * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\r\n */\r\nfunction initDiagram() {\r\n    const $ = go.GraphObject.make;\r\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n    const myDiagram = $(go.Diagram,\r\n        {\r\n            \"undoManager.isEnabled\": true,\r\n            layout: $(go.TreeLayout,\r\n                { // this only lays out in trees nodes connected by \"generalization\" links\r\n                    angle: 90,\r\n                    path: go.TreeLayout.PathSource,  // links go from child to parent\r\n                    setsPortSpot: false,  // keep Spot.AllSides for link connection spot\r\n                    setsChildPortSpot: false,  // keep Spot.AllSides\r\n                    // nodes not connected by \"generalization\" links are laid out horizontally\r\n                    arrangement: go.TreeLayout.ArrangementHorizontal,\r\n\r\n\r\n                })\r\n        });\r\n\r\n    // show visibility or access as a single character at the beginning of each property or method\r\n    function convertVisibility(v: any) {\r\n        switch (v) {\r\n            case \"public\": return \"+\";\r\n            case \"private\": return \"-\";\r\n            case \"protected\": return \"#\";\r\n            case \"package\": return \"~\";\r\n            default: return v;\r\n        }\r\n    }\r\n\r\n    // the item template for properties\r\n    var propertyTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // property visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // property name, underlined if scope==\"class\" to indicate static property\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // property type, if known\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay()),\r\n            // property default value, if any\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false },\r\n                new go.Binding(\"text\", \"default\", s => s ? \" = \" + s : \"\"))\r\n        );\r\n\r\n    // the item template for methods\r\n    var methodTemplate =\r\n        $(go.Panel, \"Horizontal\",\r\n            // method visibility/access\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: false, width: 12 },\r\n                new go.Binding(\"text\", \"visibility\", convertVisibility)),\r\n            // method name, underlined if scope==\"class\" to indicate static method\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n                new go.Binding(\"isUnderline\", \"scope\", s => s[0] === 'c')),\r\n            // method parameters\r\n            $(go.TextBlock, \"()\",\r\n                // this does not permit adding/editing/removing of parameters via inplace edits\r\n                new go.Binding(\"text\", \"parameters\", function (parr) {\r\n                    var s = \"(\";\r\n                    for (var i = 0; i < parr.length; i++) {\r\n                        var param = parr[i];\r\n                        if (i > 0) s += \", \";\r\n                        s += param.name + \": \" + param.type;\r\n                    }\r\n                    return s + \")\";\r\n                })),\r\n            // method return type, if any\r\n            $(go.TextBlock, \"\",\r\n                new go.Binding(\"text\", \"type\", t => t ? \": \" : \"\")),\r\n            $(go.TextBlock,\r\n                { isMultiline: false, editable: true },\r\n                new go.Binding(\"text\", \"type\").makeTwoWay())\r\n        );\r\n\r\n    // this simple template does not have any buttons to permit adding or\r\n    // removing properties or methods, but it could!\r\n    myDiagram.nodeTemplate =\r\n        $(go.Node, \"Auto\",\r\n            {\r\n                locationSpot: go.Spot.Center,\r\n                fromSpot: go.Spot.AllSides,\r\n                toSpot: go.Spot.AllSides\r\n            },\r\n            $(go.Shape, { fill: \"lightyellow\" }),\r\n            $(go.Panel, \"Table\",\r\n                { defaultRowSeparatorStroke: \"black\" },\r\n                // header\r\n                $(go.TextBlock,\r\n                    {\r\n                        row: 0, columnSpan: 2, margin: 3, alignment: go.Spot.Center,\r\n                        font: \"bold 12pt sans-serif\",\r\n                        isMultiline: false, editable: true\r\n                    },\r\n                    new go.Binding(\"text\", \"name\").makeTwoWay()),\r\n                // properties\r\n                $(go.TextBlock, \"Properties\",\r\n                    { row: 1, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"PROPERTIES\")),\r\n                $(go.Panel, \"Vertical\", { name: \"PROPERTIES\" },\r\n                    new go.Binding(\"itemArray\", \"properties\"),\r\n                    {\r\n                        row: 1, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: propertyTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"PROPERTIES\",\r\n                    { row: 1, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"properties\", arr => arr.length > 0)),\r\n                // methods\r\n                $(go.TextBlock, \"Methods\",\r\n                    { row: 2, font: \"italic 10pt sans-serif\" },\r\n                    new go.Binding(\"visible\", \"visible\", v => !v).ofObject(\"METHODS\")),\r\n                $(go.Panel, \"Vertical\", { name: \"METHODS\" },\r\n                    new go.Binding(\"itemArray\", \"methods\"),\r\n                    {\r\n                        row: 2, margin: 3, stretch: go.GraphObject.Fill,\r\n                        defaultAlignment: go.Spot.Left, background: \"lightyellow\",\r\n                        itemTemplate: methodTemplate\r\n                    }\r\n                ),\r\n                $(\"PanelExpanderButton\", \"METHODS\",\r\n                    { row: 2, column: 1, alignment: go.Spot.TopRight, visible: false },\r\n                    new go.Binding(\"visible\", \"methods\", arr => arr.length > 0))\r\n            )\r\n        );\r\n\r\n    function convertIsTreeLink(r: string) {\r\n        return r === \"generalization\";\r\n    }\r\n\r\n    function convertFromArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    function convertToArrow(r: any) {\r\n        switch (r) {\r\n            case \"generalization\": return \"Triangle\";\r\n            case \"aggregation\": return \"StretchedDiamond\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    myDiagram.linkTemplate =\r\n        $(go.Link,\r\n            { routing: go.Link.Orthogonal },\r\n            new go.Binding(\"isLayoutPositioned\", \"relationship\", convertIsTreeLink),\r\n            $(go.Shape),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"fromArrow\", \"relationship\", convertFromArrow)),\r\n            $(go.Shape, { scale: 1.3, fill: \"white\" },\r\n                new go.Binding(\"toArrow\", \"relationship\", convertToArrow))\r\n        );\r\n\r\n\r\n    myDiagram.model = new go.GraphLinksModel(\r\n        {\r\n            linkKeyProperty: 'key',\r\n            copiesArrays: true,\r\n            copiesArrayObjects: true,\r\n        });\r\n\r\n    return myDiagram;\r\n}\r\n\r\n/**\r\n * This function handles any changes to the GoJS model.\r\n * It is here that you would make any updates to your React state, which is dicussed below.\r\n */\r\nfunction handleModelChange(changes: any) {\r\n    alert('GoJS model changed!');\r\n}\r\n\r\n// render function...\r\nexport default function ModelsPage() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // setup a few example class nodes and relationships\r\n    let nodedata = [\r\n        {\r\n            key: 1,\r\n            name: \"BankAccount\",\r\n            properties: [\r\n                { name: \"owner\", type: \"String\", visibility: \"public\" },\r\n                { name: \"balance\", type: \"Currency\", visibility: \"public\", default: \"0\" }\r\n            ],\r\n            methods: [\r\n                { name: \"deposit\", parameters: [{ name: \"amount\", type: \"Currency\" }], visibility: \"public\" },\r\n                { name: \"withdraw\", parameters: [{ name: \"amount\", type: \"Currency\" }], visibility: \"public\" }\r\n            ]\r\n        },\r\n        {\r\n            key: 11,\r\n            name: \"Person\",\r\n            properties: [\r\n                { name: \"name\", type: \"String\", visibility: \"public\" },\r\n                { name: \"birth\", type: \"Date\", visibility: \"protected\" }\r\n            ],\r\n            methods: [\r\n                { name: \"getCurrentAge\", type: \"int\", visibility: \"public\" }\r\n            ]\r\n        },\r\n        {\r\n            key: 12,\r\n            name: \"Student\",\r\n            properties: [\r\n                { name: \"classes\", type: \"List\", visibility: \"public\" }\r\n            ],\r\n            methods: [\r\n                { name: \"attend\", parameters: [{ name: \"class\", type: \"Course\" }], visibility: \"private\" },\r\n                { name: \"sleep\", visibility: \"private\" }\r\n            ]\r\n        },\r\n        {\r\n            key: 13,\r\n            name: \"Professor\",\r\n            properties: [\r\n                { name: \"classes\", type: \"List\", visibility: \"public\" }\r\n            ],\r\n            methods: [\r\n                { name: \"teach\", parameters: [{ name: \"class\", type: \"Course\" }], visibility: \"private\" }\r\n            ]\r\n        },\r\n        {\r\n            key: 14,\r\n            name: \"Course\",\r\n            properties: [\r\n                { name: \"name\", type: \"String\", visibility: \"public\" },\r\n                { name: \"description\", type: \"String\", visibility: \"public\" },\r\n                { name: \"professor\", type: \"Professor\", visibility: \"public\" },\r\n                { name: \"location\", type: \"String\", visibility: \"public\" },\r\n                { name: \"times\", type: \"List\", visibility: \"public\" },\r\n                { name: \"prerequisites\", type: \"List\", visibility: \"public\" },\r\n                { name: \"students\", type: \"List\", visibility: \"public\" }\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ReactDiagram\r\n            initDiagram={initDiagram}\r\n            divClassName='diagram-component'\r\n            nodeDataArray={nodedata}\r\n            linkDataArray={[\r\n                { key: -1, from: 12, to: 11, relationship: \"generalization\" },\r\n                { key: -2, from: 13, to: 11, relationship: \"generalization\" },\r\n                { key: -3, from: 14, to: 13, relationship: \"aggregation\" }\r\n            ]}\r\n            onModelChange={handleModelChange}\r\n        />\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/transformations.40b625af.png\";","import transformations from '../assets/transformations.png'\r\nexport default function TransformationsPage() {\r\n    return <div>\r\n        <img src={transformations} alt=\"Transformations\" style={{ maxHeight: '80vh', maxWidth: '90%' }} />\r\n    </div>\r\n}","import { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport paletteNodes from \"../paletteNodes\";\r\nimport NodeDiagram from \"../components/NodeDiagram\";\r\n\r\nexport default function PalettePage() {\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, [])\r\n    return <div>\r\n        {\r\n            paletteNodes.map((node) => {\r\n                return <div key={node.name} className=\"grid-container\" style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: ' 1fr 1fr',\r\n                    gridGap: '20px'\r\n                }}>\r\n                    <pre >\r\n                        <code className=\"language-clike\">{JSON.stringify(node, null, \"\\t\")}</code>\r\n                    </pre>\r\n                    <NodeDiagram node={node} canEdit={true} />\r\n                </div>\r\n            }\r\n            )\r\n        }\r\n    </div>\r\n}","\r\nexport default function PalettePage() {\r\n    return <>\r\n        <h3>Planned Settings</h3>\r\n        <ul>\r\n            <li>Show/Hide copy button on code panel</li>\r\n            <li>Show/Hide all comments</li>\r\n            <li>Show/Hide all warnings</li>\r\n            <li>Show/Hide all arrows</li>\r\n            <li>Show/Hide diagram overlay</li>\r\n            <li>Show/Hide palette expansion panels</li>\r\n            <li></li>\r\n            <li>Enable/Disables constant capitalization</li>\r\n            <li></li>\r\n            <li>Enable code editing (breaks diagram to code relation)</li>\r\n            <li></li>\r\n            <li>Enforce typings</li>\r\n            <li>Enforce lose ends</li>\r\n            <li>Enforce sequencial port usage</li>\r\n            <li>Remove link restrictions</li>\r\n            <li></li>\r\n            <li>Reset all settings on this page</li>\r\n            <li>Reset custom palette</li>\r\n            <li>Erase all localStorage data</li>\r\n            <li></li>\r\n            <li>Contact info</li>\r\n        </ul>\r\n\r\n    </>\r\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport EditorPage from './pages/Editor'\r\nimport HomePage from './pages/Home';\r\nimport ModelsPage from './pages/Models';\r\nimport TransformationsPage from './pages/Transformations';\r\nimport PalettePage from './pages/Palette';\r\nimport SettingsPage from './pages/Settings';\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Routes >\r\n          <Route path='/mdd4/' element={<HomePage />} />\r\n          <Route path='/mdd4/models' element={<ModelsPage />} />\r\n          <Route path='/mdd4/transformations' element={<TransformationsPage />} />\r\n          <Route path='/mdd4/palette' element={<PalettePage />} />\r\n          <Route path='/mdd4/editor' element={<EditorPage />} />\r\n          <Route path='/mdd4/settings' element={<SettingsPage />} />\r\n        </Routes>\r\n        <NavigationBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}